<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_ramuMIZXEe-bUZ-w3fFkrg" name="WorkLoad">
    <eAnnotations xmi:id="_remdYIZXEe-bUZ-w3fFkrg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_remdYYZXEe-bUZ-w3fFkrg" source="codegen">
        <details xmi:id="_remdYoZXEe-bUZ-w3fFkrg" key="codegenDirectory" value="/cs2820-fall24/src"/>
        <details xmi:id="_snfYEIZXEe-bUZ-w3fFkrg" key="AssociatedSourceCode" value="/cs2820-fall24/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall24/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall24/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Flow.java;438145269/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall24/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Program.java;4288988359/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramVisualization.java;416137349/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;1127760875/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityParameters.java;2925534695/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;872941976/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationFactory.java;3425614056/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationImplementation.java;3719702118/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Warp.java;2537215077/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpSystem.java;3763381239/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoad.java;1629110081/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadDescription.java;4006652322/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-fall24/test/edu/uiowa/cs/warp/WorkLoadTest.java;1047069810/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_dGw8QIvVEe-33faTEbFp4w" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_dGw8QYvVEe-33faTEbFp4w" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_21SkIJZCEe-S5LJtyBrH7w" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_21SkIZZCEe-S5LJtyBrH7w" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="true"/>
          <details xmi:id="_21SkIpZCEe-S5LJtyBrH7w" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_r3pPhYZXEe-bUZ-w3fFkrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_r3pPhoZXEe-bUZ-w3fFkrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_r3pPh4ZXEe-bUZ-w3fFkrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_r3pPiIZXEe-bUZ-w3fFkrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_r3pPiYZXEe-bUZ-w3fFkrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_r3pPioZXEe-bUZ-w3fFkrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_r3pPi4ZXEe-bUZ-w3fFkrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_r3p2kIZXEe-bUZ-w3fFkrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_r3p2kYZXEe-bUZ-w3fFkrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_r3SDIIZXEe-bUZ-w3fFkrg" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_r3SDIYZXEe-bUZ-w3fFkrg" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_r3SDIoZXEe-bUZ-w3fFkrg" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_r3SqMYZXEe-bUZ-w3fFkrg" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_r3sS0IZXEe-bUZ-w3fFkrg" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_r-llAoZXEe-bUZ-w3fFkrg" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_r38xgIZXEe-bUZ-w3fFkrg" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_r-zneIZXEe-bUZ-w3fFkrg" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_r39_oIZXEe-bUZ-w3fFkrg" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_r-0OhoZXEe-bUZ-w3fFkrg" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_r-01kYZXEe-bUZ-w3fFkrg" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5BvkIZXEe-bUZ-w3fFkrg" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_r_QTYIZXEe-bUZ-w3fFkrg" general="_r-T4MIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_1iMIZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_1iMYZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAV4gIZXEe-bUZ-w3fFkrg" name="AbstractMap" specification="_r5CWoIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAV4gYZXEe-bUZ-w3fFkrg" type="_r5BvkIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5CWoIZXEe-bUZ-w3fFkrg" name="AbstractMap" method="_sAV4gIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5CWoYZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5CWooZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5CWo4ZXEe-bUZ-w3fFkrg" type="_r5BvkIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5CWpIZXEe-bUZ-w3fFkrg" name="Activation">
              <generalization xmi:id="_r-W7hoZXEe-bUZ-w3fFkrg" general="_r6UJAIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_1iMoZXEe-bUZ-w3fFkrg" name="coordinators" type="_r-UfQIZXEe-bUZ-w3fFkrg" isReadOnly="true" association="_sA7uYIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_2JQYZXEe-bUZ-w3fFkrg" name="edges" type="_r-UfQIZXEe-bUZ-w3fFkrg" isReadOnly="true" association="_sA8VcYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_2JQ4ZXEe-bUZ-w3fFkrg" name="additionalScheduleTimes" type="_r-UfQIZXEe-bUZ-w3fFkrg" isReadOnly="true" association="_sA8VdIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_2JRYZXEe-bUZ-w3fFkrg" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r_2JRoZXEe-bUZ-w3fFkrg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_r_Q6cYZXEe-bUZ-w3fFkrg" client="_r5CWpIZXEe-bUZ-w3fFkrg" supplier="_r_QTY4ZXEe-bUZ-w3fFkrg" contract="_r_QTY4ZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAV4goZXEe-bUZ-w3fFkrg" name="Activation" specification="_r5C9sIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAV4g4ZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAV4hIZXEe-bUZ-w3fFkrg" type="_r5CWpIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWfkIZXEe-bUZ-w3fFkrg" name="Activation" specification="_r-VGUYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWfkYZXEe-bUZ-w3fFkrg" name="elem" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAWfkoZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAWfk4ZXEe-bUZ-w3fFkrg" type="_r5CWpIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWflIZXEe-bUZ-w3fFkrg" name="clone" specification="_r5C9tYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWflYZXEe-bUZ-w3fFkrg" type="_r5CWpIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWfloZXEe-bUZ-w3fFkrg" name="getEdgesByReleaseTime" specification="_r5DkwIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWfl4ZXEe-bUZ-w3fFkrg" type="_r5vhRoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWfmIZXEe-bUZ-w3fFkrg" name="getEdgesByLatestReleaseTime" specification="_r5DkwoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWfmYZXEe-bUZ-w3fFkrg" type="_r5vhRoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWfmoZXEe-bUZ-w3fFkrg" name="getEdgesByPeriod" specification="_r5DkxIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWfm4ZXEe-bUZ-w3fFkrg" type="_r5vhRoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWfnIZXEe-bUZ-w3fFkrg" name="getEdgesByDeadline" specification="_r5EL0IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWfnYZXEe-bUZ-w3fFkrg" type="_r5vhRoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWfnoZXEe-bUZ-w3fFkrg" name="getEdgesByPriority" specification="_r5EL0oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWfn4ZXEe-bUZ-w3fFkrg" type="_r5vhRoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWfoIZXEe-bUZ-w3fFkrg" name="addEdges" specification="_r_Q6c4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWfoYZXEe-bUZ-w3fFkrg" name="edges" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWfooZXEe-bUZ-w3fFkrg" name="addEdge" specification="_r-VtYIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWfo4ZXEe-bUZ-w3fFkrg" name="edge" type="_r5QZGoZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWfpIZXEe-bUZ-w3fFkrg" name="increaseEdgePhases" specification="_r5EL1IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWfpYZXEe-bUZ-w3fFkrg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWfpoZXEe-bUZ-w3fFkrg" name="updatePriorityAndRelease" specification="_r5Ey4IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWfp4ZXEe-bUZ-w3fFkrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWfqIZXEe-bUZ-w3fFkrg" name="addConflict" specification="_r5Ey4oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWfqYZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWfqoZXEe-bUZ-w3fFkrg" name="addConflicts" specification="_r_RhgYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWfq4ZXEe-bUZ-w3fFkrg" name="conflicts" type="_r-UfRoZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWfrIZXEe-bUZ-w3fFkrg" name="addCoordinator" specification="_r5Ey5IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWfrYZXEe-bUZ-w3fFkrg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAWfroZXEe-bUZ-w3fFkrg" name="addCoordinators" specification="_r_RhhIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAWfr4ZXEe-bUZ-w3fFkrg" name="coordinators" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGoIZXEe-bUZ-w3fFkrg" name="addScheduleTimes" specification="_r_SIkYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGoYZXEe-bUZ-w3fFkrg" name="scheduleTime" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGooZXEe-bUZ-w3fFkrg" name="getNextScheduleTime" specification="_r5Ey5oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGo4ZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAXGpIZXEe-bUZ-w3fFkrg" type="_r53dG4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGpYZXEe-bUZ-w3fFkrg" name="getMatchingEndTime" specification="_r5FZ8IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGpoZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAXGp4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGqIZXEe-bUZ-w3fFkrg" name="getNextStartTime" specification="_r5FZ84ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGqYZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAXGqoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGq4ZXEe-bUZ-w3fFkrg" name="getNextEndTime" specification="_r5FZ9oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGrIZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAXGrYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGroZXEe-bUZ-w3fFkrg" name="getNumEdges" specification="_r5FZ-YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGr4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGsIZXEe-bUZ-w3fFkrg" name="compareTo" specification="_r-VtY4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGsYZXEe-bUZ-w3fFkrg" name="obj" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAXGsoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGs4ZXEe-bUZ-w3fFkrg" name="conflictExists" specification="_r-WUcoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGtIZXEe-bUZ-w3fFkrg" name="obj" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAXGtYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGtoZXEe-bUZ-w3fFkrg" name="canCombine" specification="_r-WUdYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGt4ZXEe-bUZ-w3fFkrg" name="a2" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAXGuIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGuYZXEe-bUZ-w3fFkrg" name="getDelta" specification="_r5GBAIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGuoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGu4ZXEe-bUZ-w3fFkrg" name="getExecutionDuration" specification="_r5GBAoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGvIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGvYZXEe-bUZ-w3fFkrg" name="getCombinedExecutionDuration" specification="_r-WUeIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGvoZXEe-bUZ-w3fFkrg" name="a2" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAXGv4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGwIZXEe-bUZ-w3fFkrg" name="printAll" specification="_r5GBBIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGwYZXEe-bUZ-w3fFkrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGwoZXEe-bUZ-w3fFkrg" name="printAll" specification="_r5GBBoZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGw4ZXEe-bUZ-w3fFkrg" name="printEdges" specification="_r-WUe4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGxIZXEe-bUZ-w3fFkrg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAXGxYZXEe-bUZ-w3fFkrg" name="edges" type="_r5vhQIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXGxoZXEe-bUZ-w3fFkrg" name="printEdges" specification="_r-W7g4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXGx4ZXEe-bUZ-w3fFkrg" name="edges" type="_r5vhQIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5C9sIZXEe-bUZ-w3fFkrg" name="Activation" visibility="package" method="_sAV4goZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5C9soZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5C9s4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5C9sYZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5C9tIZXEe-bUZ-w3fFkrg" type="_r5CWpIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5C9tYZXEe-bUZ-w3fFkrg" name="clone" method="_sAWflIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-VGV4ZXEe-bUZ-w3fFkrg" type="_r5CWpIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5DkwIZXEe-bUZ-w3fFkrg" name="getEdgesByReleaseTime" method="_sAWfloZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jtd0JZCEe-S5LJtyBrH7w">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-VGWIZXEe-bUZ-w3fFkrg" type="_r5vhRoZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5DkwoZXEe-bUZ-w3fFkrg" name="getEdgesByLatestReleaseTime" method="_sAWfmIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jtd0ZZCEe-S5LJtyBrH7w">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-VGWYZXEe-bUZ-w3fFkrg" type="_r5vhRoZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5DkxIZXEe-bUZ-w3fFkrg" name="getEdgesByPeriod" method="_sAWfmoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jtd0pZCEe-S5LJtyBrH7w">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-VGWoZXEe-bUZ-w3fFkrg" type="_r5vhRoZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5EL0IZXEe-bUZ-w3fFkrg" name="getEdgesByDeadline" method="_sAWfnIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jtd05ZCEe-S5LJtyBrH7w">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-VGW4ZXEe-bUZ-w3fFkrg" type="_r5vhRoZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5EL0oZXEe-bUZ-w3fFkrg" name="getEdgesByPriority" method="_sAWfnoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jtd1JZCEe-S5LJtyBrH7w">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-VGXIZXEe-bUZ-w3fFkrg" type="_r5vhRoZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5EL1IZXEe-bUZ-w3fFkrg" name="increaseEdgePhases" method="_sAWfpIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jtd1ZZCEe-S5LJtyBrH7w">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5EL1YZXEe-bUZ-w3fFkrg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Ey4IZXEe-bUZ-w3fFkrg" name="updatePriorityAndRelease" method="_sAWfpoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jtd1pZCEe-S5LJtyBrH7w">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r5Ey4YZXEe-bUZ-w3fFkrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Ey4oZXEe-bUZ-w3fFkrg" name="addConflict" method="_sAWfqIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5Ey44ZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Ey5IZXEe-bUZ-w3fFkrg" name="addCoordinator" method="_sAWfrIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5Ey5YZXEe-bUZ-w3fFkrg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Ey5oZXEe-bUZ-w3fFkrg" name="getNextScheduleTime" method="_sAXGooZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JuE4JZCEe-S5LJtyBrH7w">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5Ey54ZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-VtYoZXEe-bUZ-w3fFkrg" type="_r53dG4ZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5FZ8IZXEe-bUZ-w3fFkrg" name="getMatchingEndTime" method="_sAXGpYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JuE4ZZCEe-S5LJtyBrH7w">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5FZ8YZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5FZ8oZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5FZ84ZXEe-bUZ-w3fFkrg" name="getNextStartTime" method="_sAXGqIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JuE4pZCEe-S5LJtyBrH7w">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5FZ9IZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5FZ9YZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5FZ9oZXEe-bUZ-w3fFkrg" name="getNextEndTime" method="_sAXGq4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JuE45ZCEe-S5LJtyBrH7w">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5FZ94ZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5FZ-IZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5FZ-YZXEe-bUZ-w3fFkrg" name="getNumEdges" method="_sAXGroZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5FZ-oZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5GBAIZXEe-bUZ-w3fFkrg" name="getDelta" method="_sAXGuYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JuE5JZCEe-S5LJtyBrH7w">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5GBAYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5GBAoZXEe-bUZ-w3fFkrg" name="getExecutionDuration" method="_sAXGu4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5GBA4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5GBBIZXEe-bUZ-w3fFkrg" name="printAll" method="_sAXGwIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5GBBYZXEe-bUZ-w3fFkrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5GBBoZXEe-bUZ-w3fFkrg" name="printAll" method="_sAXGwoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r-VGUYZXEe-bUZ-w3fFkrg" name="Activation" visibility="package" method="_sAWfkIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-VGVIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-VGVYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-VGUoZXEe-bUZ-w3fFkrg" name="elem" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-VGU4ZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-VGVoZXEe-bUZ-w3fFkrg" type="_r5CWpIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-VtYIZXEe-bUZ-w3fFkrg" name="addEdge" method="_sAWfooZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-VtYYZXEe-bUZ-w3fFkrg" name="edge" type="_r5QZGoZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-VtY4ZXEe-bUZ-w3fFkrg" name="compareTo" method="_sAXGsIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-VtZIZXEe-bUZ-w3fFkrg" name="obj" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-VtZYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-WUcoZXEe-bUZ-w3fFkrg" name="conflictExists" method="_sAXGs4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-WUc4ZXEe-bUZ-w3fFkrg" name="obj" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-WUdIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-WUdYZXEe-bUZ-w3fFkrg" name="canCombine" method="_sAXGtoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-WUdoZXEe-bUZ-w3fFkrg" name="a2" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-WUd4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-WUeIZXEe-bUZ-w3fFkrg" name="getCombinedExecutionDuration" method="_sAXGvYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-WUeYZXEe-bUZ-w3fFkrg" name="a2" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-WUeoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-WUe4ZXEe-bUZ-w3fFkrg" name="printEdges" visibility="private" method="_sAXGw4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-W7gIZXEe-bUZ-w3fFkrg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-W7gYZXEe-bUZ-w3fFkrg" name="edges" type="_r5vhQIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-W7g4ZXEe-bUZ-w3fFkrg" name="printEdges" visibility="private" method="_sAXGxoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-W7hIZXEe-bUZ-w3fFkrg" name="edges" type="_r5vhQIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_Q6c4ZXEe-bUZ-w3fFkrg" name="addEdges" method="_sAWfoIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_Q6dIZXEe-bUZ-w3fFkrg" name="edges" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_RhgYZXEe-bUZ-w3fFkrg" name="addConflicts" method="_sAWfqoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_RhgoZXEe-bUZ-w3fFkrg" name="conflicts" type="_r-UfRoZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_RhhIZXEe-bUZ-w3fFkrg" name="addCoordinators" method="_sAWfroZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_RhhYZXEe-bUZ-w3fFkrg" name="coordinators" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_SIkYZXEe-bUZ-w3fFkrg" name="addScheduleTimes" method="_sAXGoIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jtd15ZCEe-S5LJtyBrH7w">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_SIkoZXEe-bUZ-w3fFkrg" name="scheduleTime" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5HPIIZXEe-bUZ-w3fFkrg" name="Activations">
              <generalization xmi:id="_r-XikIZXEe-bUZ-w3fFkrg" general="_r5BvkIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_2wUIZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_2wUYZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5HPIYZXEe-bUZ-w3fFkrg" name="BasicPoset">
              <ownedComment xmi:id="_5JuE5ZZCEe-S5LJtyBrH7w">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_r-YJpoZXEe-bUZ-w3fFkrg" general="_r5is8IZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXtsIZXEe-bUZ-w3fFkrg" name="BasicPoset" specification="_r-YJoYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXtsYZXEe-bUZ-w3fFkrg" name="workload" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAXtsoZXEe-bUZ-w3fFkrg" type="_r5HPIYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-YJoYZXEe-bUZ-w3fFkrg" name="BasicPoset" visibility="package" method="_sAXtsIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-YJo4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-YJpIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-YJooZXEe-bUZ-w3fFkrg" name="workload" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-YJpYZXEe-bUZ-w3fFkrg" type="_r5HPIYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5H2MIZXEe-bUZ-w3fFkrg" name="ChannelAnalysis">
              <ownedComment xmi:id="_5JuE5pZCEe-S5LJtyBrH7w">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_r_2wUoZXEe-bUZ-w3fFkrg" name="program" visibility="private" type="_r5nlcIZXEe-bUZ-w3fFkrg" association="_sA8Vd4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_2wVIZXEe-bUZ-w3fFkrg" name="programTable" visibility="private" type="_r5tFAIZXEe-bUZ-w3fFkrg" association="_sA8VeoZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_2wVoZXEe-bUZ-w3fFkrg" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXts4ZXEe-bUZ-w3fFkrg" name="ChannelAnalysis" specification="_r-YJp4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXttIZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAXttYZXEe-bUZ-w3fFkrg" type="_r5H2MIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXttoZXEe-bUZ-w3fFkrg" name="ChannelAnalysis" specification="_r-YJrIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXtt4ZXEe-bUZ-w3fFkrg" name="program" type="_r5nlcIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAXtuIZXEe-bUZ-w3fFkrg" type="_r5H2MIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXtuYZXEe-bUZ-w3fFkrg" name="isChannelConflict" specification="_r5H2MYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXtuoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5H2MYZXEe-bUZ-w3fFkrg" name="isChannelConflict" method="_sAXtuYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5H2MoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-YJp4ZXEe-bUZ-w3fFkrg" name="ChannelAnalysis" visibility="package" method="_sAXts4ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-YJqYZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-YJqoZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-YJqIZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-YJq4ZXEe-bUZ-w3fFkrg" type="_r5H2MIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-YJrIZXEe-bUZ-w3fFkrg" name="ChannelAnalysis" visibility="package" method="_sAXttoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-YJroZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-YJr4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-YJrYZXEe-bUZ-w3fFkrg" name="program" type="_r5nlcIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-YJsIZXEe-bUZ-w3fFkrg" type="_r5H2MIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5IdQIZXEe-bUZ-w3fFkrg" name="ChannelVisualization">
              <ownedComment xmi:id="_5JuE55ZCEe-S5LJtyBrH7w">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-YwtYZXEe-bUZ-w3fFkrg" general="_r5-KwIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_3XYIZXEe-bUZ-w3fFkrg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_3XYYZXEe-bUZ-w3fFkrg" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_3XYoZXEe-bUZ-w3fFkrg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_3XY4ZXEe-bUZ-w3fFkrg" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_3XZIZXEe-bUZ-w3fFkrg" name="warp" visibility="private" type="_r5__8YZXEe-bUZ-w3fFkrg" association="_sA88gYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_3XZoZXEe-bUZ-w3fFkrg" name="ca" visibility="private" type="_r5H2MIZXEe-bUZ-w3fFkrg" association="_sA88hIZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXtu4ZXEe-bUZ-w3fFkrg" name="ChannelVisualization" specification="_r-YwsIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXtvIZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAXtvYZXEe-bUZ-w3fFkrg" type="_r5IdQIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-YwsIZXEe-bUZ-w3fFkrg" name="ChannelVisualization" visibility="package" method="_sAXtu4ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-YwsoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-Yws4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-YwsYZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-YwtIZXEe-bUZ-w3fFkrg" type="_r5IdQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5JEUIZXEe-bUZ-w3fFkrg" name="Channels">
              <ownedComment xmi:id="_5JuE6JZCEe-S5LJtyBrH7w">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_r_3XaoZXEe-bUZ-w3fFkrg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_3XbIZXEe-bUZ-w3fFkrg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_3XboZXEe-bUZ-w3fFkrg" name="channelsAvailable" visibility="package" type="_r-UfQIZXEe-bUZ-w3fFkrg" association="_sA88h4ZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXtw4ZXEe-bUZ-w3fFkrg" name="Channels" specification="_r5JrZYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXtxIZXEe-bUZ-w3fFkrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAXtxYZXEe-bUZ-w3fFkrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAXtxoZXEe-bUZ-w3fFkrg" type="_r5JEUIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXtx4ZXEe-bUZ-w3fFkrg" name="getChannelSet" specification="_r5Jra4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXtyIZXEe-bUZ-w3fFkrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAXtyYZXEe-bUZ-w3fFkrg" type="_r-UfQoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXtyoZXEe-bUZ-w3fFkrg" name="addNewChannelSet" specification="_r5KScIZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXty4ZXEe-bUZ-w3fFkrg" name="isEmpty" specification="_r5KScYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXtzIZXEe-bUZ-w3fFkrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAXtzYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXtzoZXEe-bUZ-w3fFkrg" name="removeChannel" specification="_r5KSdIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXtz4ZXEe-bUZ-w3fFkrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAXt0IZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAXt0YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXt0oZXEe-bUZ-w3fFkrg" name="addChannel" specification="_r5KSeIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXt04ZXEe-bUZ-w3fFkrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAXt1IZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAXt1YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXt1oZXEe-bUZ-w3fFkrg" name="getNumChannels" specification="_r5KSfIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAXt14ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5JrZYZXEe-bUZ-w3fFkrg" name="Channels" visibility="package" method="_sAXtw4ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5JraIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5JraYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5JrZoZXEe-bUZ-w3fFkrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5JrZ4ZXEe-bUZ-w3fFkrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5JraoZXEe-bUZ-w3fFkrg" type="_r5JEUIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Jra4ZXEe-bUZ-w3fFkrg" name="getChannelSet" method="_sAXtx4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5JrbIZXEe-bUZ-w3fFkrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_TWsYZXEe-bUZ-w3fFkrg" type="_r-UfQoZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5KScIZXEe-bUZ-w3fFkrg" name="addNewChannelSet" method="_sAXtyoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5KScYZXEe-bUZ-w3fFkrg" name="isEmpty" method="_sAXty4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5KScoZXEe-bUZ-w3fFkrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5KSc4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5KSdIZXEe-bUZ-w3fFkrg" name="removeChannel" method="_sAXtzoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5KSdYZXEe-bUZ-w3fFkrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5KSdoZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5KSd4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5KSeIZXEe-bUZ-w3fFkrg" name="addChannel" method="_sAXt0oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5KSeYZXEe-bUZ-w3fFkrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5KSeoZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5KSe4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5KSfIZXEe-bUZ-w3fFkrg" name="getNumChannels" method="_sAXt1oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5KSfYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_r5JEUYZXEe-bUZ-w3fFkrg" name="ChannelSet" visibility="private">
                <generalization xmi:id="_r_SvoIZXEe-bUZ-w3fFkrg" general="_r-UfQoZXEe-bUZ-w3fFkrg"/>
                <ownedAttribute xmi:id="_r_3XaIZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_3XaYZXEe-bUZ-w3fFkrg" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXtvoZXEe-bUZ-w3fFkrg" name="ChannelSet" specification="_r5JEUoZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAXtv4ZXEe-bUZ-w3fFkrg" type="_r5JEUYZXEe-bUZ-w3fFkrg" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAXtwIZXEe-bUZ-w3fFkrg" name="ChannelSet" specification="_r5JrYIZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAXtwYZXEe-bUZ-w3fFkrg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sAXtwoZXEe-bUZ-w3fFkrg" type="_r5JEUYZXEe-bUZ-w3fFkrg" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_r5JEUoZXEe-bUZ-w3fFkrg" name="ChannelSet" visibility="private" method="_sAXtvoZXEe-bUZ-w3fFkrg">
                  <eAnnotations xmi:id="_r5JEU4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r5JEVIZXEe-bUZ-w3fFkrg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r5JEVYZXEe-bUZ-w3fFkrg" type="_r5JEUYZXEe-bUZ-w3fFkrg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r5JrYIZXEe-bUZ-w3fFkrg" name="ChannelSet" visibility="private" method="_sAXtwIZXEe-bUZ-w3fFkrg">
                  <eAnnotations xmi:id="_r5JrYoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r5JrY4ZXEe-bUZ-w3fFkrg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r5JrYYZXEe-bUZ-w3fFkrg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r5JrZIZXEe-bUZ-w3fFkrg" type="_r5JEUYZXEe-bUZ-w3fFkrg" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5K5gIZXEe-bUZ-w3fFkrg" name="CodeFragment">
              <ownedAttribute xmi:id="_r_3-coZXEe-bUZ-w3fFkrg" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_3-c4ZXEe-bUZ-w3fFkrg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_3-dIZXEe-bUZ-w3fFkrg" name="edges" visibility="package" type="_r-UfQIZXEe-bUZ-w3fFkrg" association="_sA88ioZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_3-d4ZXEe-bUZ-w3fFkrg" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_4lgYZXEe-bUZ-w3fFkrg" name="codeFragment" visibility="package" type="_r-UfQIZXEe-bUZ-w3fFkrg" association="_sA9jkYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_4lhIZXEe-bUZ-w3fFkrg" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_4lhoZXEe-bUZ-w3fFkrg" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYUwIZXEe-bUZ-w3fFkrg" name="CodeFragment" specification="_r5K5gYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYUwYZXEe-bUZ-w3fFkrg" type="_r5K5gIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYUwoZXEe-bUZ-w3fFkrg" name="CodeFragment" specification="_r_T9wIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYUw4ZXEe-bUZ-w3fFkrg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYUxIZXEe-bUZ-w3fFkrg" name="edges" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAYUxYZXEe-bUZ-w3fFkrg" name="coordinators" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAYUxoZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYUx4ZXEe-bUZ-w3fFkrg" type="_r5K5gIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYUyIZXEe-bUZ-w3fFkrg" name="getCoordinator" specification="_r5K5hYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYUyYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYUyoZXEe-bUZ-w3fFkrg" name="instructions" specification="_r5K5h4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYUy4ZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYUzIZXEe-bUZ-w3fFkrg" name="size" specification="_r5LgkYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYUzYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYUzoZXEe-bUZ-w3fFkrg" name="generateCodeFragment" specification="_r5Lgk4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYUz4ZXEe-bUZ-w3fFkrg" name="getBaseInstruction" specification="_r5LglIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYU0IZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU0YZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU0oZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU04ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYU1IZXEe-bUZ-w3fFkrg" name="push" specification="_r5LgmYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYU1YZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU1oZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU14ZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU2IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYU2YZXEe-bUZ-w3fFkrg" name="pull" specification="_r5MHoIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYU2oZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU24ZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU3IZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU3YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYU3oZXEe-bUZ-w3fFkrg" name="ifHas" specification="_r5MHpYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYU34ZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU4IZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU4YZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU4oZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYU44ZXEe-bUZ-w3fFkrg" name="ifNotHas" specification="_r5MHqoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYU5IZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU5YZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU5oZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU54ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYU6IZXEe-bUZ-w3fFkrg" name="wait" specification="_r5MHr4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYU6YZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU6oZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYU64ZXEe-bUZ-w3fFkrg" name="sleep" specification="_r5MHsoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYU7IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYU7YZXEe-bUZ-w3fFkrg" name="reportIfDifferentCoordinators" specification="_r_VL4IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYU7oZXEe-bUZ-w3fFkrg" name="coordinators" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYU74ZXEe-bUZ-w3fFkrg" name="multipleCoordinators" specification="_r_VL44ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYU8IZXEe-bUZ-w3fFkrg" name="coordinators" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAYU8YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5K5gYZXEe-bUZ-w3fFkrg" name="CodeFragment" visibility="package" method="_sAYUwIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5K5goZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5K5g4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5Jur8JZCEe-S5LJtyBrH7w">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5K5hIZXEe-bUZ-w3fFkrg" type="_r5K5gIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5K5hYZXEe-bUZ-w3fFkrg" name="getCoordinator" method="_sAYUyIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jur8pZCEe-S5LJtyBrH7w">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5K5hoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5K5h4ZXEe-bUZ-w3fFkrg" name="instructions" method="_sAYUyoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jur85ZCEe-S5LJtyBrH7w">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_Uk0oZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5LgkYZXEe-bUZ-w3fFkrg" name="size" method="_sAYUzIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jur9JZCEe-S5LJtyBrH7w">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5LgkoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Lgk4ZXEe-bUZ-w3fFkrg" name="generateCodeFragment" visibility="private" method="_sAYUzoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5LglIZXEe-bUZ-w3fFkrg" name="getBaseInstruction" visibility="private" method="_sAYUz4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5LglYZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5LgloZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5Lgl4ZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5LgmIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5LgmYZXEe-bUZ-w3fFkrg" name="push" visibility="private" method="_sAYU1IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5LgmoZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5Lgm4ZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5LgnIZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5LgnYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5MHoIZXEe-bUZ-w3fFkrg" name="pull" visibility="private" method="_sAYU2YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5MHoYZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5MHooZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5MHo4ZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5MHpIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5MHpYZXEe-bUZ-w3fFkrg" name="ifHas" visibility="private" method="_sAYU3oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5MHpoZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5MHp4ZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5MHqIZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5MHqYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5MHqoZXEe-bUZ-w3fFkrg" name="ifNotHas" visibility="private" method="_sAYU44ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5MHq4ZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5MHrIZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5MHrYZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5MHroZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5MHr4ZXEe-bUZ-w3fFkrg" name="wait" method="_sAYU6IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5MHsIZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5MHsYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5MHsoZXEe-bUZ-w3fFkrg" name="sleep" isStatic="true" method="_sAYU64ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5MHs4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_T9wIZXEe-bUZ-w3fFkrg" name="CodeFragment" visibility="package" method="_sAYUwoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_T9xYZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_T9xoZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5Jur8ZZCEe-S5LJtyBrH7w">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_T9wYZXEe-bUZ-w3fFkrg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_T9woZXEe-bUZ-w3fFkrg" name="edges" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_T9w4ZXEe-bUZ-w3fFkrg" name="coordinators" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_T9xIZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_T9x4ZXEe-bUZ-w3fFkrg" type="_r5K5gIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_VL4IZXEe-bUZ-w3fFkrg" name="reportIfDifferentCoordinators" visibility="private" method="_sAYU7YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_VL4YZXEe-bUZ-w3fFkrg" name="coordinators" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_VL44ZXEe-bUZ-w3fFkrg" name="multipleCoordinators" visibility="private" method="_sAYU74ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_VL5IZXEe-bUZ-w3fFkrg" name="coordinators" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_VL5YZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5NVwIZXEe-bUZ-w3fFkrg" name="CombinedActivation">
              <generalization xmi:id="_r-al4oZXEe-bUZ-w3fFkrg" general="_r5CWpIZXEe-bUZ-w3fFkrg"/>
              <interfaceRealization xmi:id="_r_Vy8YZXEe-bUZ-w3fFkrg" client="_r5NVwIZXEe-bUZ-w3fFkrg" supplier="_r_QTY4ZXEe-bUZ-w3fFkrg" contract="_r_QTY4ZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAYU8oZXEe-bUZ-w3fFkrg" name="CombinedActivation" specification="_r5NVwYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAYU84ZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAYU9IZXEe-bUZ-w3fFkrg" type="_r5NVwIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY70IZXEe-bUZ-w3fFkrg" name="CombinedActivation" specification="_r-Z-0IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY70YZXEe-bUZ-w3fFkrg" name="elem" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAY70oZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAY704ZXEe-bUZ-w3fFkrg" type="_r5NVwIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY71IZXEe-bUZ-w3fFkrg" name="CombinedActivation" specification="_r-Z-1oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY71YZXEe-bUZ-w3fFkrg" name="priorEntry" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAY71oZXEe-bUZ-w3fFkrg" name="next" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAY714ZXEe-bUZ-w3fFkrg" type="_r5NVwIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY72IZXEe-bUZ-w3fFkrg" name="canCombine" specification="_r-Z-3IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY72YZXEe-bUZ-w3fFkrg" name="a2" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAY72oZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5NVwYZXEe-bUZ-w3fFkrg" name="CombinedActivation" visibility="package" method="_sAYU8oZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5NVw4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5NVxIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5NVwoZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5NVxYZXEe-bUZ-w3fFkrg" type="_r5NVwIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-Z-0IZXEe-bUZ-w3fFkrg" name="CombinedActivation" visibility="package" method="_sAY70IZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-Z-04ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-Z-1IZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-Z-0YZXEe-bUZ-w3fFkrg" name="elem" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-Z-0oZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-Z-1YZXEe-bUZ-w3fFkrg" type="_r5NVwIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-Z-1oZXEe-bUZ-w3fFkrg" name="CombinedActivation" visibility="package" method="_sAY71IZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-Z-2YZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-Z-2oZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-Z-14ZXEe-bUZ-w3fFkrg" name="priorEntry" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-Z-2IZXEe-bUZ-w3fFkrg" name="next" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-Z-24ZXEe-bUZ-w3fFkrg" type="_r5NVwIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-Z-3IZXEe-bUZ-w3fFkrg" name="canCombine" method="_sAY72IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-Z-3YZXEe-bUZ-w3fFkrg" name="a2" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-Z-3oZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5N80IZXEe-bUZ-w3fFkrg" name="CommunicationGraph">
              <ownedComment xmi:id="_5Jur9ZZCEe-S5LJtyBrH7w">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-al84ZXEe-bUZ-w3fFkrg" general="_r5-KwIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_5MkIZXEe-bUZ-w3fFkrg" name="wfm" visibility="package" type="_r5S1UIZXEe-bUZ-w3fFkrg" association="_sA9jlIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_5MkoZXEe-bUZ-w3fFkrg" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_5MlIZXEe-bUZ-w3fFkrg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_5MloZXEe-bUZ-w3fFkrg" name="workLoad" visibility="package" type="_r6Jw8IZXEe-bUZ-w3fFkrg" association="_sA9jl4ZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY724ZXEe-bUZ-w3fFkrg" name="CommunicationGraph" specification="_r-al44ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY73IZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAY73YZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAY73oZXEe-bUZ-w3fFkrg" type="_r5N80IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY734ZXEe-bUZ-w3fFkrg" name="CommunicationGraph" specification="_r-al6YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY74IZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAY74YZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAY74oZXEe-bUZ-w3fFkrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAY744ZXEe-bUZ-w3fFkrg" type="_r5N80IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY75IZXEe-bUZ-w3fFkrg" name="createHeader" specification="_r5N80YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY75YZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY75oZXEe-bUZ-w3fFkrg" name="createFooter" specification="_r5Oj4IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY754ZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY76IZXEe-bUZ-w3fFkrg" name="visualization" specification="_r5Oj5IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY76YZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY76oZXEe-bUZ-w3fFkrg" name="createWarpFileContent" specification="_r5Oj6IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY764ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5N80YZXEe-bUZ-w3fFkrg" name="createHeader" method="_sAY75IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-al8IZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Oj4IZXEe-bUZ-w3fFkrg" name="createFooter" method="_sAY75oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-al8YZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Oj5IZXEe-bUZ-w3fFkrg" name="visualization" method="_sAY76IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-al8oZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Oj6IZXEe-bUZ-w3fFkrg" name="createWarpFileContent" method="_sAY76oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5Oj6YZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-al44ZXEe-bUZ-w3fFkrg" name="CommunicationGraph" method="_sAY724ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-al5oZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-al54ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-al5IZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-al5YZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-al6IZXEe-bUZ-w3fFkrg" type="_r5N80IZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-al6YZXEe-bUZ-w3fFkrg" name="CommunicationGraph" method="_sAY734ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-al7YZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-al7oZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-al6oZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-al64ZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-al7IZXEe-bUZ-w3fFkrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-al74ZXEe-bUZ-w3fFkrg" type="_r5N80IZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5PK8IZXEe-bUZ-w3fFkrg" name="ConnectivityPoset">
              <ownedComment xmi:id="_5Jur9pZCEe-S5LJtyBrH7w">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_r-bM9YZXEe-bUZ-w3fFkrg" general="_r5is8IZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY77IZXEe-bUZ-w3fFkrg" name="ConnectivityPoset" specification="_r-bM8IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY77YZXEe-bUZ-w3fFkrg" name="workload" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAY77oZXEe-bUZ-w3fFkrg" type="_r5PK8IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY774ZXEe-bUZ-w3fFkrg" name="findCoordinator" specification="_r_WaAIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY78IZXEe-bUZ-w3fFkrg" name="nodesInFlow" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAY78YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-bM8IZXEe-bUZ-w3fFkrg" name="ConnectivityPoset" visibility="package" method="_sAY77IZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-bM8oZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-bM84ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-bM8YZXEe-bUZ-w3fFkrg" name="workload" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-bM9IZXEe-bUZ-w3fFkrg" type="_r5PK8IZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_WaAIZXEe-bUZ-w3fFkrg" name="findCoordinator" visibility="protected" method="_sAY774ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_WaAYZXEe-bUZ-w3fFkrg" name="nodesInFlow" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_WaAoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5PK8YZXEe-bUZ-w3fFkrg" name="DeadlineComparator">
              <interfaceRealization xmi:id="_r_XBE4ZXEe-bUZ-w3fFkrg" client="_r5PK8YZXEe-bUZ-w3fFkrg" supplier="_r-bM9oZXEe-bUZ-w3fFkrg" contract="_r-bM9oZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY78oZXEe-bUZ-w3fFkrg" name="compare" specification="_r_XoIIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY784ZXEe-bUZ-w3fFkrg" name="obj1" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAY79IZXEe-bUZ-w3fFkrg" name="obj2" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAY79YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_XoIIZXEe-bUZ-w3fFkrg" name="compare" method="_sAY78oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_XoIYZXEe-bUZ-w3fFkrg" name="obj1" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_XoIoZXEe-bUZ-w3fFkrg" name="obj2" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_XoI4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5PyAYZXEe-bUZ-w3fFkrg" name="Description">
              <ownedComment xmi:id="_5Jur95ZCEe-S5LJtyBrH7w">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r_XoJ4ZXEe-bUZ-w3fFkrg" general="_r-UfQIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_5MmIZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_5MmYZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY79oZXEe-bUZ-w3fFkrg" name="Description" specification="_r5PyAoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY794ZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY7-IZXEe-bUZ-w3fFkrg" name="Description" specification="_r5QZEIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY7-YZXEe-bUZ-w3fFkrg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAY7-oZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAY7-4ZXEe-bUZ-w3fFkrg" name="toString" specification="_r5QZFYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAY7_IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5PyAoZXEe-bUZ-w3fFkrg" name="Description" method="_sAY79oZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5PyA4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5PyBIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5PyBYZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5QZEIZXEe-bUZ-w3fFkrg" name="Description" method="_sAY7-IZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5QZEoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5QZE4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5QZEYZXEe-bUZ-w3fFkrg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5QZFIZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5QZFYZXEe-bUZ-w3fFkrg" name="toString" method="_sAY7-4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5QZFoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5QZGoZXEe-bUZ-w3fFkrg" name="Edge">
              <generalization xmi:id="_r-cbEoZXEe-bUZ-w3fFkrg" general="_r6UJAIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_5MmoZXEe-bUZ-w3fFkrg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_5zoIZXEe-bUZ-w3fFkrg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_5zoYZXEe-bUZ-w3fFkrg" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_5zooZXEe-bUZ-w3fFkrg" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_5zo4ZXEe-bUZ-w3fFkrg" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_5zpIZXEe-bUZ-w3fFkrg" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_5zpYZXEe-bUZ-w3fFkrg" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_5zpoZXEe-bUZ-w3fFkrg" name="state" type="_r5RAIIZXEe-bUZ-w3fFkrg" association="_sAuTAIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_5zp4ZXEe-bUZ-w3fFkrg" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_r_YPMIZXEe-bUZ-w3fFkrg" client="_r5QZGoZXEe-bUZ-w3fFkrg" supplier="_r_QTY4ZXEe-bUZ-w3fFkrg" contract="_r_QTY4ZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAZi4IZXEe-bUZ-w3fFkrg" name="Edge" specification="_r5RAJYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAZi4YZXEe-bUZ-w3fFkrg" type="_r5QZGoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAZi4oZXEe-bUZ-w3fFkrg" name="Edge" specification="_r5RAKYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAZi44ZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZi5IZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZi5YZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZi5oZXEe-bUZ-w3fFkrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZi54ZXEe-bUZ-w3fFkrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZi6IZXEe-bUZ-w3fFkrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZi6YZXEe-bUZ-w3fFkrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZi6oZXEe-bUZ-w3fFkrg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZi64ZXEe-bUZ-w3fFkrg" type="_r5QZGoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAZi7IZXEe-bUZ-w3fFkrg" name="compareTo" specification="_r-b0AIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAZi7YZXEe-bUZ-w3fFkrg" name="edge" type="_r5QZGoZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAZi7oZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAZi74ZXEe-bUZ-w3fFkrg" name="toString" specification="_r5RnOYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAZi8IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAZi8YZXEe-bUZ-w3fFkrg" name="print" specification="_r5RnPoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAZi8oZXEe-bUZ-w3fFkrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAZi84ZXEe-bUZ-w3fFkrg" name="print" specification="_r5RnQ4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5RAJYZXEe-bUZ-w3fFkrg" name="Edge" visibility="package" method="_sAZi4IZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5RAJoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5RAJ4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5RAKIZXEe-bUZ-w3fFkrg" type="_r5QZGoZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5RAKYZXEe-bUZ-w3fFkrg" name="Edge" visibility="package" method="_sAZi4oZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5RnNoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5RnN4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5RAKoZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5RAK4ZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5RnMIZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5RnMYZXEe-bUZ-w3fFkrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5RnMoZXEe-bUZ-w3fFkrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5RnM4ZXEe-bUZ-w3fFkrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5RnNIZXEe-bUZ-w3fFkrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5RnNYZXEe-bUZ-w3fFkrg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5RnOIZXEe-bUZ-w3fFkrg" type="_r5QZGoZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5RnOYZXEe-bUZ-w3fFkrg" name="toString" method="_sAZi74ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5RnOoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5RnPoZXEe-bUZ-w3fFkrg" name="print" method="_sAZi8YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5RnP4ZXEe-bUZ-w3fFkrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5RnQ4ZXEe-bUZ-w3fFkrg" name="print" method="_sAZi84ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r-b0AIZXEe-bUZ-w3fFkrg" name="compareTo" method="_sAZi7IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-b0AYZXEe-bUZ-w3fFkrg" name="edge" type="_r5QZGoZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-b0AoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_r5RAIIZXEe-bUZ-w3fFkrg" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_r5RAIoZXEe-bUZ-w3fFkrg" name="RELEASED"/>
                <ownedLiteral xmi:id="_r5RAI4ZXEe-bUZ-w3fFkrg" name="EXECUTING"/>
                <ownedLiteral xmi:id="_r5RAJIZXEe-bUZ-w3fFkrg" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5S1UIZXEe-bUZ-w3fFkrg" name="FileManager">
              <ownedComment xmi:id="_5JvTAJZCEe-S5LJtyBrH7w">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_r_5zqIZXEe-bUZ-w3fFkrg" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_5zqYZXEe-bUZ-w3fFkrg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAZi9IZXEe-bUZ-w3fFkrg" name="FileManager" specification="_r5S1UYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAZi9YZXEe-bUZ-w3fFkrg" type="_r5S1UIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAZi9oZXEe-bUZ-w3fFkrg" name="FileManager" specification="_r5S1VYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAZi94ZXEe-bUZ-w3fFkrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZi-IZXEe-bUZ-w3fFkrg" type="_r5S1UIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAZi-YZXEe-bUZ-w3fFkrg" name="getDocumentsDirectory" specification="_r5S1WoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAZi-oZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAZi-4ZXEe-bUZ-w3fFkrg" name="getCurrentDirectory" specification="_r5S1XIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAZi_IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAZi_YZXEe-bUZ-w3fFkrg" name="createFile" specification="_r5TcYYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAZi_oZXEe-bUZ-w3fFkrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZi_4ZXEe-bUZ-w3fFkrg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZjAIZXEe-bUZ-w3fFkrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZjAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAZjAoZXEe-bUZ-w3fFkrg" name="createFile" specification="_r5TcZoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAZjA4ZXEe-bUZ-w3fFkrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZjBIZXEe-bUZ-w3fFkrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZjBYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAZjBoZXEe-bUZ-w3fFkrg" name="createDirectory" specification="_r5TcaoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAZjB4ZXEe-bUZ-w3fFkrg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZjCIZXEe-bUZ-w3fFkrg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAZjCYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaJ8IZXEe-bUZ-w3fFkrg" name="writeFile" specification="_r5TcboZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaJ8YZXEe-bUZ-w3fFkrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAaJ8oZXEe-bUZ-w3fFkrg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaJ84ZXEe-bUZ-w3fFkrg" name="readFile" specification="_r5UDcYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaJ9IZXEe-bUZ-w3fFkrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAaJ9YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5S1UYZXEe-bUZ-w3fFkrg" name="FileManager" method="_sAZi9IZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5S1UoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5S1U4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5JvTAZZCEe-S5LJtyBrH7w">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5S1VIZXEe-bUZ-w3fFkrg" type="_r5S1UIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5S1VYZXEe-bUZ-w3fFkrg" name="FileManager" method="_sAZi9oZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5S1V4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5S1WIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5S1VoZXEe-bUZ-w3fFkrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5S1WYZXEe-bUZ-w3fFkrg" type="_r5S1UIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5S1WoZXEe-bUZ-w3fFkrg" name="getDocumentsDirectory" method="_sAZi-YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5S1W4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5S1XIZXEe-bUZ-w3fFkrg" name="getCurrentDirectory" method="_sAZi-4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5TcYIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5TcYYZXEe-bUZ-w3fFkrg" name="createFile" method="_sAZi_YZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JvTApZCEe-S5LJtyBrH7w">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5TcYoZXEe-bUZ-w3fFkrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5TcY4ZXEe-bUZ-w3fFkrg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5TcZIZXEe-bUZ-w3fFkrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5TcZYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5TcZoZXEe-bUZ-w3fFkrg" name="createFile" method="_sAZjAoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5TcZ4ZXEe-bUZ-w3fFkrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5TcaIZXEe-bUZ-w3fFkrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5TcaYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5TcaoZXEe-bUZ-w3fFkrg" name="createDirectory" method="_sAZjBoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5Tca4ZXEe-bUZ-w3fFkrg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5TcbIZXEe-bUZ-w3fFkrg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5TcbYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5TcboZXEe-bUZ-w3fFkrg" name="writeFile" method="_sAaJ8IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5Tcb4ZXEe-bUZ-w3fFkrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5UDcIZXEe-bUZ-w3fFkrg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5UDcYZXEe-bUZ-w3fFkrg" name="readFile" method="_sAaJ84ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5UDcoZXEe-bUZ-w3fFkrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5UDc4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5UDdIZXEe-bUZ-w3fFkrg" name="Flow">
              <generalization xmi:id="_r-eQSoZXEe-bUZ-w3fFkrg" general="_r6UJAIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_6asYZXEe-bUZ-w3fFkrg" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_6asoZXEe-bUZ-w3fFkrg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_6as4ZXEe-bUZ-w3fFkrg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_6atIZXEe-bUZ-w3fFkrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_6atYZXEe-bUZ-w3fFkrg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_6atoZXEe-bUZ-w3fFkrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_6at4ZXEe-bUZ-w3fFkrg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_6auIZXEe-bUZ-w3fFkrg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_6auYZXEe-bUZ-w3fFkrg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_6auoZXEe-bUZ-w3fFkrg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_6au4ZXEe-bUZ-w3fFkrg" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_6avIZXEe-bUZ-w3fFkrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_6avYZXEe-bUZ-w3fFkrg" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_6avoZXEe-bUZ-w3fFkrg" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_6awIZXEe-bUZ-w3fFkrg" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_7BwYZXEe-bUZ-w3fFkrg" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_7Bw4ZXEe-bUZ-w3fFkrg" name="nodes" visibility="package" type="_r-UfQIZXEe-bUZ-w3fFkrg" association="_sA9jmoZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_7BxoZXEe-bUZ-w3fFkrg" name="linkTxAndTotalCost" visibility="package" type="_r-UfQIZXEe-bUZ-w3fFkrg" association="_sA-KoYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_7ByYZXEe-bUZ-w3fFkrg" name="edges" visibility="package" type="_r-UfQIZXEe-bUZ-w3fFkrg" association="_sA-KpIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_7o0oZXEe-bUZ-w3fFkrg" name="nodePredecessor" visibility="package" type="_r5fpoYZXEe-bUZ-w3fFkrg" association="_sA-Kp4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_7o1IZXEe-bUZ-w3fFkrg" name="edgePredecessor" visibility="package" type="_r5QZGoZXEe-bUZ-w3fFkrg" association="_sA-KqoZXEe-bUZ-w3fFkrg"/>
              <interfaceRealization xmi:id="_r_Y2QIZXEe-bUZ-w3fFkrg" client="_r5UDdIZXEe-bUZ-w3fFkrg" supplier="_r_QTY4ZXEe-bUZ-w3fFkrg" contract="_r_QTY4ZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaJ9oZXEe-bUZ-w3fFkrg" name="Flow" specification="_r5UqgIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaJ94ZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAaJ-IZXEe-bUZ-w3fFkrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAaJ-YZXEe-bUZ-w3fFkrg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAaJ-oZXEe-bUZ-w3fFkrg" type="_r5UDdIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 this.index = index;&#xD;
 /*&#xD;
  *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
  *  on flow updated based on flow length and reliability parameters&#xD;
  */&#xD;
 this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 this.nodes = new ArrayList&lt;>();&#xD;
 this.edges  = new ArrayList&lt;>();&#xD;
 this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 this.edges = new ArrayList&lt;>();&#xD;
 this.nodePredecessor = null;&#xD;
 this.edgePredecessor = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaJ-4ZXEe-bUZ-w3fFkrg" name="Flow" specification="_r5Uqh4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaJ_IZXEe-bUZ-w3fFkrg" type="_r5UDdIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
 this.index = DEFAULT_INDEX;&#xD;
 /*&#xD;
  *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
  *  on flow updated based on flow length and reliability parameters&#xD;
  */&#xD;
 this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 this.nodes = new ArrayList&lt;>();&#xD;
 this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 this.edges = new ArrayList&lt;>();&#xD;
 this.nodePredecessor = null;&#xD;
 this.edgePredecessor = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaJ_YZXEe-bUZ-w3fFkrg" name="getInitialPriority" specification="_r5VRkIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaJ_oZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaJ_4ZXEe-bUZ-w3fFkrg" name="getIndex" specification="_r5VRkoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaKAIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaKAYZXEe-bUZ-w3fFkrg" name="getNumTxPerLink" specification="_r5VRlIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaKAoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaKA4ZXEe-bUZ-w3fFkrg" name="getNodes" specification="_r5VRloZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaKBIZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaKBYZXEe-bUZ-w3fFkrg" name="getEdges" specification="_r5V4oIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaKBoZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaKB4ZXEe-bUZ-w3fFkrg" name="addEdge" specification="_r-eQQIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaKCIZXEe-bUZ-w3fFkrg" name="edge" type="_r5QZGoZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
 edge.setPredecessor(edgePredecessor);&#xD;
 edges.add(edge);&#xD;
 /* update predecessor for next edge added */&#xD;
 edgePredecessor = edge;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaxAIZXEe-bUZ-w3fFkrg" name="addNode" specification="_r-eQQoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaxAYZXEe-bUZ-w3fFkrg" name="node" type="_r5fpoYZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>/* set predecessor and add node to flow */&#xD;
 node.setPredecessor(nodePredecessor);&#xD;
 nodes.add(node);&#xD;
 /* update predecessor for next node added */&#xD;
 nodePredecessor = node;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaxAoZXEe-bUZ-w3fFkrg" name="getLinkTxAndTotalCost" specification="_r5V4ooZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaxA4ZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaxBIZXEe-bUZ-w3fFkrg" name="setInitialPriority" specification="_r5V4pIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaxBYZXEe-bUZ-w3fFkrg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaxBoZXEe-bUZ-w3fFkrg" name="setIndex" specification="_r5WfsYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaxB4ZXEe-bUZ-w3fFkrg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaxCIZXEe-bUZ-w3fFkrg" name="setNumTxPerLink" specification="_r5Wfs4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaxCYZXEe-bUZ-w3fFkrg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaxCoZXEe-bUZ-w3fFkrg" name="setNodes" specification="_r_ZdU4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaxC4ZXEe-bUZ-w3fFkrg" name="nodes" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaxDIZXEe-bUZ-w3fFkrg" name="setLinkTxAndTotalCost" specification="_r_ZdVoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaxDYZXEe-bUZ-w3fFkrg" name="linkTxAndTotalCost" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaxDoZXEe-bUZ-w3fFkrg" name="compareTo" specification="_r-eQRIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaxD4ZXEe-bUZ-w3fFkrg" name="flow" type="_r5UDdIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAaxEIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaxEYZXEe-bUZ-w3fFkrg" name="toString" specification="_r5WftYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaxEoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5UqgIZXEe-bUZ-w3fFkrg" name="Flow" visibility="package" method="_sAaJ9oZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5UqhIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5UqhYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5JvTA5ZCEe-S5LJtyBrH7w">
                  <body>Constructor that sets name, priority, and index.&#xD;
&#xD;
   * @param name        name of flow&#xD;
   * @param priority    priority of flow&#xD;
   * @param index       index of flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5UqgYZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5UqgoZXEe-bUZ-w3fFkrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5Uqg4ZXEe-bUZ-w3fFkrg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5UqhoZXEe-bUZ-w3fFkrg" type="_r5UDdIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Uqh4ZXEe-bUZ-w3fFkrg" name="Flow" visibility="package" method="_sAaJ-4ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5UqiIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5UqiYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5Jv6EJZCEe-S5LJtyBrH7w">
                  <body>Default constructor that sets name, priority, and index to default values.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5UqioZXEe-bUZ-w3fFkrg" type="_r5UDdIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5VRkIZXEe-bUZ-w3fFkrg" name="getInitialPriority" method="_sAaJ_YZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jv6EZZCEe-S5LJtyBrH7w">
                  <body>Get initial priority settings.&#xD;
&#xD;
   * @return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5VRkYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5VRkoZXEe-bUZ-w3fFkrg" name="getIndex" method="_sAaJ_4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jv6EpZCEe-S5LJtyBrH7w">
                  <body>Get current index.&#xD;
&#xD;
   * @return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5VRk4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5VRlIZXEe-bUZ-w3fFkrg" name="getNumTxPerLink" method="_sAaKAYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jv6E5ZCEe-S5LJtyBrH7w">
                  <body>Number of transmissions required per link in the flow.&#xD;
&#xD;
   * @return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5VRlYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5VRloZXEe-bUZ-w3fFkrg" name="getNodes" method="_sAaKA4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jv6FJZCEe-S5LJtyBrH7w">
                  <body>Get all nodes present.&#xD;
&#xD;
   * @return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_ZdUIZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5V4oIZXEe-bUZ-w3fFkrg" name="getEdges" method="_sAaKBYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jv6FZZCEe-S5LJtyBrH7w">
                  <body>Get all edges connecting nodes.&#xD;
&#xD;
   * @return the edges</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_ZdUYZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5V4ooZXEe-bUZ-w3fFkrg" name="getLinkTxAndTotalCost" method="_sAaxAoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jv6GJZCEe-S5LJtyBrH7w">
                  <body>Transmission needed to achieve E2E reliability and total transmission cost.&#xD;
&#xD;
   * @return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_ZdUoZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5V4pIZXEe-bUZ-w3fFkrg" name="setInitialPriority" method="_sAaxBIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jv6GZZCEe-S5LJtyBrH7w">
                  <body>Sets priority of flow object.&#xD;
&#xD;
   * @param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5WfsIZXEe-bUZ-w3fFkrg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5WfsYZXEe-bUZ-w3fFkrg" name="setIndex" method="_sAaxBoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jv6GpZCEe-S5LJtyBrH7w">
                  <body>Sets index of flow.&#xD;
&#xD;
   * @param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5WfsoZXEe-bUZ-w3fFkrg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Wfs4ZXEe-bUZ-w3fFkrg" name="setNumTxPerLink" method="_sAaxCIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jv6G5ZCEe-S5LJtyBrH7w">
                  <body>Sets the number of transmissions per link.&#xD;
&#xD;
   * @param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5WftIZXEe-bUZ-w3fFkrg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5WftYZXEe-bUZ-w3fFkrg" name="toString" method="_sAaxEYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5WftoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-eQQIZXEe-bUZ-w3fFkrg" name="addEdge" method="_sAaKB4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jv6FpZCEe-S5LJtyBrH7w">
                  <body>Add an edge to the flow.&#xD;
&#xD;
   * @param edge    Edge to be added.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-eQQYZXEe-bUZ-w3fFkrg" name="edge" type="_r5QZGoZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-eQQoZXEe-bUZ-w3fFkrg" name="addNode" method="_sAaxAIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jv6F5ZCEe-S5LJtyBrH7w">
                  <body>Add a node to the flow.&#xD;
&#xD;
   * @param node    Node to be added.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-eQQ4ZXEe-bUZ-w3fFkrg" name="node" type="_r5fpoYZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-eQRIZXEe-bUZ-w3fFkrg" name="compareTo" method="_sAaxDoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-eQRYZXEe-bUZ-w3fFkrg" name="flow" type="_r5UDdIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-eQRoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_ZdU4ZXEe-bUZ-w3fFkrg" name="setNodes" method="_sAaxCoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jv6HJZCEe-S5LJtyBrH7w">
                  <body>Sets nodes to flow.&#xD;
&#xD;
   * @param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_ZdVIZXEe-bUZ-w3fFkrg" name="nodes" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_ZdVoZXEe-bUZ-w3fFkrg" name="setLinkTxAndTotalCost" method="_sAaxDIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jv6HZZCEe-S5LJtyBrH7w">
                  <body>Sets the transmission and total cost for E2E.&#xD;
&#xD;
   * @param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_ZdV4ZXEe-bUZ-w3fFkrg" name="linkTxAndTotalCost" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5Xt0IZXEe-bUZ-w3fFkrg" name="FlowMap">
              <ownedComment xmi:id="_5Jv6HpZCEe-S5LJtyBrH7w">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-e3UIZXEe-bUZ-w3fFkrg" general="_r5BvkIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_7o1oZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_8P4IZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5Xt0YZXEe-bUZ-w3fFkrg" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_5Jv6H5ZCEe-S5LJtyBrH7w">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-feYYZXEe-bUZ-w3fFkrg" general="_r5BvkIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_8P4YZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_8P4oZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5YU4IZXEe-bUZ-w3fFkrg" name="GraphViz">
              <ownedComment xmi:id="_5Jv6IJZCEe-S5LJtyBrH7w">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-gFeIZXEe-bUZ-w3fFkrg" general="_r5-KwIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_8P44ZXEe-bUZ-w3fFkrg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_8P5IZXEe-bUZ-w3fFkrg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_8P5YZXEe-bUZ-w3fFkrg" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_8P5oZXEe-bUZ-w3fFkrg" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_8P54ZXEe-bUZ-w3fFkrg" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_8P6YZXEe-bUZ-w3fFkrg" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_8P64ZXEe-bUZ-w3fFkrg" name="wfm" visibility="package" type="_r5S1UIZXEe-bUZ-w3fFkrg" association="_sA-KrYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_8P7YZXEe-bUZ-w3fFkrg" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_8P74ZXEe-bUZ-w3fFkrg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_828YZXEe-bUZ-w3fFkrg" name="gv" visibility="package" type="_r5YU4IZXEe-bUZ-w3fFkrg" association="_sA-xsYZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAaxE4ZXEe-bUZ-w3fFkrg" name="GraphViz" specification="_r-feY4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAaxFIZXEe-bUZ-w3fFkrg" name="wfm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAaxFYZXEe-bUZ-w3fFkrg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAaxFoZXEe-bUZ-w3fFkrg" type="_r5YU4IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAbYEIZXEe-bUZ-w3fFkrg" name="GraphViz" specification="_r-gFcIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAbYEYZXEe-bUZ-w3fFkrg" name="wfm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAbYEoZXEe-bUZ-w3fFkrg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAbYE4ZXEe-bUZ-w3fFkrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAbYFIZXEe-bUZ-w3fFkrg" type="_r5YU4IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAbYFYZXEe-bUZ-w3fFkrg" name="visualization" specification="_r5YU4YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAbYFoZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAbYF4ZXEe-bUZ-w3fFkrg" name="initializeGraphVizContent" specification="_r5Y78IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAbYGIZXEe-bUZ-w3fFkrg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAbYGYZXEe-bUZ-w3fFkrg" name="finalizeGraphVizContent" specification="_r5Y78oZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAbYGoZXEe-bUZ-w3fFkrg" name="getGraphVizContent" specification="_r5Y784ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAbYG4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAbYHIZXEe-bUZ-w3fFkrg" name="createGraphVizContent" specification="_r5Y79YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAbYHYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAbYHoZXEe-bUZ-w3fFkrg" name="addFlowToGraphViz" specification="_r5Y794ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAbYH4ZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAbYIIZXEe-bUZ-w3fFkrg" name="addSrcNodeToGraphViz" specification="_r5Y7-YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAbYIYZXEe-bUZ-w3fFkrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAbYIoZXEe-bUZ-w3fFkrg" name="addSnkNodeToGraphViz" specification="_r5Y7-4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAbYI4ZXEe-bUZ-w3fFkrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAbYJIZXEe-bUZ-w3fFkrg" name="finalizeCurrentFlowInGraphViz" specification="_r5Y7_YZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAbYJYZXEe-bUZ-w3fFkrg" name="addNodeName" specification="_r5Y7_oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAbYJoZXEe-bUZ-w3fFkrg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAbYJ4ZXEe-bUZ-w3fFkrg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5YU4YZXEe-bUZ-w3fFkrg" name="visualization" method="_sAbYFYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-gFd4ZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Y78IZXEe-bUZ-w3fFkrg" name="initializeGraphVizContent" method="_sAbYF4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5Y78YZXEe-bUZ-w3fFkrg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Y78oZXEe-bUZ-w3fFkrg" name="finalizeGraphVizContent" method="_sAbYGYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5Y784ZXEe-bUZ-w3fFkrg" name="getGraphVizContent" method="_sAbYGoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JwhIJZCEe-S5LJtyBrH7w">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5Y79IZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Y79YZXEe-bUZ-w3fFkrg" name="createGraphVizContent" method="_sAbYHIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5Y79oZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Y794ZXEe-bUZ-w3fFkrg" name="addFlowToGraphViz" method="_sAbYHoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5Y7-IZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Y7-YZXEe-bUZ-w3fFkrg" name="addSrcNodeToGraphViz" method="_sAbYIIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5Y7-oZXEe-bUZ-w3fFkrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Y7-4ZXEe-bUZ-w3fFkrg" name="addSnkNodeToGraphViz" method="_sAbYIoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5Y7_IZXEe-bUZ-w3fFkrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5Y7_YZXEe-bUZ-w3fFkrg" name="finalizeCurrentFlowInGraphViz" method="_sAbYJIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5Y7_oZXEe-bUZ-w3fFkrg" name="addNodeName" visibility="private" method="_sAbYJYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5Y7_4ZXEe-bUZ-w3fFkrg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5Y8AIZXEe-bUZ-w3fFkrg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-feY4ZXEe-bUZ-w3fFkrg" name="GraphViz" visibility="package" method="_sAaxE4ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-feZoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-feZ4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-feZIZXEe-bUZ-w3fFkrg" name="wfm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-feZYZXEe-bUZ-w3fFkrg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-feaIZXEe-bUZ-w3fFkrg" type="_r5YU4IZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-gFcIZXEe-bUZ-w3fFkrg" name="GraphViz" visibility="package" method="_sAbYEIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-gFdIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-gFdYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-gFcYZXEe-bUZ-w3fFkrg" name="wfm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-gFcoZXEe-bUZ-w3fFkrg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-gFc4ZXEe-bUZ-w3fFkrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-gFdoZXEe-bUZ-w3fFkrg" type="_r5YU4IZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5ZjAIZXEe-bUZ-w3fFkrg" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_5JwhIZZCEe-S5LJtyBrH7w">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_r_arcIZXEe-bUZ-w3fFkrg" general="_r-gsiYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_8284ZXEe-bUZ-w3fFkrg" name="gv" visibility="package" type="_r5YU4IZXEe-bUZ-w3fFkrg" association="_sA-xtIZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAbYKIZXEe-bUZ-w3fFkrg" name="GraphVizListener" specification="_r-hTlYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAbYKYZXEe-bUZ-w3fFkrg" name="gv" type="_r5YU4IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAbYKoZXEe-bUZ-w3fFkrg" type="_r5ZjAIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAbYK4ZXEe-bUZ-w3fFkrg" name="buildGraphViz" specification="_r-hTmoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAbYLIZXEe-bUZ-w3fFkrg" name="gv" type="_r5YU4IZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_IIZXEe-bUZ-w3fFkrg" name="enterWarpName" specification="_r-h6oYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_IYZXEe-bUZ-w3fFkrg" name="ctx" type="_r-hTnIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_IoZXEe-bUZ-w3fFkrg" name="exitWarp" specification="_r-h6qIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_I4ZXEe-bUZ-w3fFkrg" name="ctx" type="_r-h6poZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_JIZXEe-bUZ-w3fFkrg" name="enterFlowName" specification="_r-ihsoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_JYZXEe-bUZ-w3fFkrg" name="ctx" type="_r-ihsIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_JoZXEe-bUZ-w3fFkrg" name="exitSrcNode" specification="_r-ihuYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_J4ZXEe-bUZ-w3fFkrg" name="ctx" type="_r-iht4ZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_KIZXEe-bUZ-w3fFkrg" name="exitSnkNode" specification="_r-jIwYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_KYZXEe-bUZ-w3fFkrg" name="ctx" type="_r-ihvoZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_KoZXEe-bUZ-w3fFkrg" name="exitFlow" specification="_r-jIyIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_K4ZXEe-bUZ-w3fFkrg" name="ctx" type="_r-jIxoZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-hTlYZXEe-bUZ-w3fFkrg" name="GraphVizListener" visibility="private" method="_sAbYKIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-hTl4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-hTmIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-hTloZXEe-bUZ-w3fFkrg" name="gv" type="_r5YU4IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-hTmYZXEe-bUZ-w3fFkrg" type="_r5ZjAIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-hTmoZXEe-bUZ-w3fFkrg" name="buildGraphViz" isStatic="true" method="_sAbYK4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-hTm4ZXEe-bUZ-w3fFkrg" name="gv" type="_r5YU4IZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-h6oYZXEe-bUZ-w3fFkrg" name="enterWarpName" method="_sAb_IIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-h6ooZXEe-bUZ-w3fFkrg" name="ctx" type="_r-hTnIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-h6qIZXEe-bUZ-w3fFkrg" name="exitWarp" method="_sAb_IoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-h6qYZXEe-bUZ-w3fFkrg" name="ctx" type="_r-h6poZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-ihsoZXEe-bUZ-w3fFkrg" name="enterFlowName" method="_sAb_JIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-ihs4ZXEe-bUZ-w3fFkrg" name="ctx" type="_r-ihsIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-ihuYZXEe-bUZ-w3fFkrg" name="exitSrcNode" method="_sAb_JoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-ihuoZXEe-bUZ-w3fFkrg" name="ctx" type="_r-iht4ZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-jIwYZXEe-bUZ-w3fFkrg" name="exitSnkNode" method="_sAb_KIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-jIwoZXEe-bUZ-w3fFkrg" name="ctx" type="_r-ihvoZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-jIyIZXEe-bUZ-w3fFkrg" name="exitFlow" method="_sAb_KoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-jIyYZXEe-bUZ-w3fFkrg" name="ctx" type="_r-jIxoZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5axIIZXEe-bUZ-w3fFkrg" name="GuiVisualization">
              <ownedComment xmi:id="_5JwhIpZCEe-S5LJtyBrH7w">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_r_829YZXEe-bUZ-w3fFkrg" name="frame" visibility="package" type="_r-jv0oZXEe-bUZ-w3fFkrg" association="_sA-xt4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_9eAIZXEe-bUZ-w3fFkrg" name="jtable" visibility="package" type="_r-jv1oZXEe-bUZ-w3fFkrg" association="_sA-xuoZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_LIZXEe-bUZ-w3fFkrg" name="GuiVisualization" specification="_r5axIYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_LYZXEe-bUZ-w3fFkrg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAb_LoZXEe-bUZ-w3fFkrg" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAb_L4ZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAb_MIZXEe-bUZ-w3fFkrg" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAb_MYZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAb_MoZXEe-bUZ-w3fFkrg" type="_r5axIIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_M4ZXEe-bUZ-w3fFkrg" name="setVisible" specification="_r5axK4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_NIZXEe-bUZ-w3fFkrg" name="resizeColumnWidth" specification="_r_arcYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_NYZXEe-bUZ-w3fFkrg" name="table" type="_r-jv1oZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5axIYZXEe-bUZ-w3fFkrg" name="GuiVisualization" method="_sAb_LIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5axJYZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5axJoZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5JwhI5ZCEe-S5LJtyBrH7w">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_r5axIoZXEe-bUZ-w3fFkrg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5axI4ZXEe-bUZ-w3fFkrg" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5axKIZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5axJIZXEe-bUZ-w3fFkrg" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5axKYZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5axJ4ZXEe-bUZ-w3fFkrg" type="_r5axIIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5axK4ZXEe-bUZ-w3fFkrg" name="setVisible" method="_sAb_M4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JwhJJZCEe-S5LJtyBrH7w">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r_arcYZXEe-bUZ-w3fFkrg" name="resizeColumnWidth" visibility="private" method="_sAb_NIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_arcoZXEe-bUZ-w3fFkrg" name="table" type="_r-jv1oZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5bYMIZXEe-bUZ-w3fFkrg" name="InputGraphFile">
              <ownedComment xmi:id="_5JwhJZZCEe-S5LJtyBrH7w">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_r_9eAoZXEe-bUZ-w3fFkrg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_9eA4ZXEe-bUZ-w3fFkrg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_9eBIZXEe-bUZ-w3fFkrg" name="wfm" visibility="private" type="_r5S1UIZXEe-bUZ-w3fFkrg" association="_sA_YwYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_9eBoZXEe-bUZ-w3fFkrg" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_9eB4ZXEe-bUZ-w3fFkrg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_9eCYZXEe-bUZ-w3fFkrg" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_9eCoZXEe-bUZ-w3fFkrg" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_NoZXEe-bUZ-w3fFkrg" name="InputGraphFile" specification="_r-k984ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_N4ZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAb_OIZXEe-bUZ-w3fFkrg" type="_r5bYMIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_OYZXEe-bUZ-w3fFkrg" name="InputGraphFile" specification="_r-k9-IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_OoZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAb_O4ZXEe-bUZ-w3fFkrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAb_PIZXEe-bUZ-w3fFkrg" type="_r5bYMIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_PYZXEe-bUZ-w3fFkrg" name="setGraphFileName" specification="_r5bYMYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_PoZXEe-bUZ-w3fFkrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_P4ZXEe-bUZ-w3fFkrg" name="verifyGraphFileName" specification="_r5bYM4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_QIZXEe-bUZ-w3fFkrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_QYZXEe-bUZ-w3fFkrg" name="readGraphFile" specification="_r5b_QIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_QoZXEe-bUZ-w3fFkrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAb_Q4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_RIZXEe-bUZ-w3fFkrg" name="getInputGraphFileName" specification="_r5b_Q4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_RYZXEe-bUZ-w3fFkrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAb_RoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_R4ZXEe-bUZ-w3fFkrg" name="readGraphFileContents" specification="_r5b_RoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_SIZXEe-bUZ-w3fFkrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAb_SYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAb_SoZXEe-bUZ-w3fFkrg" name="printVerboseMessage" specification="_r5b_SYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAb_S4ZXEe-bUZ-w3fFkrg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAb_TIZXEe-bUZ-w3fFkrg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAb_TYZXEe-bUZ-w3fFkrg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5bYMYZXEe-bUZ-w3fFkrg" name="setGraphFileName" visibility="private" method="_sAb_PYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5bYMoZXEe-bUZ-w3fFkrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5bYM4ZXEe-bUZ-w3fFkrg" name="verifyGraphFileName" visibility="private" method="_sAb_P4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5bYNIZXEe-bUZ-w3fFkrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5b_QIZXEe-bUZ-w3fFkrg" name="readGraphFile" method="_sAb_QYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5b_QYZXEe-bUZ-w3fFkrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5b_QoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5b_Q4ZXEe-bUZ-w3fFkrg" name="getInputGraphFileName" visibility="private" method="_sAb_RIZXEe-bUZ-w3fFkrg" raisedException="_r_bSgIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5b_RIZXEe-bUZ-w3fFkrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5b_RYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5b_RoZXEe-bUZ-w3fFkrg" name="readGraphFileContents" visibility="private" method="_sAb_R4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5b_R4ZXEe-bUZ-w3fFkrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5b_SIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5b_SYZXEe-bUZ-w3fFkrg" name="printVerboseMessage" visibility="private" method="_sAb_SoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5b_SoZXEe-bUZ-w3fFkrg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5b_S4ZXEe-bUZ-w3fFkrg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5b_TIZXEe-bUZ-w3fFkrg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-k984ZXEe-bUZ-w3fFkrg" name="InputGraphFile" method="_sAb_NoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-k99YZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-k99oZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-k99IZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-k994ZXEe-bUZ-w3fFkrg" type="_r5bYMIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-k9-IZXEe-bUZ-w3fFkrg" name="InputGraphFile" method="_sAb_OYZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-k9-4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-k9_IZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-k9-YZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-k9-oZXEe-bUZ-w3fFkrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-k9_YZXEe-bUZ-w3fFkrg" type="_r5bYMIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5cmUIZXEe-bUZ-w3fFkrg" name="InstructionTimeSlot">
              <generalization xmi:id="_r-llAIZXEe-bUZ-w3fFkrg" general="_r5ykkIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_-FEIZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_-FEYZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAcmMIZXEe-bUZ-w3fFkrg" name="InstructionTimeSlot" specification="_r5cmUYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAcmMYZXEe-bUZ-w3fFkrg" type="_r5cmUIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAcmMoZXEe-bUZ-w3fFkrg" name="InstructionTimeSlot" specification="_r5dNYIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAcmM4ZXEe-bUZ-w3fFkrg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAcmNIZXEe-bUZ-w3fFkrg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAcmNYZXEe-bUZ-w3fFkrg" type="_r5cmUIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAcmNoZXEe-bUZ-w3fFkrg" name="InstructionTimeSlot" specification="_r5dNZoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAcmN4ZXEe-bUZ-w3fFkrg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAcmOIZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAcmOYZXEe-bUZ-w3fFkrg" type="_r5cmUIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5cmUYZXEe-bUZ-w3fFkrg" name="InstructionTimeSlot" method="_sAcmMIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5cmUoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5cmU4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5cmVIZXEe-bUZ-w3fFkrg" type="_r5cmUIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5dNYIZXEe-bUZ-w3fFkrg" name="InstructionTimeSlot" visibility="package" method="_sAcmMoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5dNY4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5dNZIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5dNYYZXEe-bUZ-w3fFkrg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5dNYoZXEe-bUZ-w3fFkrg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5dNZYZXEe-bUZ-w3fFkrg" type="_r5cmUIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5dNZoZXEe-bUZ-w3fFkrg" name="InstructionTimeSlot" visibility="package" method="_sAcmNoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5dNaIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5dNaYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5dNZ4ZXEe-bUZ-w3fFkrg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5dNa4ZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5dNaoZXEe-bUZ-w3fFkrg" type="_r5cmUIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5dNbIZXEe-bUZ-w3fFkrg" name="LatencyAnalysis">
              <ownedComment xmi:id="_5JwhJpZCEe-S5LJtyBrH7w">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_r_-FEoZXEe-bUZ-w3fFkrg" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_-FE4ZXEe-bUZ-w3fFkrg" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_-FFYZXEe-bUZ-w3fFkrg" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_-FF4ZXEe-bUZ-w3fFkrg" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_-FGIZXEe-bUZ-w3fFkrg" name="latencyReport" visibility="private" type="_r5PyAYZXEe-bUZ-w3fFkrg" association="_sA_YxIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_-FGoZXEe-bUZ-w3fFkrg" name="program" visibility="private" type="_r5nlcIZXEe-bUZ-w3fFkrg" association="_sA_Yx4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_-FHIZXEe-bUZ-w3fFkrg" name="workload" visibility="private" type="_r6Jw8IZXEe-bUZ-w3fFkrg" association="_sA_YyoZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_-sIYZXEe-bUZ-w3fFkrg" name="programTable" visibility="private" type="_r5tFAIZXEe-bUZ-w3fFkrg" association="_sA__0YZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_-sI4ZXEe-bUZ-w3fFkrg" name="nodeIndex" visibility="private" type="_r-T4MIZXEe-bUZ-w3fFkrg" association="_sA__1IZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAcmOoZXEe-bUZ-w3fFkrg" name="LatencyAnalysis" specification="_r-mMEIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAcmO4ZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAcmPIZXEe-bUZ-w3fFkrg" type="_r5dNbIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAcmPYZXEe-bUZ-w3fFkrg" name="LatencyAnalysis" specification="_r-mMFYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAcmPoZXEe-bUZ-w3fFkrg" name="program" type="_r5nlcIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAcmP4ZXEe-bUZ-w3fFkrg" type="_r5dNbIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAcmQIZXEe-bUZ-w3fFkrg" name="latencyReport" specification="_r5d0cIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAcmQYZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAcmQoZXEe-bUZ-w3fFkrg" name="numMatchingTx" specification="_r5d0cYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAcmQ4ZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAcmRIZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAcmRYZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAcmRoZXEe-bUZ-w3fFkrg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAcmR4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5d0cIZXEe-bUZ-w3fFkrg" name="latencyReport" method="_sAcmQIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-mMGoZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5d0cYZXEe-bUZ-w3fFkrg" name="numMatchingTx" method="_sAcmQoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5d0coZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5d0c4ZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5d0dIZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5d0dYZXEe-bUZ-w3fFkrg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5d0doZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-mMEIZXEe-bUZ-w3fFkrg" name="LatencyAnalysis" visibility="package" method="_sAcmOoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-mMEoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-mME4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-mMEYZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-mMFIZXEe-bUZ-w3fFkrg" type="_r5dNbIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-mMFYZXEe-bUZ-w3fFkrg" name="LatencyAnalysis" visibility="package" method="_sAcmPYZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-mMF4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-mMGIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-mMFoZXEe-bUZ-w3fFkrg" name="program" type="_r5nlcIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-mMGYZXEe-bUZ-w3fFkrg" type="_r5dNbIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5ebgIZXEe-bUZ-w3fFkrg" name="LatencyVisualization">
              <ownedComment xmi:id="_5JwhJ5ZCEe-S5LJtyBrH7w">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-mzIIZXEe-bUZ-w3fFkrg" general="_r5-KwIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r_-sJoZXEe-bUZ-w3fFkrg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r_-sJ4ZXEe-bUZ-w3fFkrg" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r_-sKIZXEe-bUZ-w3fFkrg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r__TMIZXEe-bUZ-w3fFkrg" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r__TMYZXEe-bUZ-w3fFkrg" name="warp" visibility="private" type="_r5__8YZXEe-bUZ-w3fFkrg" association="_sA__14ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r__TM4ZXEe-bUZ-w3fFkrg" name="la" visibility="private" type="_r5dNbIZXEe-bUZ-w3fFkrg" association="_sA__2oZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAcmSIZXEe-bUZ-w3fFkrg" name="LatencyVisualization" specification="_r-mMG4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAcmSYZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAcmSoZXEe-bUZ-w3fFkrg" type="_r5ebgIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-mMG4ZXEe-bUZ-w3fFkrg" name="LatencyVisualization" visibility="package" method="_sAcmSIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-mMHYZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-mMHoZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-mMHIZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-mMH4ZXEe-bUZ-w3fFkrg" type="_r5ebgIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5fCkIZXEe-bUZ-w3fFkrg" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_r_b5kIZXEe-bUZ-w3fFkrg" client="_r5fCkIZXEe-bUZ-w3fFkrg" supplier="_r-bM9oZXEe-bUZ-w3fFkrg" contract="_r-bM9oZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAcmS4ZXEe-bUZ-w3fFkrg" name="compare" specification="_r_b5koZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAcmTIZXEe-bUZ-w3fFkrg" name="obj1" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAcmTYZXEe-bUZ-w3fFkrg" name="obj2" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAcmToZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_b5koZXEe-bUZ-w3fFkrg" name="compare" method="_sAcmS4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_b5k4ZXEe-bUZ-w3fFkrg" name="obj1" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_b5lIZXEe-bUZ-w3fFkrg" name="obj2" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_b5lYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5fCkoZXEe-bUZ-w3fFkrg" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_r_cgo4ZXEe-bUZ-w3fFkrg" client="_r5fCkoZXEe-bUZ-w3fFkrg" supplier="_r-bM9oZXEe-bUZ-w3fFkrg" contract="_r-bM9oZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAcmT4ZXEe-bUZ-w3fFkrg" name="compare" specification="_r_cgpYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAcmUIZXEe-bUZ-w3fFkrg" name="obj1" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAcmUYZXEe-bUZ-w3fFkrg" name="obj2" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAcmUoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_cgpYZXEe-bUZ-w3fFkrg" name="compare" method="_sAcmT4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_cgpoZXEe-bUZ-w3fFkrg" name="obj1" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_cgp4ZXEe-bUZ-w3fFkrg" name="obj2" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_cgqIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5fpoYZXEe-bUZ-w3fFkrg" name="Node">
              <generalization xmi:id="_r-naNoZXEe-bUZ-w3fFkrg" general="_r6UJAIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r__TNYZXEe-bUZ-w3fFkrg" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r__TNoZXEe-bUZ-w3fFkrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r__TN4ZXEe-bUZ-w3fFkrg" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r__TOIZXEe-bUZ-w3fFkrg" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r__TOYZXEe-bUZ-w3fFkrg" name="edges" type="_r-UfQIZXEe-bUZ-w3fFkrg" isReadOnly="true" association="_sA__3YZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r__TO4ZXEe-bUZ-w3fFkrg" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r__6QIZXEe-bUZ-w3fFkrg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_r_dHsIZXEe-bUZ-w3fFkrg" client="_r5fpoYZXEe-bUZ-w3fFkrg" supplier="_r_QTY4ZXEe-bUZ-w3fFkrg" contract="_r_QTY4ZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAcmU4ZXEe-bUZ-w3fFkrg" name="Node" specification="_r5fpooZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAcmVIZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAcmVYZXEe-bUZ-w3fFkrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAcmVoZXEe-bUZ-w3fFkrg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAcmV4ZXEe-bUZ-w3fFkrg" type="_r5fpoYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAcmWIZXEe-bUZ-w3fFkrg" name="compareTo" specification="_r-mzIYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAcmWYZXEe-bUZ-w3fFkrg" name="node" type="_r5fpoYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAcmWoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNQIZXEe-bUZ-w3fFkrg" name="toString" specification="_r5gQsYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAdNQYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNQoZXEe-bUZ-w3fFkrg" name="addEdge" specification="_r-naNIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAdNQ4ZXEe-bUZ-w3fFkrg" name="edge" type="_r5QZGoZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNRIZXEe-bUZ-w3fFkrg" name="addConflict" specification="_r5gQtoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAdNRYZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNRoZXEe-bUZ-w3fFkrg" name="numEdges" specification="_r5gQuIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAdNR4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNSIZXEe-bUZ-w3fFkrg" name="print" specification="_r5gQuoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAdNSYZXEe-bUZ-w3fFkrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNSoZXEe-bUZ-w3fFkrg" name="print" specification="_r5gQv4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5fpooZXEe-bUZ-w3fFkrg" name="Node" visibility="package" method="_sAcmU4ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5fppoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5fpp4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5fpo4ZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5fppIZXEe-bUZ-w3fFkrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5fppYZXEe-bUZ-w3fFkrg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5gQsIZXEe-bUZ-w3fFkrg" type="_r5fpoYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5gQsYZXEe-bUZ-w3fFkrg" name="toString" method="_sAdNQIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5gQsoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5gQtoZXEe-bUZ-w3fFkrg" name="addConflict" method="_sAdNRIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5gQt4ZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5gQuIZXEe-bUZ-w3fFkrg" name="numEdges" method="_sAdNRoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5gQuYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5gQuoZXEe-bUZ-w3fFkrg" name="print" method="_sAdNSIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5gQu4ZXEe-bUZ-w3fFkrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5gQv4ZXEe-bUZ-w3fFkrg" name="print" method="_sAdNSoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r-mzIYZXEe-bUZ-w3fFkrg" name="compareTo" method="_sAcmWIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-mzIoZXEe-bUZ-w3fFkrg" name="node" type="_r5fpoYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-naMIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-naNIZXEe-bUZ-w3fFkrg" name="addEdge" method="_sAdNQoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-naNYZXEe-bUZ-w3fFkrg" name="edge" type="_r5QZGoZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5g3w4ZXEe-bUZ-w3fFkrg" name="NodeMap">
              <ownedComment xmi:id="_5JwhKJZCEe-S5LJtyBrH7w">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-naN4ZXEe-bUZ-w3fFkrg" general="_r5BvkIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r__6QYZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r__6QoZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5he0IZXEe-bUZ-w3fFkrg" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_5JxvQJZCEe-S5LJtyBrH7w">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-oBR4ZXEe-bUZ-w3fFkrg" general="_r5zys4ZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNS4ZXEe-bUZ-w3fFkrg" name="NonPreemptiveSchedule" specification="_r-oBQYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAdNTIZXEe-bUZ-w3fFkrg" name="poset" type="_r5is8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAdNTYZXEe-bUZ-w3fFkrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAdNToZXEe-bUZ-w3fFkrg" type="_r5he0IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-oBQYZXEe-bUZ-w3fFkrg" name="NonPreemptiveSchedule" visibility="package" method="_sAdNS4ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-oBRIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-oBRYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-oBQoZXEe-bUZ-w3fFkrg" name="poset" type="_r5is8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-oBQ4ZXEe-bUZ-w3fFkrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-oBRoZXEe-bUZ-w3fFkrg" type="_r5he0IZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5he0YZXEe-bUZ-w3fFkrg" name="NotImplentedVisualization">
              <generalization xmi:id="_r-oBSYZXEe-bUZ-w3fFkrg" general="_r5-KwIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r__6Q4ZXEe-bUZ-w3fFkrg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r__6RIZXEe-bUZ-w3fFkrg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r__6RYZXEe-bUZ-w3fFkrg" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r__6RoZXEe-bUZ-w3fFkrg" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r__6R4ZXEe-bUZ-w3fFkrg" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_r__6SIZXEe-bUZ-w3fFkrg" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNT4ZXEe-bUZ-w3fFkrg" name="NotImplentedVisualization" specification="_r5he0oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAdNUIZXEe-bUZ-w3fFkrg" type="_r5he0YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNUYZXEe-bUZ-w3fFkrg" name="NotImplentedVisualization" specification="_r5he1oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAdNUoZXEe-bUZ-w3fFkrg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAdNU4ZXEe-bUZ-w3fFkrg" type="_r5he0YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNVIZXEe-bUZ-w3fFkrg" name="visualization" specification="_r5iF4IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAdNVYZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5he0oZXEe-bUZ-w3fFkrg" name="NotImplentedVisualization" visibility="package" method="_sAdNT4ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5he04ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5he1IZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5he1YZXEe-bUZ-w3fFkrg" type="_r5he0YZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5he1oZXEe-bUZ-w3fFkrg" name="NotImplentedVisualization" visibility="package" method="_sAdNUYZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5he2IZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5he2YZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5he14ZXEe-bUZ-w3fFkrg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5he2oZXEe-bUZ-w3fFkrg" type="_r5he0YZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5iF4IZXEe-bUZ-w3fFkrg" name="visualization" method="_sAdNVIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-oBSIZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5iF5IZXEe-bUZ-w3fFkrg" name="PeriodComparator">
              <interfaceRealization xmi:id="_r_duwIZXEe-bUZ-w3fFkrg" client="_r5iF5IZXEe-bUZ-w3fFkrg" supplier="_r-bM9oZXEe-bUZ-w3fFkrg" contract="_r-bM9oZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNVoZXEe-bUZ-w3fFkrg" name="compare" specification="_r_duwoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAdNV4ZXEe-bUZ-w3fFkrg" name="obj1" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAdNWIZXEe-bUZ-w3fFkrg" name="obj2" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAdNWYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_duwoZXEe-bUZ-w3fFkrg" name="compare" method="_sAdNVoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_duw4ZXEe-bUZ-w3fFkrg" name="obj1" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_duxIZXEe-bUZ-w3fFkrg" name="obj2" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_duxYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5is8IZXEe-bUZ-w3fFkrg" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_5JxvQZZCEe-S5LJtyBrH7w">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_r__6SYZXEe-bUZ-w3fFkrg" name="activations" visibility="private" type="_r5HPIIZXEe-bUZ-w3fFkrg" association="_sBAm4YZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_r__6S4ZXEe-bUZ-w3fFkrg" name="workload" visibility="private" type="_r6Jw8IZXEe-bUZ-w3fFkrg" association="_sBAm5IZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAAhUYZXEe-bUZ-w3fFkrg" name="flows" visibility="protected" type="_r5UDdIZXEe-bUZ-w3fFkrg" association="_sBAm54ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_sAAhU4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sAAhVIZXEe-bUZ-w3fFkrg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAAhUoZXEe-bUZ-w3fFkrg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAAhVoZXEe-bUZ-w3fFkrg" name="nodes" visibility="private" type="_r5fpoYZXEe-bUZ-w3fFkrg" association="_sBAm6oZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_sAAhWIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sAAhWYZXEe-bUZ-w3fFkrg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAAhV4ZXEe-bUZ-w3fFkrg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAAhW4ZXEe-bUZ-w3fFkrg" name="nodeMap" visibility="private" type="_r5g3w4ZXEe-bUZ-w3fFkrg" association="_sBBN8YZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAAhXYZXEe-bUZ-w3fFkrg" name="priorityQueue" visibility="private" type="_r5vhRoZXEe-bUZ-w3fFkrg" association="_sBBN9IZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sABIYIZXEe-bUZ-w3fFkrg" name="nodeConnectivityMap" visibility="protected" type="_r-T4MIZXEe-bUZ-w3fFkrg" association="_sBBN94ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sABIY4ZXEe-bUZ-w3fFkrg" name="activationMap" visibility="package" type="_r5Xt0YZXEe-bUZ-w3fFkrg" association="_sBBN-oZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNWoZXEe-bUZ-w3fFkrg" name="Poset" specification="_r-ooUoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAdNW4ZXEe-bUZ-w3fFkrg" name="workload" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAdNXIZXEe-bUZ-w3fFkrg" type="_r5is8IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNXYZXEe-bUZ-w3fFkrg" name="getNodeConnectivity" specification="_r5is8YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAdNXoZXEe-bUZ-w3fFkrg" type="_r-T4MIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNX4ZXEe-bUZ-w3fFkrg" name="getNodeNames" specification="_r5is84ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAdNYIZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNYYZXEe-bUZ-w3fFkrg" name="getNodesNamesOrderedAlphabetically" specification="_r5jUAYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAdNYoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAdNY4ZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNZIZXEe-bUZ-w3fFkrg" name="buildPosetOfActivations" specification="_r5jUBYZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNZYZXEe-bUZ-w3fFkrg" name="createEdgeLists" specification="_r5jUBoZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNZoZXEe-bUZ-w3fFkrg" name="createConflictLists" specification="_r5jUB4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAdNZ4ZXEe-bUZ-w3fFkrg" name="createGlobalConflictLists" specification="_r5jUCIZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0UIZXEe-bUZ-w3fFkrg" name="createLocalConflictLists" specification="_r5jUCYZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0UYZXEe-bUZ-w3fFkrg" name="findCoordinator" specification="_r_eV0oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0UoZXEe-bUZ-w3fFkrg" name="nodesInFlow" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAd0U4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0VIZXEe-bUZ-w3fFkrg" name="buildTxArray" specification="_r_eV1oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0VYZXEe-bUZ-w3fFkrg" name="nodesInFlow" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAd0VoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAd0V4ZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0WIZXEe-bUZ-w3fFkrg" name="createInitialActivations" specification="_r5j7EIZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0WYZXEe-bUZ-w3fFkrg" name="getMaxTx" specification="_r-ooV4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0WoZXEe-bUZ-w3fFkrg" name="node" type="_r5fpoYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAd0W4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0XIZXEe-bUZ-w3fFkrg" name="getActivation" specification="_r-pPYYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0XYZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAd0XoZXEe-bUZ-w3fFkrg" name="node" type="_r5fpoYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAd0X4ZXEe-bUZ-w3fFkrg" type="_r5CWpIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0YIZXEe-bUZ-w3fFkrg" name="getHyperPeriod" specification="_r5j7EYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0YYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0YoZXEe-bUZ-w3fFkrg" name="getMaxPhase" specification="_r5j7E4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0Y4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0ZIZXEe-bUZ-w3fFkrg" name="orderActivations" specification="_r5j7FYZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0ZYZXEe-bUZ-w3fFkrg" name="getNextActivation" specification="_r5j7FoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0ZoZXEe-bUZ-w3fFkrg" type="_r5CWpIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0Z4ZXEe-bUZ-w3fFkrg" name="addActivation" specification="_r-pPZoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0aIZXEe-bUZ-w3fFkrg" name="activation" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0aYZXEe-bUZ-w3fFkrg" name="findBaseStation" specification="_r5j7F4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0aoZXEe-bUZ-w3fFkrg" type="_r5fpoYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5is8YZXEe-bUZ-w3fFkrg" name="getNodeConnectivity" visibility="private" method="_sAdNXYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_eV0IZXEe-bUZ-w3fFkrg" type="_r-T4MIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5is84ZXEe-bUZ-w3fFkrg" name="getNodeNames" method="_sAdNX4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_eV0YZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5jUAYZXEe-bUZ-w3fFkrg" name="getNodesNamesOrderedAlphabetically" method="_sAdNYYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5jUAoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5jUA4ZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5jUBYZXEe-bUZ-w3fFkrg" name="buildPosetOfActivations" method="_sAdNZIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5jUBoZXEe-bUZ-w3fFkrg" name="createEdgeLists" visibility="private" method="_sAdNZYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5jUB4ZXEe-bUZ-w3fFkrg" name="createConflictLists" visibility="private" method="_sAdNZoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5jUCIZXEe-bUZ-w3fFkrg" name="createGlobalConflictLists" visibility="private" method="_sAdNZ4ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5jUCYZXEe-bUZ-w3fFkrg" name="createLocalConflictLists" visibility="private" method="_sAd0UIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5j7EIZXEe-bUZ-w3fFkrg" name="createInitialActivations" visibility="private" method="_sAd0WIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5j7EYZXEe-bUZ-w3fFkrg" name="getHyperPeriod" method="_sAd0YIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5j7EoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5j7E4ZXEe-bUZ-w3fFkrg" name="getMaxPhase" method="_sAd0YoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5j7FIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5j7FYZXEe-bUZ-w3fFkrg" name="orderActivations" method="_sAd0ZIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5j7FoZXEe-bUZ-w3fFkrg" name="getNextActivation" method="_sAd0ZYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JxvRJZCEe-S5LJtyBrH7w">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-pPZYZXEe-bUZ-w3fFkrg" type="_r5CWpIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5j7F4ZXEe-bUZ-w3fFkrg" name="findBaseStation" visibility="protected" method="_sAd0aYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JxvRpZCEe-S5LJtyBrH7w">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-pPaIZXEe-bUZ-w3fFkrg" type="_r5fpoYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-ooUoZXEe-bUZ-w3fFkrg" name="Poset" visibility="package" method="_sAdNWoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-ooVIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-ooVYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5JxvQpZCEe-S5LJtyBrH7w">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-ooU4ZXEe-bUZ-w3fFkrg" name="workload" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-ooVoZXEe-bUZ-w3fFkrg" type="_r5is8IZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-ooV4ZXEe-bUZ-w3fFkrg" name="getMaxTx" visibility="private" method="_sAd0WYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-ooWIZXEe-bUZ-w3fFkrg" name="node" type="_r5fpoYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-pPYIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-pPYYZXEe-bUZ-w3fFkrg" name="getActivation" visibility="private" method="_sAd0XIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-pPYoZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-pPY4ZXEe-bUZ-w3fFkrg" name="node" type="_r5fpoYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-pPZIZXEe-bUZ-w3fFkrg" type="_r5CWpIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-pPZoZXEe-bUZ-w3fFkrg" name="addActivation" method="_sAd0Z4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JxvRZZCEe-S5LJtyBrH7w">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-pPZ4ZXEe-bUZ-w3fFkrg" name="activation" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_eV0oZXEe-bUZ-w3fFkrg" name="findCoordinator" visibility="protected" method="_sAd0UYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JxvQ5ZCEe-S5LJtyBrH7w">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_eV04ZXEe-bUZ-w3fFkrg" name="nodesInFlow" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_eV1IZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_eV1oZXEe-bUZ-w3fFkrg" name="buildTxArray" visibility="private" method="_sAd0VIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_eV14ZXEe-bUZ-w3fFkrg" name="nodesInFlow" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_eV2IZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r_eV2YZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5lJMIZXEe-bUZ-w3fFkrg" name="PreemptiveSchedule">
              <ownedComment xmi:id="_5JxvR5ZCEe-S5LJtyBrH7w">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-rEl4ZXEe-bUZ-w3fFkrg" general="_r5zys4ZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0a4ZXEe-bUZ-w3fFkrg" name="PreemptiveSchedule" specification="_r-p2cIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0bIZXEe-bUZ-w3fFkrg" name="poset" type="_r5is8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAd0bYZXEe-bUZ-w3fFkrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAd0boZXEe-bUZ-w3fFkrg" type="_r5lJMIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0b4ZXEe-bUZ-w3fFkrg" name="continueSearch" specification="_r-p2doZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0cIZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAd0cYZXEe-bUZ-w3fFkrg" name="activation" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAd0coZXEe-bUZ-w3fFkrg" type="_r_e84YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0c4ZXEe-bUZ-w3fFkrg" name="toProgram" specification="_r5lwQIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0dIZXEe-bUZ-w3fFkrg" type="_r5tFAIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0dYZXEe-bUZ-w3fFkrg" name="findPreeptiveChannelAndTime" specification="_r-p2fYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0doZXEe-bUZ-w3fFkrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAd0d4ZXEe-bUZ-w3fFkrg" name="schedulableObject" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAd0eIZXEe-bUZ-w3fFkrg" type="_r_e84YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0eYZXEe-bUZ-w3fFkrg" name="findAdditionalTime" specification="_r-qdgIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0eoZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAd0e4ZXEe-bUZ-w3fFkrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAd0fIZXEe-bUZ-w3fFkrg" name="a1" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAd0fYZXEe-bUZ-w3fFkrg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAd0foZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAd0f4ZXEe-bUZ-w3fFkrg" name="findMaxTimeAvailable" specification="_r-qdhoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAd0gIZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAd0gYZXEe-bUZ-w3fFkrg" name="schedulableObject" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAd0goZXEe-bUZ-w3fFkrg" type="_r_e84YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAebYIZXEe-bUZ-w3fFkrg" name="availableTime" specification="_r-qdiYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAebYYZXEe-bUZ-w3fFkrg" name="a1" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAebYoZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebY4ZXEe-bUZ-w3fFkrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebZIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAebZYZXEe-bUZ-w3fFkrg" name="addToSchedule" specification="_r-qdjoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAebZoZXEe-bUZ-w3fFkrg" name="next" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAebZ4ZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebaIZXEe-bUZ-w3fFkrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebaYZXEe-bUZ-w3fFkrg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebaoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAeba4ZXEe-bUZ-w3fFkrg" name="addToSchedule" specification="_r-rEkYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAebbIZXEe-bUZ-w3fFkrg" name="next" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAebbYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5lwQIZXEe-bUZ-w3fFkrg" name="toProgram" method="_sAd0c4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-p2fIZXEe-bUZ-w3fFkrg" type="_r5tFAIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-p2cIZXEe-bUZ-w3fFkrg" name="PreemptiveSchedule" visibility="package" method="_sAd0a4ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-p2c4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-p2dIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-p2cYZXEe-bUZ-w3fFkrg" name="poset" type="_r5is8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-p2coZXEe-bUZ-w3fFkrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-p2dYZXEe-bUZ-w3fFkrg" type="_r5lJMIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-p2doZXEe-bUZ-w3fFkrg" name="continueSearch" visibility="protected" method="_sAd0b4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-p2d4ZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-p2eIZXEe-bUZ-w3fFkrg" name="activation" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_e844ZXEe-bUZ-w3fFkrg" type="_r_e84YZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-p2fYZXEe-bUZ-w3fFkrg" name="findPreeptiveChannelAndTime" visibility="private" method="_sAd0dYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-p2foZXEe-bUZ-w3fFkrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-p2f4ZXEe-bUZ-w3fFkrg" name="schedulableObject" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_fj8IZXEe-bUZ-w3fFkrg" type="_r_e84YZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-qdgIZXEe-bUZ-w3fFkrg" name="findAdditionalTime" visibility="private" method="_sAd0eYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-qdgYZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-qdgoZXEe-bUZ-w3fFkrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-qdg4ZXEe-bUZ-w3fFkrg" name="a1" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-qdhIZXEe-bUZ-w3fFkrg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_fj8YZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-qdhoZXEe-bUZ-w3fFkrg" name="findMaxTimeAvailable" visibility="private" method="_sAd0f4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-qdh4ZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-qdiIZXEe-bUZ-w3fFkrg" name="schedulableObject" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_fj8oZXEe-bUZ-w3fFkrg" type="_r_e84YZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-qdiYZXEe-bUZ-w3fFkrg" name="availableTime" visibility="private" method="_sAebYIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-qdioZXEe-bUZ-w3fFkrg" name="a1" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-qdi4ZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-qdjIZXEe-bUZ-w3fFkrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-qdjYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-qdjoZXEe-bUZ-w3fFkrg" name="addToSchedule" visibility="private" method="_sAebZYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-qdj4ZXEe-bUZ-w3fFkrg" name="next" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-qdkIZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-qdkYZXEe-bUZ-w3fFkrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-qdkoZXEe-bUZ-w3fFkrg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-rEkIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-rEkYZXEe-bUZ-w3fFkrg" name="addToSchedule" visibility="protected" method="_sAeba4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-rEkoZXEe-bUZ-w3fFkrg" name="next" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-rEk4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5m-YIZXEe-bUZ-w3fFkrg" name="PriorityComparator">
              <interfaceRealization xmi:id="_r_fj84ZXEe-bUZ-w3fFkrg" client="_r5m-YIZXEe-bUZ-w3fFkrg" supplier="_r-bM9oZXEe-bUZ-w3fFkrg" contract="_r-bM9oZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAebboZXEe-bUZ-w3fFkrg" name="compare" specification="_r_fj9YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAebb4ZXEe-bUZ-w3fFkrg" name="obj1" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAebcIZXEe-bUZ-w3fFkrg" name="obj2" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAebcYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_fj9YZXEe-bUZ-w3fFkrg" name="compare" method="_sAebboZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_fj9oZXEe-bUZ-w3fFkrg" name="obj1" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_gLAIZXEe-bUZ-w3fFkrg" name="obj2" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_gLAYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5nlcIZXEe-bUZ-w3fFkrg" name="Program">
              <ownedComment xmi:id="_5JxvSJZCEe-S5LJtyBrH7w">
                <body>@author sgoddard &lt;br>&#xD;
@author yongycheng - added comments for 3 functions as per HW2 part 7 instructions. &lt;br>&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sABIZYZXEe-bUZ-w3fFkrg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sABIZoZXEe-bUZ-w3fFkrg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sABvcIZXEe-bUZ-w3fFkrg" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sABvcYZXEe-bUZ-w3fFkrg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sABvcoZXEe-bUZ-w3fFkrg" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sABvc4ZXEe-bUZ-w3fFkrg" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sABvdIZXEe-bUZ-w3fFkrg" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sABvdYZXEe-bUZ-w3fFkrg" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sABvdoZXEe-bUZ-w3fFkrg" name="workLoad" visibility="package" type="_r6Jw8IZXEe-bUZ-w3fFkrg" association="_sBBN_YZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sABveIZXEe-bUZ-w3fFkrg" name="scheduleBuilt" visibility="package" type="_r5tFAIZXEe-bUZ-w3fFkrg" association="_sBB1AYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sABveoZXEe-bUZ-w3fFkrg" name="SchedulerSelected" visibility="package" type="_r_gLBYZXEe-bUZ-w3fFkrg" association="_sBB1BIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sABvfIZXEe-bUZ-w3fFkrg" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sABvfoZXEe-bUZ-w3fFkrg" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sACWgIZXEe-bUZ-w3fFkrg" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sACWgoZXEe-bUZ-w3fFkrg" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sACWhIZXEe-bUZ-w3fFkrg" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sACWhoZXEe-bUZ-w3fFkrg" name="channelsAvailable" visibility="package" type="_r5JEUIZXEe-bUZ-w3fFkrg" association="_sBB1B4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sACWiIZXEe-bUZ-w3fFkrg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sACWioZXEe-bUZ-w3fFkrg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sACWjIZXEe-bUZ-w3fFkrg" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAC9kYZXEe-bUZ-w3fFkrg" name="deadlineMisses" visibility="private" type="_r5PyAYZXEe-bUZ-w3fFkrg" association="_sBB1CoZXEe-bUZ-w3fFkrg"/>
              <interfaceRealization xmi:id="_r-rro4ZXEe-bUZ-w3fFkrg" client="_r5nlcIZXEe-bUZ-w3fFkrg" supplier="_r54rNoZXEe-bUZ-w3fFkrg" contract="_r54rNoZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAebcoZXEe-bUZ-w3fFkrg" name="Program" specification="_r_gyEIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAebc4ZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAebdIZXEe-bUZ-w3fFkrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebdYZXEe-bUZ-w3fFkrg" name="choice" type="_r_gLBYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAebdoZXEe-bUZ-w3fFkrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebd4ZXEe-bUZ-w3fFkrg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebeIZXEe-bUZ-w3fFkrg" type="_r5nlcIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAebeYZXEe-bUZ-w3fFkrg" name="Program" specification="_r_gyGYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAebeoZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAebe4ZXEe-bUZ-w3fFkrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebfIZXEe-bUZ-w3fFkrg" name="choice" type="_r_gLBYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAebfYZXEe-bUZ-w3fFkrg" type="_r5nlcIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAebfoZXEe-bUZ-w3fFkrg" name="setDefaultParameters" specification="_r-sSsIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAebf4ZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAebgIZXEe-bUZ-w3fFkrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebgYZXEe-bUZ-w3fFkrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebgoZXEe-bUZ-w3fFkrg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAebg4ZXEe-bUZ-w3fFkrg" name="toWorkLoad" specification="_r5oMgIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAebhIZXEe-bUZ-w3fFkrg" type="_r6Jw8IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAebhYZXEe-bUZ-w3fFkrg" name="buildProgram" specification="_r_gyIIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAebhoZXEe-bUZ-w3fFkrg" name="choice" type="_r_gLBYZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAebh4ZXEe-bUZ-w3fFkrg" name="buildOriginalProgram" specification="_r5oMgYZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAebiIZXEe-bUZ-w3fFkrg" name="waitInstruction" specification="_r5oMgoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAebiYZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebioZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAebi4ZXEe-bUZ-w3fFkrg" name="elseWaitInstruction" specification="_r5oMhYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAebjIZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebjYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAebjoZXEe-bUZ-w3fFkrg" name="elsePullClause" specification="_r5ozkoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAebj4ZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebkIZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebkYZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebkoZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebk4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAeblIZXEe-bUZ-w3fFkrg" name="hasPushInstruction" specification="_r5ozmIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAeblYZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebloZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebl4ZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebmIZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAebmYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCcIZXEe-bUZ-w3fFkrg" name="pushInstruction" specification="_r5oznoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfCcYZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCcoZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCc4ZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCdIZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCdYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCdoZXEe-bUZ-w3fFkrg" name="getFirstChannelInInstruction" specification="_r5paoIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfCd4ZXEe-bUZ-w3fFkrg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCeIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCeYZXEe-bUZ-w3fFkrg" name="findNextAvailableInstructionTimeSlot" specification="_r-sStoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfCeoZXEe-bUZ-w3fFkrg" name="schedule" type="_r5tFAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAfCe4ZXEe-bUZ-w3fFkrg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCfIZXEe-bUZ-w3fFkrg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCfYZXEe-bUZ-w3fFkrg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCfoZXEe-bUZ-w3fFkrg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCf4ZXEe-bUZ-w3fFkrg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAfCgIZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCgYZXEe-bUZ-w3fFkrg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAfCgoZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCg4ZXEe-bUZ-w3fFkrg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfChIZXEe-bUZ-w3fFkrg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfChYZXEe-bUZ-w3fFkrg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfChoZXEe-bUZ-w3fFkrg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCh4ZXEe-bUZ-w3fFkrg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCiIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCiYZXEe-bUZ-w3fFkrg" name="slotIsAvailable" specification="_r-sSxoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfCioZXEe-bUZ-w3fFkrg" name="currentInstructionTimeSlot" type="_r5cmUIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAfCi4ZXEe-bUZ-w3fFkrg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCjIZXEe-bUZ-w3fFkrg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCjYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCjoZXEe-bUZ-w3fFkrg" name="findNextAvailableChannel" specification="_r-s5xIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfCj4ZXEe-bUZ-w3fFkrg" name="schedule" type="_r5tFAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAfCkIZXEe-bUZ-w3fFkrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCkYZXEe-bUZ-w3fFkrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCkoZXEe-bUZ-w3fFkrg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfCk4ZXEe-bUZ-w3fFkrg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfClIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfClYZXEe-bUZ-w3fFkrg" name="selectPriority" specification="_r5pao4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCloZXEe-bUZ-w3fFkrg" name="selectRM" specification="_r5papIZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCl4ZXEe-bUZ-w3fFkrg" name="selectDM" specification="_r5papYZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCmIZXEe-bUZ-w3fFkrg" name="selectRtHART" specification="_r5papoZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCmYZXEe-bUZ-w3fFkrg" name="setScheduleSelected" specification="_r_hZIYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfCmoZXEe-bUZ-w3fFkrg" name="choice" type="_r_gLBYZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCm4ZXEe-bUZ-w3fFkrg" name="setSchedule" specification="_r-s5y4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfCnIZXEe-bUZ-w3fFkrg" name="schedule" type="_r5tFAIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCnYZXEe-bUZ-w3fFkrg" name="getSchedule" specification="_r5pap4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfCnoZXEe-bUZ-w3fFkrg" type="_r5tFAIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCn4ZXEe-bUZ-w3fFkrg" name="getSchedulerName" specification="_r5paqIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfCoIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCoYZXEe-bUZ-w3fFkrg" name="getSchChoice" specification="_r5qBs4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfCooZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCo4ZXEe-bUZ-w3fFkrg" name="getNumChannels" specification="_r5qBtYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfCpIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCpYZXEe-bUZ-w3fFkrg" name="getNumTransmissions" specification="_r5qBuoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfCpoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCp4ZXEe-bUZ-w3fFkrg" name="getRealTimeHartFlag" specification="_r5qBv4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfCqIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfCqYZXEe-bUZ-w3fFkrg" name="setRealTimeHartFlag" specification="_r5qBwYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfCqoZXEe-bUZ-w3fFkrg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfpgIZXEe-bUZ-w3fFkrg" name="getMinPacketReceptionRate" specification="_r5qBw4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfpgYZXEe-bUZ-w3fFkrg" type="_r_hZI4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfpgoZXEe-bUZ-w3fFkrg" name="getE2e" specification="_r5qow4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfpg4ZXEe-bUZ-w3fFkrg" type="_r_hZI4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfphIZXEe-bUZ-w3fFkrg" name="getName" specification="_r5qox4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfphYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfphoZXEe-bUZ-w3fFkrg" name="getOptimizationFlag" specification="_r5qozIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfph4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfpiIZXEe-bUZ-w3fFkrg" name="deadlineMisses" specification="_r5qo0YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfpiYZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfpioZXEe-bUZ-w3fFkrg" name="getNumFaults" specification="_r5qo0oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfpi4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfpjIZXEe-bUZ-w3fFkrg" name="getNodeMapIndex" specification="_r5rP04ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfpjYZXEe-bUZ-w3fFkrg" type="_r-T4MIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5oMgIZXEe-bUZ-w3fFkrg" name="toWorkLoad" method="_sAebg4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JyWUJZCEe-S5LJtyBrH7w">
                  <body>Function returns the Workload of the program &lt;br>&#xD;
   * @return WorkLoad object &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r-sStYZXEe-bUZ-w3fFkrg" type="_r6Jw8IZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5oMgYZXEe-bUZ-w3fFkrg" name="buildOriginalProgram" method="_sAebh4ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5oMgoZXEe-bUZ-w3fFkrg" name="waitInstruction" visibility="private" method="_sAebiIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5oMg4ZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5oMhIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5oMhYZXEe-bUZ-w3fFkrg" name="elseWaitInstruction" visibility="private" method="_sAebi4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5ozkIZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5ozkYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ozkoZXEe-bUZ-w3fFkrg" name="elsePullClause" visibility="private" method="_sAebjoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5ozk4ZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5ozlIZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5ozlYZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5ozloZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5ozl4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5ozmIZXEe-bUZ-w3fFkrg" name="hasPushInstruction" visibility="private" method="_sAeblIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5ozmYZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5ozmoZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5ozm4ZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5oznIZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5oznYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5oznoZXEe-bUZ-w3fFkrg" name="pushInstruction" visibility="private" method="_sAfCcIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5ozn4ZXEe-bUZ-w3fFkrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5ozoIZXEe-bUZ-w3fFkrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5ozoYZXEe-bUZ-w3fFkrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5ozooZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5ozo4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5paoIZXEe-bUZ-w3fFkrg" name="getFirstChannelInInstruction" visibility="private" method="_sAfCdoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5paoYZXEe-bUZ-w3fFkrg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5paooZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5pao4ZXEe-bUZ-w3fFkrg" name="selectPriority" method="_sAfClYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5papIZXEe-bUZ-w3fFkrg" name="selectRM" method="_sAfCloZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5papYZXEe-bUZ-w3fFkrg" name="selectDM" method="_sAfCl4ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5papoZXEe-bUZ-w3fFkrg" name="selectRtHART" method="_sAfCmIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r5pap4ZXEe-bUZ-w3fFkrg" name="getSchedule" method="_sAfCnYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JyWUZZCEe-S5LJtyBrH7w">
                  <body>Function returns the schedule built as a ProgramSchedule object. &lt;br>&#xD;
   * @return scheduleBuilt &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r-s5zYZXEe-bUZ-w3fFkrg" type="_r5tFAIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5paqIZXEe-bUZ-w3fFkrg" name="getSchedulerName" method="_sAfCn4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5paqYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5qBs4ZXEe-bUZ-w3fFkrg" name="getSchChoice" method="_sAfCoYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5qBtIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5qBtYZXEe-bUZ-w3fFkrg" name="getNumChannels" method="_sAfCo4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5qBtoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5qBuoZXEe-bUZ-w3fFkrg" name="getNumTransmissions" method="_sAfCpYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5qBu4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5qBv4ZXEe-bUZ-w3fFkrg" name="getRealTimeHartFlag" visibility="private" method="_sAfCp4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5qBwIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5qBwYZXEe-bUZ-w3fFkrg" name="setRealTimeHartFlag" visibility="private" method="_sAfCqYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5qBwoZXEe-bUZ-w3fFkrg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5qBw4ZXEe-bUZ-w3fFkrg" name="getMinPacketReceptionRate" method="_sAfpgIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_hZJYZXEe-bUZ-w3fFkrg" type="_r_hZI4ZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5qow4ZXEe-bUZ-w3fFkrg" name="getE2e" method="_sAfpgoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_hZJoZXEe-bUZ-w3fFkrg" type="_r_hZI4ZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5qox4ZXEe-bUZ-w3fFkrg" name="getName" method="_sAfphIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5qoyIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5qozIZXEe-bUZ-w3fFkrg" name="getOptimizationFlag" method="_sAfphoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5qozYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5qo0YZXEe-bUZ-w3fFkrg" name="deadlineMisses" method="_sAfpiIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-s5zoZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5qo0oZXEe-bUZ-w3fFkrg" name="getNumFaults" method="_sAfpioZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5qo04ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5rP04ZXEe-bUZ-w3fFkrg" name="getNodeMapIndex" method="_sAfpjIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JyWUpZCEe-S5LJtyBrH7w">
                  <body>Function creates and returns a HashMap with the nodes&#xD;
   * and their indexes when sorted alphabetically. &lt;br>&#xD;
   * @return HashMap of (node name, index) &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r_hZJ4ZXEe-bUZ-w3fFkrg" type="_r-T4MIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-sSsIZXEe-bUZ-w3fFkrg" name="setDefaultParameters" visibility="private" method="_sAebfoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-sSsYZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-sSsoZXEe-bUZ-w3fFkrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-sSs4ZXEe-bUZ-w3fFkrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-sStIZXEe-bUZ-w3fFkrg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-sStoZXEe-bUZ-w3fFkrg" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_sAfCeYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-sSt4ZXEe-bUZ-w3fFkrg" name="schedule" type="_r5tFAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-sSuIZXEe-bUZ-w3fFkrg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-sSuYZXEe-bUZ-w3fFkrg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-sSuoZXEe-bUZ-w3fFkrg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-sSu4ZXEe-bUZ-w3fFkrg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-sSvIZXEe-bUZ-w3fFkrg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r-sSxIZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-sSvYZXEe-bUZ-w3fFkrg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r-sSxYZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-sSvoZXEe-bUZ-w3fFkrg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-sSv4ZXEe-bUZ-w3fFkrg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-sSwIZXEe-bUZ-w3fFkrg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-sSwYZXEe-bUZ-w3fFkrg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-sSwoZXEe-bUZ-w3fFkrg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-sSw4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-sSxoZXEe-bUZ-w3fFkrg" name="slotIsAvailable" visibility="private" method="_sAfCiYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-s5wIZXEe-bUZ-w3fFkrg" name="currentInstructionTimeSlot" type="_r5cmUIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-s5wYZXEe-bUZ-w3fFkrg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-s5woZXEe-bUZ-w3fFkrg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-s5w4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-s5xIZXEe-bUZ-w3fFkrg" name="findNextAvailableChannel" visibility="private" method="_sAfCjoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-s5xYZXEe-bUZ-w3fFkrg" name="schedule" type="_r5tFAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-s5xoZXEe-bUZ-w3fFkrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-s5x4ZXEe-bUZ-w3fFkrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-s5yIZXEe-bUZ-w3fFkrg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-s5yYZXEe-bUZ-w3fFkrg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-s5yoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-s5y4ZXEe-bUZ-w3fFkrg" name="setSchedule" visibility="private" method="_sAfCm4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-s5zIZXEe-bUZ-w3fFkrg" name="schedule" type="_r5tFAIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_gyEIZXEe-bUZ-w3fFkrg" name="Program" visibility="package" method="_sAebcoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_gyFoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_gyF4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_gyEYZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_gyEoZXEe-bUZ-w3fFkrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_gyE4ZXEe-bUZ-w3fFkrg" name="choice" type="_r_gLBYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_gyFIZXEe-bUZ-w3fFkrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_gyFYZXEe-bUZ-w3fFkrg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_gyGIZXEe-bUZ-w3fFkrg" type="_r5nlcIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_gyGYZXEe-bUZ-w3fFkrg" name="Program" visibility="package" method="_sAebeYZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_gyHYZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_gyHoZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_gyGoZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_gyG4ZXEe-bUZ-w3fFkrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_gyHIZXEe-bUZ-w3fFkrg" name="choice" type="_r_gLBYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_gyH4ZXEe-bUZ-w3fFkrg" type="_r5nlcIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_gyIIZXEe-bUZ-w3fFkrg" name="buildProgram" method="_sAebhYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_hZIIZXEe-bUZ-w3fFkrg" name="choice" type="_r_gLBYZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_hZIYZXEe-bUZ-w3fFkrg" name="setScheduleSelected" visibility="private" method="_sAfCmYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_hZIoZXEe-bUZ-w3fFkrg" name="choice" type="_r_gLBYZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5tFAIZXEe-bUZ-w3fFkrg" name="ProgramSchedule">
              <generalization xmi:id="_r-uH4IZXEe-bUZ-w3fFkrg" general="_r555UYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAC9k4ZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAC9lIZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfpjoZXEe-bUZ-w3fFkrg" name="ProgramSchedule" specification="_r5tFAYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfpj4ZXEe-bUZ-w3fFkrg" type="_r5tFAIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfpkIZXEe-bUZ-w3fFkrg" name="ProgramSchedule" specification="_r5tFBYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfpkYZXEe-bUZ-w3fFkrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfpkoZXEe-bUZ-w3fFkrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAfpk4ZXEe-bUZ-w3fFkrg" type="_r5tFAIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5tFAYZXEe-bUZ-w3fFkrg" name="ProgramSchedule" method="_sAfpjoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5tFAoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5tFA4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5tFBIZXEe-bUZ-w3fFkrg" type="_r5tFAIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5tFBYZXEe-bUZ-w3fFkrg" name="ProgramSchedule" visibility="package" method="_sAfpkIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5tFCIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5tFCYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5tFBoZXEe-bUZ-w3fFkrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5tFB4ZXEe-bUZ-w3fFkrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5tFCoZXEe-bUZ-w3fFkrg" type="_r5tFAIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5tsEIZXEe-bUZ-w3fFkrg" name="ProgramVisualization">
              <ownedComment xmi:id="_5JyWU5ZCEe-S5LJtyBrH7w">
                <body>Class takes in a WarpInterface object, and includes tools to &#xD;
visualize the data, such as a table/matrix representation of the schedule, &#xD;
header, footer, and title generator with relevant information about the program.&#xD;
Also supports the use of a graphical user interface visualization &#xD;
with the GuiVisualization class. &lt;br>&#xD;
&#xD;
@version 1.5&#xD;
@author sgoddard&#xD;
@author yongycheng - Develop JavaDoc comments for the missing summary comment &#xD;
						  and all methods in in Flow.java&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-uu94ZXEe-bUZ-w3fFkrg" general="_r5-KwIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sADkoIZXEe-bUZ-w3fFkrg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sADkoYZXEe-bUZ-w3fFkrg" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sADkooZXEe-bUZ-w3fFkrg" name="sourceCode" visibility="private" type="_r5tFAIZXEe-bUZ-w3fFkrg" association="_sBCcEIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sADkpIZXEe-bUZ-w3fFkrg" name="program" visibility="private" type="_r5nlcIZXEe-bUZ-w3fFkrg" association="_sBCcE4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sADkpoZXEe-bUZ-w3fFkrg" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfplIZXEe-bUZ-w3fFkrg" name="ProgramVisualization" specification="_r-uH4oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfplYZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAfploZXEe-bUZ-w3fFkrg" type="_r5tsEIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfpl4ZXEe-bUZ-w3fFkrg" name="displayVisualization" specification="_r5tsEYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfpmIZXEe-bUZ-w3fFkrg" type="_r5axIIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfpmYZXEe-bUZ-w3fFkrg" name="createHeader" specification="_r5tsFYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfpmoZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfpm4ZXEe-bUZ-w3fFkrg" name="createFooter" specification="_r5tsGYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfpnIZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAfpnYZXEe-bUZ-w3fFkrg" name="createColumnHeader" specification="_r5uTIoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAfpnoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAfpn4ZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAgQkIZXEe-bUZ-w3fFkrg" name="createVisualizationData" specification="_r5uTKYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAgQkYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAgQkoZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAgQk4ZXEe-bUZ-w3fFkrg" name="createTitle" specification="_r5uTMIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAgQlIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5tsEYZXEe-bUZ-w3fFkrg" name="displayVisualization" method="_sAfpl4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-uu9IZXEe-bUZ-w3fFkrg" type="_r5axIIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5tsFYZXEe-bUZ-w3fFkrg" name="createHeader" visibility="protected" method="_sAfpmYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-uu9YZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5tsGYZXEe-bUZ-w3fFkrg" name="createFooter" visibility="protected" method="_sAfpm4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-uu9oZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5uTIoZXEe-bUZ-w3fFkrg" name="createColumnHeader" visibility="protected" method="_sAfpnYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5uTI4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5uTJIZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5uTKYZXEe-bUZ-w3fFkrg" name="createVisualizationData" visibility="protected" method="_sAgQkIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5uTKoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5uTK4ZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5uTMIZXEe-bUZ-w3fFkrg" name="createTitle" visibility="private" method="_sAgQk4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jy9YJZCEe-S5LJtyBrH7w">
                  <body>Function creates and returns a String as the name of the warp program visualization. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r5uTMYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-uH4oZXEe-bUZ-w3fFkrg" name="ProgramVisualization" visibility="package" method="_sAfplIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-uu8YZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-uu8oZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5JyWVJZCEe-S5LJtyBrH7w">
                  <body>Constructor for ProgramVisualization that sets program, sourceCode,&#xD;
   * and deadlinesMet variables from a warp program. &lt;br>&#xD;
   * &#xD;
   * @param warp	warp program to visualize &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r-uu8IZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-uu84ZXEe-bUZ-w3fFkrg" type="_r5tsEIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5u6MIZXEe-bUZ-w3fFkrg" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_r_inQIZXEe-bUZ-w3fFkrg" client="_r5u6MIZXEe-bUZ-w3fFkrg" supplier="_r-bM9oZXEe-bUZ-w3fFkrg" contract="_r-bM9oZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAgQlYZXEe-bUZ-w3fFkrg" name="compare" specification="_r_inQoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAgQloZXEe-bUZ-w3fFkrg" name="obj1" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAgQl4ZXEe-bUZ-w3fFkrg" name="obj2" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAgQmIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_inQoZXEe-bUZ-w3fFkrg" name="compare" method="_sAgQlYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_inQ4ZXEe-bUZ-w3fFkrg" name="obj1" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_inRIZXEe-bUZ-w3fFkrg" name="obj2" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_inRYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5vhQIZXEe-bUZ-w3fFkrg" name="ReleaseTimeQueue">
              <generalization xmi:id="_r5vhSIZXEe-bUZ-w3fFkrg" general="_r5vhRoZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sADkqIZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sADkqYZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAgQmYZXEe-bUZ-w3fFkrg" name="ReleaseTimeQueue" specification="_r5vhQoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAgQmoZXEe-bUZ-w3fFkrg" type="_r5vhQIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAgQm4ZXEe-bUZ-w3fFkrg" name="ReleaseTimeQueue" specification="_r-uu-IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAgQnIZXEe-bUZ-w3fFkrg" name="schedulableObjects" type="_r-ooUIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAgQnYZXEe-bUZ-w3fFkrg" type="_r5vhQIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5vhQoZXEe-bUZ-w3fFkrg" name="ReleaseTimeQueue" visibility="package" method="_sAgQmYZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5vhQ4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5vhRIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5vhRYZXEe-bUZ-w3fFkrg" type="_r5vhQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-uu-IZXEe-bUZ-w3fFkrg" name="ReleaseTimeQueue" visibility="package" method="_sAgQm4ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-uu-oZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-uu-4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-uu-YZXEe-bUZ-w3fFkrg" name="schedulableObjects" type="_r-ooUIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-uu_IZXEe-bUZ-w3fFkrg" type="_r5vhQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5wIUYZXEe-bUZ-w3fFkrg" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_5Jy9YZZCEe-S5LJtyBrH7w">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to compute the probabilities that comprise the&#xD;
ReliablityMatrix, which is the core of the reliability visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined in the project assignment.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
@versio  1.8.1 Fall 2024 msgauna- added new method getReliablities that returns a Reliability Table&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_5JEkoJZCEe-S5LJtyBrH7w" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5JEkoZZCEe-S5LJtyBrH7w" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5JFLsJZCEe-S5LJtyBrH7w" name="DEFAULT_M" visibility="private" isLeaf="true" isStatic="true" type="_r_hZI4ZXEe-bUZ-w3fFkrg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5JFLsZZCEe-S5LJtyBrH7w" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5JFLspZCEe-S5LJtyBrH7w" name="DEFAULT_E2E" visibility="private" isLeaf="true" isStatic="true" type="_r_hZI4ZXEe-bUZ-w3fFkrg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_5JFLs5ZCEe-S5LJtyBrH7w" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5JFywJZCEe-S5LJtyBrH7w" name="model" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_5JGZ0JZCEe-S5LJtyBrH7w" name="e2e" visibility="private" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_5JGZ0pZCEe-S5LJtyBrH7w" name="minPacketReceptionRate" visibility="private" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_5JHA4ZZCEe-S5LJtyBrH7w" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAgQnoZXEe-bUZ-w3fFkrg" name="ReliabilityAnalysis" specification="_r-vWAYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAgQn4ZXEe-bUZ-w3fFkrg" name="program" type="_r5nlcIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAgQoIZXEe-bUZ-w3fFkrg" type="_r5wIUYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dong0IZeEe-bUZ-w3fFkrg" name="verifyReliablities" specification="_doj2cIZeEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_dong0YZeEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5JZ70JZCEe-S5LJtyBrH7w" name="ReliabilityAnalysis" specification="_5GcHYJZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5JZ70ZZCEe-S5LJtyBrH7w" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JZ70pZCEe-S5LJtyBrH7w" name="minPacketReceptionRate" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JZ705ZCEe-S5LJtyBrH7w" type="_r5wIUYZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>this.model= false;&#xD;
		this.e2e = e2e;&#xD;
		this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
		this.numFaults = DEFAULT_TX_NUM;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5JZ71JZCEe-S5LJtyBrH7w" name="ReliabilityAnalysis" specification="_5IVk0JZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5JZ71ZZCEe-S5LJtyBrH7w" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5JZ71pZCEe-S5LJtyBrH7w" type="_r5wIUYZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>this.model = true;&#xD;
		this.e2e = DEFAULT_E2E;&#xD;
		this.minPacketReceptionRate = DEFAULT_M;&#xD;
		this.numFaults = numFaults;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Jai4JZCEe-S5LJtyBrH7w" name="numTxPerLinkAndTotalTxCost" specification="_5GcudZZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5Jai4ZZCEe-S5LJtyBrH7w" name="flow" type="_r5UDdIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5Jai4pZCEe-S5LJtyBrH7w" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>if (this.model) {&#xD;
			/* Case 1: If there is fixed numFaults */&#xD;
			return getFixedTxPerLinkAndTotalTxCost(flow);&#xD;
		} else {&#xD;
			/* Case 2: If there is not fixed numFaults */&#xD;
			return numTxAttemptsPerLinkAndTotalTxAttempts(flow, this.e2e, &#xD;
					this.minPacketReceptionRate, false); }&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Jai45ZCEe-S5LJtyBrH7w" name="getFixedTxPerLinkAndTotalTxCost" specification="_5Gd8kJZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5Jai5JZCEe-S5LJtyBrH7w" name="flow" type="_r5UDdIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5Jai5ZZCEe-S5LJtyBrH7w" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>/* Each node will have at most numFaults+1 transmissions, do not know&#xD;
		 * which nodes will send message over an edge, giving cost to each node. */&#xD;
	    int nNodesInFlow = flow.nodes.size();&#xD;
	    int numEdgesInFlow = nNodesInFlow - 1;&#xD;
	    &#xD;
	    ArrayList&lt;Integer> txArrayList = initializeTxArrayList(nNodesInFlow, numFaults + 1);&#xD;
	    var maxFaultsInFlow = (nNodesInFlow - 1) * numFaults;&#xD;
	    txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
	    &#xD;
	    return txArrayList;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Jai5pZCEe-S5LJtyBrH7w" name="initializeTxArrayList" specification="_5IWL45ZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5Jai55ZCEe-S5LJtyBrH7w" name="nNodesInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Jai6JZCEe-S5LJtyBrH7w" name="defaultTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Jai6ZZCEe-S5LJtyBrH7w" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>/* Compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
	     * each edge requires at least one successful TX. */&#xD;
		ArrayList&lt;Integer> txArrayList = new ArrayList&lt;>();&#xD;
		&#xD;
		for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
		      txArrayList.add(defaultTx);&#xD;
		}&#xD;
		return txArrayList;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Jai6pZCEe-S5LJtyBrH7w" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_5IYBEJZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5Jai65ZCEe-S5LJtyBrH7w" name="flow" type="_r5UDdIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5Jai7JZCEe-S5LJtyBrH7w" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5Jai7ZZCEe-S5LJtyBrH7w" name="M" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5Jai7pZCEe-S5LJtyBrH7w" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Jai75ZCEe-S5LJtyBrH7w" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>int nNodesInFlow = flow.nodes.size();&#xD;
		&#xD;
	    /* ArrayList to track nPushes for each node in this flow (same as nTx per link) */&#xD;
	    ArrayList&lt;Integer> nPushes = initalizePushArray(nNodesInFlow);&#xD;
	    &#xD;
	    Double minLinkReliabilityNeeded = calculateMinLinkReliability(e2e, nNodesInFlow -1);&#xD;
	            &#xD;
		ReliabilityTable reliabilityWindow = initializeReliabilityWindow(nNodesInFlow);&#xD;
		ArrayList&lt;Double> currentReliabilityRow = initializeReliabilityRow(reliabilityWindow);&#xD;
	    //Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
		Double e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1);&#xD;
	    &#xD;
	  &#xD;
	    var timeSlot = 0;&#xD;
	    while (e2eReliabilityState &lt; e2e) {&#xD;
	    	currentReliabilityRow = computeReliabilityForNxtTmSlt(currentReliabilityRow,&#xD;
	    															nNodesInFlow, M,&#xD;
	    															minLinkReliabilityNeeded,&#xD;
	    															nPushes);&#xD;
	    	e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1);&#xD;
	    	//e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
	    	updateReliabilityWindow(reliabilityWindow, currentReliabilityRow, timeSlot);&#xD;
	    	timeSlot++;&#xD;
	    }&#xD;
&#xD;
	    nPushes.set(nNodesInFlow,reliabilityWindow.size());&#xD;
	    // return new ArrayList&lt;>(Arrays.asList(nPushes));&#xD;
	    return nPushes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5JbJ8JZCEe-S5LJtyBrH7w" name="initalizePushArray" specification="_5IZPMJZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5JbJ8ZZCEe-S5LJtyBrH7w" name="nNodesInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5JbJ8pZCEe-S5LJtyBrH7w" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>//Integer[] nPushes = new Integer[nNodesInFlow + 1];&#xD;
		ArrayList&lt;Integer> nPushes = new ArrayList&lt;Integer>();&#xD;
		for (int i = 0; i &lt;= nNodesInFlow; i++) {&#xD;
		      nPushes.add(0);&#xD;
		}&#xD;
		return nPushes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5JbJ85ZCEe-S5LJtyBrH7w" name="calculateMinLinkReliability" specification="_5IadUJZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5JbJ9JZCEe-S5LJtyBrH7w" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JbJ9ZZCEe-S5LJtyBrH7w" name="nHops">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5JbJ9pZCEe-S5LJtyBrH7w" type="_r_hZI4ZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>return Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5JbJ95ZCEe-S5LJtyBrH7w" name="initializeReliabilityWindow" specification="_5IbEYJZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5JbJ-JZCEe-S5LJtyBrH7w" name="nNodesInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5JbJ-ZZCEe-S5LJtyBrH7w" type="_r5xWcIZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>ReliabilityTable reliabilityWindow = new ReliabilityTable();&#xD;
		ReliabilityRow initialRow = new ReliabilityRow(nNodesInFlow, 0.0);&#xD;
		//Vector&lt;Vector&lt;Double>> reliabilityWindow = new Vector&lt;>();&#xD;
		//Vector&lt;Double> initialRow = new Vector&lt;>(Collections.nCopies(nNodesInFlow, 0.0));&#xD;
		initialRow.set(0, 1.0);&#xD;
		reliabilityWindow.add(initialRow);&#xD;
		&#xD;
		return reliabilityWindow;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5JbJ-pZCEe-S5LJtyBrH7w" name="initializeReliabilityRow" specification="_5GejoJZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5JbJ-5ZCEe-S5LJtyBrH7w" name="reliabilityWindow" type="_r5xWcIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JbJ_JZCEe-S5LJtyBrH7w" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>//return reliabilityWindow.get(0).toArray(new Double[0]);&#xD;
		return reliabilityWindow.get(0);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5JbxAJZCEe-S5LJtyBrH7w" name="computeReliabilityForNxtTmSlt" specification="_5IbEY5ZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5JbxAZZCEe-S5LJtyBrH7w" name="prevReliabilityRow" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JbxApZCEe-S5LJtyBrH7w" name="nNodesInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5JbxA5ZCEe-S5LJtyBrH7w" name="M" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JbxBJZCEe-S5LJtyBrH7w" name="minLinkReliabilityNeeded" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JbxBZZCEe-S5LJtyBrH7w" name="nPushes" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JbxBpZCEe-S5LJtyBrH7w" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;Double> currentReliabilityRow = new ArrayList&lt;Double>(prevReliabilityRow);&#xD;
		//Double[] currentReliabilityRow = Arrays.copyOf(prevReliabilityRow, prevReliabilityRow.length);&#xD;
		for (int i = 0; i &lt; nNodesInFlow - 1; i++) {&#xD;
			Double prevSrcNodeState = prevReliabilityRow.get(i);&#xD;
			Double prevSnkNodeState = prevReliabilityRow.get(i + 1);&#xD;
			Double nextSnkState = calculateNextSinkState(M, prevSnkNodeState, prevSrcNodeState,&#xD;
														 minLinkReliabilityNeeded);&#xD;
			if (nextSnkState > prevSnkNodeState) {&#xD;
				nPushes.set(i,nPushes.get(i)+1);&#xD;
			}&#xD;
			currentReliabilityRow.set(i + 1, nextSnkState);&#xD;
		}&#xD;
		return currentReliabilityRow;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5JbxB5ZCEe-S5LJtyBrH7w" name="calculateNextSinkState" specification="_5GejpJZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5JbxCJZCEe-S5LJtyBrH7w" name="M" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JbxCZZCEe-S5LJtyBrH7w" name="prevSnkNodeState" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JbxCpZCEe-S5LJtyBrH7w" name="prevSrcNodeState" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JbxC5ZCEe-S5LJtyBrH7w" name="minLinkReliabilityNeeded" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JbxDJZCEe-S5LJtyBrH7w" type="_r_hZI4ZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>if (prevSnkNodeState &lt; minLinkReliabilityNeeded &amp;&amp; prevSrcNodeState > 0) {&#xD;
			return (1.0 - M) * prevSnkNodeState + M * prevSrcNodeState;&#xD;
		}&#xD;
		return prevSnkNodeState;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5JbxDZZCEe-S5LJtyBrH7w" name="updateReliabilityWindow" specification="_5IdgoJZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5JbxDpZCEe-S5LJtyBrH7w" name="reliabilityWindow" type="_r5xWcIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JbxD5ZCEe-S5LJtyBrH7w" name="currentReliabilityRow" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JbxEJZCEe-S5LJtyBrH7w" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>//Vector&lt;Double> newRow = new Vector&lt;>(Arrays.asList(currentReliabilityRow));&#xD;
		ReliabilityRow newRow = new ReliabilityRow(currentReliabilityRow.toArray(new Double[0]));&#xD;
		if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
			reliabilityWindow.set(timeSlot, newRow);&#xD;
		} else {&#xD;
			reliabilityWindow.add(newRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-vWAYZXEe-bUZ-w3fFkrg" name="ReliabilityAnalysis" method="_sAgQnoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-vWA4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-vWBIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-vWAoZXEe-bUZ-w3fFkrg" name="program" type="_r5nlcIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-vWBYZXEe-bUZ-w3fFkrg" type="_r5wIUYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_doj2cIZeEe-bUZ-w3fFkrg" name="verifyReliablities" method="_dong0IZeEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_dom5wIZeEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_0UKEoIZeEe-bUZ-w3fFkrg" name="getReliabilities">
                <ownedParameter xmi:id="_0UKEoYZeEe-bUZ-w3fFkrg" type="_r5xWcIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5GcHYJZCEe-S5LJtyBrH7w" name="ReliabilityAnalysis" method="_5JZ70JZCEe-S5LJtyBrH7w">
                <eAnnotations xmi:id="_5Gcuc5ZCEe-S5LJtyBrH7w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5GcudJZCEe-S5LJtyBrH7w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5Jy9YpZCEe-S5LJtyBrH7w">
                  <body>Constructor for predictive fault model.&#xD;
	 * &#xD;
	 * @param e2e End-to-end reliability target.&#xD;
	 * @param minPacketReceptionRate Minimum packet reception rate</body>
                </ownedComment>
                <ownedParameter xmi:id="_5GcucJZCEe-S5LJtyBrH7w" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5GcucZZCEe-S5LJtyBrH7w" name="minPacketReceptionRate" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5GcucpZCEe-S5LJtyBrH7w" type="_r5wIUYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5GcudZZCEe-S5LJtyBrH7w" name="numTxPerLinkAndTotalTxCost" method="_5Jai4JZCEe-S5LJtyBrH7w">
                <ownedComment xmi:id="_5Jy9ZJZCEe-S5LJtyBrH7w">
                  <body>Compute number of Transmissions based on model type.&#xD;
	 * Given a fixed number of faults results in run of getFixedTxPerLinkAndTotalCost&#xD;
	 * If not given a fixed number we use predictive model numTxAttemptsPerLinkAndTotalTxAttempts.&#xD;
	 * &#xD;
	 * @param flow Flow to compute the number of transmissions.&#xD;
	 * @return ArrayList&lt;Integer> containing number of transmissions per link and total cost.</body>
                </ownedComment>
                <ownedParameter xmi:id="_5GcudpZCEe-S5LJtyBrH7w" name="flow" type="_r5UDdIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5Gcud5ZCEe-S5LJtyBrH7w" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5Gd8kJZCEe-S5LJtyBrH7w" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_5Jai45ZCEe-S5LJtyBrH7w">
                <ownedComment xmi:id="_5Jy9ZZZCEe-S5LJtyBrH7w">
                  <body>Computes the number of transmissions needed per node and total cost for a given flow.&#xD;
	 * &#xD;
	 * @param flow Flow whose node transmissions and total cost need to be calculated&#xD;
	 * @return ArrayList of number of transmissions needed for each node</body>
                </ownedComment>
                <ownedParameter xmi:id="_5Gd8kZZCEe-S5LJtyBrH7w" name="flow" type="_r5UDdIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5Gd8kpZCEe-S5LJtyBrH7w" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5GejoJZCEe-S5LJtyBrH7w" name="initializeReliabilityRow" visibility="private" method="_5JbJ-pZCEe-S5LJtyBrH7w">
                <ownedComment xmi:id="_5Jy9a5ZCEe-S5LJtyBrH7w">
                  <body>Initializes a reliability row based on a reliability window &#xD;
	 * &#xD;
	 * @param reliabilityWindow a ReliabilityTable of ReliabilityRows, represents reliability values &#xD;
	 * @return a double ArrayList of the first row of the reliabilityWindow</body>
                </ownedComment>
                <ownedParameter xmi:id="_5GejoZZCEe-S5LJtyBrH7w" name="reliabilityWindow" type="_r5xWcIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5GejopZCEe-S5LJtyBrH7w" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5GejpJZCEe-S5LJtyBrH7w" name="calculateNextSinkState" visibility="private" method="_5JbxB5ZCEe-S5LJtyBrH7w">
                <ownedComment xmi:id="_5Jy9bZZCEe-S5LJtyBrH7w">
                  <body>Calculates the new reliability state for a sink node based on M,prevSnkNodeState,&#xD;
	 * prevSrcNodeState, minLinkReliabilityNeeded&#xD;
	 *  &#xD;
	 * @param M the minimum packet reception rate&#xD;
	 * @param prevSnkNodeState a double that represents the previous sink node state &#xD;
	 * @param prevSrcNodeState a double that represents the previous source node state &#xD;
	 * @param minLinkReliabilityNeeded a double that is the minimum reliability needed per link in a flow to hit E2E&#xD;
	 * @return returns the next reliability state</body>
                </ownedComment>
                <ownedParameter xmi:id="_5GejpZZCEe-S5LJtyBrH7w" name="M" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5GejppZCEe-S5LJtyBrH7w" name="prevSnkNodeState" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5Gejp5ZCEe-S5LJtyBrH7w" name="prevSrcNodeState" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5GejqJZCEe-S5LJtyBrH7w" name="minLinkReliabilityNeeded" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5GejqZZCEe-S5LJtyBrH7w" type="_r_hZI4ZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5IVk0JZCEe-S5LJtyBrH7w" name="ReliabilityAnalysis" method="_5JZ71JZCEe-S5LJtyBrH7w">
                <eAnnotations xmi:id="_5IWL4ZZCEe-S5LJtyBrH7w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_5IWL4pZCEe-S5LJtyBrH7w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5Jy9Y5ZCEe-S5LJtyBrH7w">
                  <body>Constructor for fixed fault model&#xD;
	 * &#xD;
	 * @param numFaults Number of faults to use in fixed model</body>
                </ownedComment>
                <ownedParameter xmi:id="_5IVk0ZZCEe-S5LJtyBrH7w" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5IWL4JZCEe-S5LJtyBrH7w" type="_r5wIUYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5IWL45ZCEe-S5LJtyBrH7w" name="initializeTxArrayList" visibility="private" method="_5Jai5pZCEe-S5LJtyBrH7w">
                <ownedComment xmi:id="_5Jy9ZpZCEe-S5LJtyBrH7w">
                  <body>Initializes the TxArrayList with defaultTx values&#xD;
	 *  &#xD;
	 * @param nNodesInFlow an int representing the number of nodes in the flow &#xD;
	 * @param defaultTx a int represents the default number of transmissions &#xD;
	 * @return an arrayList initialized with all default values</body>
                </ownedComment>
                <ownedParameter xmi:id="_5IWy8JZCEe-S5LJtyBrH7w" name="nNodesInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5IWy8ZZCEe-S5LJtyBrH7w" name="defaultTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5IWy8pZCEe-S5LJtyBrH7w" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5IYBEJZCEe-S5LJtyBrH7w" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_5Jai6pZCEe-S5LJtyBrH7w">
                <ownedComment xmi:id="_5Jy9Z5ZCEe-S5LJtyBrH7w">
                  <body>Computes number of transmission attempts per link and total number to achieve end-to-end&#xD;
	 * reliability for given flow.&#xD;
	 * &#xD;
	 * @param flow Flow to analyze.&#xD;
	 * @param e2e End-to-end reliability target&#xD;
	 * @param M Minimum link reliability needed per successful link&#xD;
	 * @param optimizationRequested Indicates if optimization is requested&#xD;
	 * @return ArrayList&lt;Integer> represents number of transmissions per link and their cost</body>
                </ownedComment>
                <ownedParameter xmi:id="_5IYBEZZCEe-S5LJtyBrH7w" name="flow" type="_r5UDdIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5IYBEpZCEe-S5LJtyBrH7w" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5IYBE5ZCEe-S5LJtyBrH7w" name="M" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5IYBFJZCEe-S5LJtyBrH7w" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5IYBFZZCEe-S5LJtyBrH7w" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5IZPMJZCEe-S5LJtyBrH7w" name="initalizePushArray" visibility="private" method="_5JbJ8JZCEe-S5LJtyBrH7w">
                <ownedComment xmi:id="_5Jy9aJZCEe-S5LJtyBrH7w">
                  <body>Fills an ArrayList called nPushes with values of 0&#xD;
	 *  &#xD;
	 * @param nNodesInFlow&#xD;
	 * @return nPushes which is an ArrayList of 0s</body>
                </ownedComment>
                <ownedParameter xmi:id="_5IZPMZZCEe-S5LJtyBrH7w" name="nNodesInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5IZPMpZCEe-S5LJtyBrH7w" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5IadUJZCEe-S5LJtyBrH7w" name="calculateMinLinkReliability" visibility="private" method="_5JbJ85ZCEe-S5LJtyBrH7w">
                <ownedComment xmi:id="_5Jy9aZZCEe-S5LJtyBrH7w">
                  <body>Calculates the minimum link reliability with e2e and n hops &#xD;
	 * &#xD;
	 * @param e2e the end to end reliability target &#xD;
	 * @param nHops the number of hops per link &#xD;
	 * @return returns the minimum link reliability</body>
                </ownedComment>
                <ownedParameter xmi:id="_5IadUZZCEe-S5LJtyBrH7w" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5IadUpZCEe-S5LJtyBrH7w" name="nHops">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5IadU5ZCEe-S5LJtyBrH7w" type="_r_hZI4ZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5IbEYJZCEe-S5LJtyBrH7w" name="initializeReliabilityWindow" visibility="private" method="_5JbJ95ZCEe-S5LJtyBrH7w">
                <ownedComment xmi:id="_5Jy9apZCEe-S5LJtyBrH7w">
                  <body>Initializes a reliability window  with a single row containing reliability values &#xD;
	 * &#xD;
	 * @param nNodesInFlow the number of nodes in the flow &#xD;
	 * @return reliablityWindow a ReliabilityTable with one row of 0s except for the first value of 1.0</body>
                </ownedComment>
                <ownedParameter xmi:id="_5IbEYZZCEe-S5LJtyBrH7w" name="nNodesInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5IbEYpZCEe-S5LJtyBrH7w" type="_r5xWcIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5IbEY5ZCEe-S5LJtyBrH7w" name="computeReliabilityForNxtTmSlt" visibility="private" method="_5JbxAJZCEe-S5LJtyBrH7w">
                <ownedComment xmi:id="_5Jy9bJZCEe-S5LJtyBrH7w">
                  <body>Calculates a new reliability state for the nodes of the next time slot, based on the &#xD;
	 * reliability values from the previous time slot&#xD;
	 * &#xD;
	 * @param prevReliabilityRow an ArrayList of doubles &#xD;
	 * @param nNodesInFlow a int value that relates the number of the nodes in the flow &#xD;
	 * @param M the minimum packet reception rate &#xD;
	 * @param minLinkReliabilityNeeded a double that is the min reliability per link to hit E2E &#xD;
	 * @param nPushes a ArrayList of integers of pushes &#xD;
	 * @return currentReliabilityRow a ArrayList of doubles reps reliability states of each node at</body>
                </ownedComment>
                <ownedParameter xmi:id="_5IbrcJZCEe-S5LJtyBrH7w" name="prevReliabilityRow" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5IbrcZZCEe-S5LJtyBrH7w" name="nNodesInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5IbrcpZCEe-S5LJtyBrH7w" name="M" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5Ibrc5ZCEe-S5LJtyBrH7w" name="minLinkReliabilityNeeded" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5IbrdJZCEe-S5LJtyBrH7w" name="nPushes" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5IbrdZZCEe-S5LJtyBrH7w" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5IdgoJZCEe-S5LJtyBrH7w" name="updateReliabilityWindow" visibility="private" method="_5JbxDZZCEe-S5LJtyBrH7w">
                <ownedComment xmi:id="_5Jy9bpZCEe-S5LJtyBrH7w">
                  <body>Updates the reliability window with a new row of reliability data for a specific time slot &#xD;
	 * &#xD;
	 * @param reliabilityWindow a ReliabilityTable of ReliabiltyRows, represents the reliability values&#xD;
	 * @param currentReliabilityRow a ArrayList of doubles representing the reliability states for each node in the flow at the next time slot &#xD;
	 * @param timeSlot the current time slot</body>
                </ownedComment>
                <ownedParameter xmi:id="_5IdgoZZCEe-S5LJtyBrH7w" name="reliabilityWindow" type="_r5xWcIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5IdgopZCEe-S5LJtyBrH7w" name="currentReliabilityRow" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5Idgo5ZCEe-S5LJtyBrH7w" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r5wIVIZXEe-bUZ-w3fFkrg" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_5Jy9b5ZCEe-S5LJtyBrH7w">
                <body>@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_r5wIVYZXEe-bUZ-w3fFkrg" name="minPacketReceptionRate" type="_r_hZI4ZXEe-bUZ-w3fFkrg" isReadOnly="true"/>
              <ownedAttribute xmi:id="_r5wvYIZXEe-bUZ-w3fFkrg" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5wvYYZXEe-bUZ-w3fFkrg" name="ReliabilityRow">
              <generalization xmi:id="_r-vWBoZXEe-bUZ-w3fFkrg" general="_r5ykkIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sADkqoZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sADkq4ZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAgQo4ZXEe-bUZ-w3fFkrg" name="ReliabilityRow" specification="_r5wvYoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAgQpIZXEe-bUZ-w3fFkrg" type="_r5wvYYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAgQpYZXEe-bUZ-w3fFkrg" name="ReliabilityRow" specification="_r_jOUYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAgQpoZXEe-bUZ-w3fFkrg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAgQp4ZXEe-bUZ-w3fFkrg" name="element" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAgQqIZXEe-bUZ-w3fFkrg" type="_r5wvYYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAgQqYZXEe-bUZ-w3fFkrg" name="ReliabilityRow" specification="_r_jOV4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAgQqoZXEe-bUZ-w3fFkrg" name="rowArray" type="_r_hZI4ZXEe-bUZ-w3fFkrg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAgQq4ZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAgQrIZXEe-bUZ-w3fFkrg" type="_r5wvYYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5wvYoZXEe-bUZ-w3fFkrg" name="ReliabilityRow" method="_sAgQo4ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5wvY4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5wvZIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5wvZYZXEe-bUZ-w3fFkrg" type="_r5wvYYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_jOUYZXEe-bUZ-w3fFkrg" name="ReliabilityRow" visibility="package" method="_sAgQpYZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_jOVIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_jOVYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_jOUoZXEe-bUZ-w3fFkrg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_jOU4ZXEe-bUZ-w3fFkrg" name="element" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_jOVoZXEe-bUZ-w3fFkrg" type="_r5wvYYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_jOV4ZXEe-bUZ-w3fFkrg" name="ReliabilityRow" visibility="package" method="_sAgQqYZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_jOWYZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_jOWoZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_jOWIZXEe-bUZ-w3fFkrg" name="rowArray" type="_r_hZI4ZXEe-bUZ-w3fFkrg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r_jOXIZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_jOW4ZXEe-bUZ-w3fFkrg" type="_r5wvYYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5xWcIZXEe-bUZ-w3fFkrg" name="ReliabilityTable">
              <generalization xmi:id="_r-v9EIZXEe-bUZ-w3fFkrg" general="_r555UYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sADkrIZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAELsIZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAgQrYZXEe-bUZ-w3fFkrg" name="ReliabilityTable" specification="_r5xWcYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAgQroZXEe-bUZ-w3fFkrg" type="_r5xWcIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAgQr4ZXEe-bUZ-w3fFkrg" name="ReliabilityTable" specification="_r5xWdYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAgQsIZXEe-bUZ-w3fFkrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAgQsYZXEe-bUZ-w3fFkrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAgQsoZXEe-bUZ-w3fFkrg" type="_r5xWcIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5xWcYZXEe-bUZ-w3fFkrg" name="ReliabilityTable" method="_sAgQrYZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5xWcoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5xWc4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5xWdIZXEe-bUZ-w3fFkrg" type="_r5xWcIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5xWdYZXEe-bUZ-w3fFkrg" name="ReliabilityTable" visibility="package" method="_sAgQr4ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5xWeIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5xWeYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5xWdoZXEe-bUZ-w3fFkrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5xWd4ZXEe-bUZ-w3fFkrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5xWeoZXEe-bUZ-w3fFkrg" type="_r5xWcIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5xWe4ZXEe-bUZ-w3fFkrg" name="ReliabilityVisualization">
              <ownedComment xmi:id="_5JzkcJZCEe-S5LJtyBrH7w">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to create&#xD;
the visualizations that are requested in Warp. Your solution&#xD;
should support both the file and Java Swing Window (gui) visualizations.&#xD;
 *&#xD;
I recommend using class ProgramVisualization as an example of how to implement&#xD;
this class. Your solution will likely be similar to the code in ProgramVisualization.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r-v9F4ZXEe-bUZ-w3fFkrg" general="_r5-KwIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAELsYZXEe-bUZ-w3fFkrg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAELsoZXEe-bUZ-w3fFkrg" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAELs4ZXEe-bUZ-w3fFkrg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAELtIZXEe-bUZ-w3fFkrg" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAELtYZXEe-bUZ-w3fFkrg" name="warp" visibility="private" type="_r5__8YZXEe-bUZ-w3fFkrg" association="_sBCcFoZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAELt4ZXEe-bUZ-w3fFkrg" name="ra" visibility="private" type="_r5wIUYZXEe-bUZ-w3fFkrg" association="_sBCcGYZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAgQs4ZXEe-bUZ-w3fFkrg" name="ReliabilityVisualization" specification="_r-v9EoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAgQtIZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAgQtYZXEe-bUZ-w3fFkrg" type="_r5xWe4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-v9EoZXEe-bUZ-w3fFkrg" name="ReliabilityVisualization" visibility="package" method="_sAgQs4ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-v9FIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-v9FYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-v9E4ZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-v9FoZXEe-bUZ-w3fFkrg" type="_r5xWe4ZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5x9gIZXEe-bUZ-w3fFkrg" name="ReportVisualization">
              <generalization xmi:id="_r-wkJ4ZXEe-bUZ-w3fFkrg" general="_r5-KwIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAELuYZXEe-bUZ-w3fFkrg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAELuoZXEe-bUZ-w3fFkrg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAELu4ZXEe-bUZ-w3fFkrg" name="content" visibility="private" type="_r5PyAYZXEe-bUZ-w3fFkrg" association="_sBCcHIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAELvYZXEe-bUZ-w3fFkrg" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAgQtoZXEe-bUZ-w3fFkrg" name="ReportVisualization" specification="_r-v9GIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAgQt4ZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAgQuIZXEe-bUZ-w3fFkrg" name="warp" type="_r54rNoZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAgQuYZXEe-bUZ-w3fFkrg" name="content" type="_r5PyAYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAgQuoZXEe-bUZ-w3fFkrg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAgQu4ZXEe-bUZ-w3fFkrg" type="_r5x9gIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3oIZXEe-bUZ-w3fFkrg" name="visualization" specification="_r5x9gYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAg3oYZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3ooZXEe-bUZ-w3fFkrg" name="createReport" specification="_r5x9hYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAg3o4ZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5x9gYZXEe-bUZ-w3fFkrg" name="visualization" method="_sAg3oIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-wkJYZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5x9hYZXEe-bUZ-w3fFkrg" name="createReport" visibility="private" method="_sAg3ooZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-wkJoZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-v9GIZXEe-bUZ-w3fFkrg" name="ReportVisualization" visibility="package" method="_sAgQtoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-wkIoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-wkI4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-v9GYZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-v9GoZXEe-bUZ-w3fFkrg" name="warp" type="_r54rNoZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-wkIIZXEe-bUZ-w3fFkrg" name="content" type="_r5PyAYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-wkIYZXEe-bUZ-w3fFkrg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-wkJIZXEe-bUZ-w3fFkrg" type="_r5x9gIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5ykkIZXEe-bUZ-w3fFkrg" name="Row">
              <generalization xmi:id="_r_j1bIZXEe-bUZ-w3fFkrg" general="_r-UfQIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAEywIZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAEywYZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3pIZXEe-bUZ-w3fFkrg" name="Row" specification="_r5ykkoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAg3pYZXEe-bUZ-w3fFkrg" type="_r5ykkIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3poZXEe-bUZ-w3fFkrg" name="Row" specification="_r_j1YIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAg3p4ZXEe-bUZ-w3fFkrg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAg3qIZXEe-bUZ-w3fFkrg" name="element" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAg3qYZXEe-bUZ-w3fFkrg" type="_r5ykkIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3qoZXEe-bUZ-w3fFkrg" name="Row" specification="_r_j1ZoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAg3q4ZXEe-bUZ-w3fFkrg" name="rowArray" type="_r_XBFYZXEe-bUZ-w3fFkrg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAg3rIZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAg3rYZXEe-bUZ-w3fFkrg" type="_r5ykkIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3roZXEe-bUZ-w3fFkrg" name="Row" specification="_r5zLo4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAg3r4ZXEe-bUZ-w3fFkrg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAg3sIZXEe-bUZ-w3fFkrg" type="_r5ykkIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5ykkoZXEe-bUZ-w3fFkrg" name="Row" method="_sAg3pIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5zLoIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5zLoYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5zLooZXEe-bUZ-w3fFkrg" type="_r5ykkIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5zLo4ZXEe-bUZ-w3fFkrg" name="Row" visibility="package" method="_sAg3roZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r5zLpYZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r5zLpoZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r5zLpIZXEe-bUZ-w3fFkrg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5zLp4ZXEe-bUZ-w3fFkrg" type="_r5ykkIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_j1YIZXEe-bUZ-w3fFkrg" name="Row" visibility="package" method="_sAg3poZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_j1Y4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_j1ZIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_j1YYZXEe-bUZ-w3fFkrg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_j1YoZXEe-bUZ-w3fFkrg" name="element" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_j1ZYZXEe-bUZ-w3fFkrg" type="_r5ykkIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_j1ZoZXEe-bUZ-w3fFkrg" name="Row" visibility="package" method="_sAg3qoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_j1aIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_j1aYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_j1Z4ZXEe-bUZ-w3fFkrg" name="rowArray" type="_r_XBFYZXEe-bUZ-w3fFkrg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r_j1a4ZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_j1aoZXEe-bUZ-w3fFkrg" type="_r5ykkIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5zLqIZXEe-bUZ-w3fFkrg" name="SchedulableObjectQueue">
              <generalization xmi:id="_r5zysYZXEe-bUZ-w3fFkrg" general="_r5vhRoZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAEywoZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAEyw4ZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3sYZXEe-bUZ-w3fFkrg" name="SchedulableObjectQueue" specification="_r_kccIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAg3soZXEe-bUZ-w3fFkrg" name="comparitor" type="_r-bM9oZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAg3s4ZXEe-bUZ-w3fFkrg" type="_r5zLqIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3tIZXEe-bUZ-w3fFkrg" name="SchedulableObjectQueue" specification="_r_kcdoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAg3tYZXEe-bUZ-w3fFkrg" name="comparitor" type="_r-bM9oZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAg3toZXEe-bUZ-w3fFkrg" name="schedulableObjects" type="_r-ooUIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAg3t4ZXEe-bUZ-w3fFkrg" type="_r5zLqIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r_kccIZXEe-bUZ-w3fFkrg" name="SchedulableObjectQueue" visibility="package" method="_sAg3sYZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_kccoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_kcc4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_kccYZXEe-bUZ-w3fFkrg" name="comparitor" type="_r-bM9oZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_kcdIZXEe-bUZ-w3fFkrg" type="_r5zLqIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_kcdoZXEe-bUZ-w3fFkrg" name="SchedulableObjectQueue" visibility="package" method="_sAg3tIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_kceYZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_kceoZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_kcd4ZXEe-bUZ-w3fFkrg" name="comparitor" type="_r-bM9oZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_kceIZXEe-bUZ-w3fFkrg" name="schedulableObjects" type="_r-ooUIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_kce4ZXEe-bUZ-w3fFkrg" type="_r5zLqIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5zys4ZXEe-bUZ-w3fFkrg" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_5JzkcpZCEe-S5LJtyBrH7w">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAEyxIZXEe-bUZ-w3fFkrg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAEyxYZXEe-bUZ-w3fFkrg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAEyxoZXEe-bUZ-w3fFkrg" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAEyyIZXEe-bUZ-w3fFkrg" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAEyyoZXEe-bUZ-w3fFkrg" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAEyy4ZXEe-bUZ-w3fFkrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAEyzYZXEe-bUZ-w3fFkrg" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAFZ0YZXEe-bUZ-w3fFkrg" name="schedule" visibility="protected" type="_r53dEIZXEe-bUZ-w3fFkrg" association="_sBDDIYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAFZ04ZXEe-bUZ-w3fFkrg" name="poset" visibility="protected" type="_r5is8IZXEe-bUZ-w3fFkrg" association="_sBDDJIZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3uIZXEe-bUZ-w3fFkrg" name="Schedule" specification="_r-xLMIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAg3uYZXEe-bUZ-w3fFkrg" name="poset" type="_r5is8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAg3uoZXEe-bUZ-w3fFkrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAg3u4ZXEe-bUZ-w3fFkrg" type="_r5zys4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3xoZXEe-bUZ-w3fFkrg" name="getSchedule" specification="_r51A1YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAg3x4ZXEe-bUZ-w3fFkrg" type="_r53dEIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3yIZXEe-bUZ-w3fFkrg" name="buildSchedule" specification="_r51A1oZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3yYZXEe-bUZ-w3fFkrg" name="toProgram" specification="_r51A14ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAg3yoZXEe-bUZ-w3fFkrg" type="_r5tFAIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3y4ZXEe-bUZ-w3fFkrg" name="replaceNullWithSleep" specification="_r-xLOIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAg3zIZXEe-bUZ-w3fFkrg" name="program" type="_r5tFAIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3zYZXEe-bUZ-w3fFkrg" name="fakeSchedulingToTestRest" specification="_r-xLOoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAg3zoZXEe-bUZ-w3fFkrg" name="next" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAhesIZXEe-bUZ-w3fFkrg" name="getChannelAndSetStartTime" specification="_r-xLPIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAhesYZXEe-bUZ-w3fFkrg" name="schedulableObject" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAhesoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAhes4ZXEe-bUZ-w3fFkrg" name="findChannelAndTime" specification="_r-xyQYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAhetIZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAhetYZXEe-bUZ-w3fFkrg" name="schedulableObject" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAhetoZXEe-bUZ-w3fFkrg" type="_r50ZwIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAhet4ZXEe-bUZ-w3fFkrg" name="continueSearch" specification="_r-xyRYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAheuIZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAheuYZXEe-bUZ-w3fFkrg" name="activation" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAheuoZXEe-bUZ-w3fFkrg" type="_r50ZwIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAheu4ZXEe-bUZ-w3fFkrg" name="noOtherChannelConflicts" specification="_r-xySYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAhevIZXEe-bUZ-w3fFkrg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAhevYZXEe-bUZ-w3fFkrg" name="schedulableObject" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAhevoZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAhev4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAhewIZXEe-bUZ-w3fFkrg" name="conflictsExist" specification="_r-xyToZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAhewYZXEe-bUZ-w3fFkrg" name="obj" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAhewoZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAhew4ZXEe-bUZ-w3fFkrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAhexIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAhexYZXEe-bUZ-w3fFkrg" name="freeOfCoordinatorConflicts" specification="_r-xyU4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAhexoZXEe-bUZ-w3fFkrg" name="obj" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAhex4ZXEe-bUZ-w3fFkrg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAheyIZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAheyYZXEe-bUZ-w3fFkrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAheyoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAhey4ZXEe-bUZ-w3fFkrg" name="isAvailable" specification="_r-yZUIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAhezIZXEe-bUZ-w3fFkrg" name="a1" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAhezYZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAhezoZXEe-bUZ-w3fFkrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAhez4ZXEe-bUZ-w3fFkrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAhe0IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAhe0YZXEe-bUZ-w3fFkrg" name="isAvailable" specification="_r-yZVoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAhe0oZXEe-bUZ-w3fFkrg" name="a1" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAhe04ZXEe-bUZ-w3fFkrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAhe1IZXEe-bUZ-w3fFkrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAhe1YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAhe1oZXEe-bUZ-w3fFkrg" name="timeRemaining" specification="_r51n4IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAhe14ZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAhe2IZXEe-bUZ-w3fFkrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAhe2YZXEe-bUZ-w3fFkrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAhe2oZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAhe24ZXEe-bUZ-w3fFkrg" name="canCombineEntriesInPlace" specification="_r-yZW4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAhe3IZXEe-bUZ-w3fFkrg" name="a1" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAhe3YZXEe-bUZ-w3fFkrg" name="a2" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAhe3oZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAhe34ZXEe-bUZ-w3fFkrg" name="combinedEntriesInPlace" specification="_r-yZX4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAhe4IZXEe-bUZ-w3fFkrg" name="a1" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAhe4YZXEe-bUZ-w3fFkrg" name="a2" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAhe4oZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAhe44ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAhe5IZXEe-bUZ-w3fFkrg" name="addToSchedule" specification="_r-yZZIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAhe5YZXEe-bUZ-w3fFkrg" name="next" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAhe5oZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAhe54ZXEe-bUZ-w3fFkrg" name="reportNotSchedulable" specification="_r-yZZ4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAhe6IZXEe-bUZ-w3fFkrg" name="object" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAhe6YZXEe-bUZ-w3fFkrg" name="printVerbose" specification="_r51n5YZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAhe6oZXEe-bUZ-w3fFkrg" name="print" specification="_r51n5oZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r51A1YZXEe-bUZ-w3fFkrg" name="getSchedule" method="_sAg3xoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JzkdZZCEe-S5LJtyBrH7w">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-xLNoZXEe-bUZ-w3fFkrg" type="_r53dEIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r51A1oZXEe-bUZ-w3fFkrg" name="buildSchedule" visibility="private" method="_sAg3yIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r51A14ZXEe-bUZ-w3fFkrg" name="toProgram" method="_sAg3yYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-xLN4ZXEe-bUZ-w3fFkrg" type="_r5tFAIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r51n4IZXEe-bUZ-w3fFkrg" name="timeRemaining" visibility="protected" method="_sAhe1oZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J0LgpZCEe-S5LJtyBrH7w">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_r51n4YZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r51n4oZXEe-bUZ-w3fFkrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r51n44ZXEe-bUZ-w3fFkrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r51n5IZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r51n5YZXEe-bUZ-w3fFkrg" name="printVerbose" method="_sAhe6YZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r51n5oZXEe-bUZ-w3fFkrg" name="print" method="_sAhe6oZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r-xLMIZXEe-bUZ-w3fFkrg" name="Schedule" visibility="package" method="_sAg3uIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-xLM4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-xLNIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-xLMYZXEe-bUZ-w3fFkrg" name="poset" type="_r5is8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-xLMoZXEe-bUZ-w3fFkrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xLNYZXEe-bUZ-w3fFkrg" type="_r5zys4ZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-xLOIZXEe-bUZ-w3fFkrg" name="replaceNullWithSleep" visibility="private" method="_sAg3y4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JzkdpZCEe-S5LJtyBrH7w">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-xLOYZXEe-bUZ-w3fFkrg" name="program" type="_r5tFAIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-xLOoZXEe-bUZ-w3fFkrg" name="fakeSchedulingToTestRest" visibility="private" method="_sAg3zYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-xLO4ZXEe-bUZ-w3fFkrg" name="next" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-xLPIZXEe-bUZ-w3fFkrg" name="getChannelAndSetStartTime" visibility="protected" method="_sAhesIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5Jzkd5ZCEe-S5LJtyBrH7w">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-xLPYZXEe-bUZ-w3fFkrg" name="schedulableObject" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-xyQIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-xyQYZXEe-bUZ-w3fFkrg" name="findChannelAndTime" visibility="protected" method="_sAhes4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-xyQoZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xyQ4ZXEe-bUZ-w3fFkrg" name="schedulableObject" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-xyRIZXEe-bUZ-w3fFkrg" type="_r50ZwIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-xyRYZXEe-bUZ-w3fFkrg" name="continueSearch" visibility="protected" method="_sAhet4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5JzkeJZCEe-S5LJtyBrH7w">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-xyRoZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xyR4ZXEe-bUZ-w3fFkrg" name="activation" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-xySIZXEe-bUZ-w3fFkrg" type="_r50ZwIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-xySYZXEe-bUZ-w3fFkrg" name="noOtherChannelConflicts" visibility="protected" method="_sAheu4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-xySoZXEe-bUZ-w3fFkrg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xyS4ZXEe-bUZ-w3fFkrg" name="schedulableObject" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-xyTIZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xyTYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-xyToZXEe-bUZ-w3fFkrg" name="conflictsExist" visibility="protected" method="_sAhewIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-xyT4ZXEe-bUZ-w3fFkrg" name="obj" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-xyUIZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xyUYZXEe-bUZ-w3fFkrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xyUoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-xyU4ZXEe-bUZ-w3fFkrg" name="freeOfCoordinatorConflicts" visibility="protected" method="_sAhexYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-xyVIZXEe-bUZ-w3fFkrg" name="obj" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-xyVYZXEe-bUZ-w3fFkrg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xyVoZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xyV4ZXEe-bUZ-w3fFkrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-xyWIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-yZUIZXEe-bUZ-w3fFkrg" name="isAvailable" visibility="protected" method="_sAhey4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J0LgJZCEe-S5LJtyBrH7w">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-yZUYZXEe-bUZ-w3fFkrg" name="a1" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-yZUoZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-yZU4ZXEe-bUZ-w3fFkrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-yZVIZXEe-bUZ-w3fFkrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-yZVYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-yZVoZXEe-bUZ-w3fFkrg" name="isAvailable" visibility="protected" method="_sAhe0YZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J0LgZZCEe-S5LJtyBrH7w">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-yZV4ZXEe-bUZ-w3fFkrg" name="a1" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-yZWIZXEe-bUZ-w3fFkrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-yZWYZXEe-bUZ-w3fFkrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-yZWoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-yZW4ZXEe-bUZ-w3fFkrg" name="canCombineEntriesInPlace" visibility="private" method="_sAhe24ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-yZXIZXEe-bUZ-w3fFkrg" name="a1" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-yZXYZXEe-bUZ-w3fFkrg" name="a2" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-yZXoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-yZX4ZXEe-bUZ-w3fFkrg" name="combinedEntriesInPlace" visibility="private" method="_sAhe34ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-yZYIZXEe-bUZ-w3fFkrg" name="a1" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-yZYYZXEe-bUZ-w3fFkrg" name="a2" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-yZYoZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-yZY4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-yZZIZXEe-bUZ-w3fFkrg" name="addToSchedule" visibility="protected" method="_sAhe5IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-yZZYZXEe-bUZ-w3fFkrg" name="next" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-yZZoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-yZZ4ZXEe-bUZ-w3fFkrg" name="reportNotSchedulable" visibility="private" method="_sAhe54ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-yZaIZXEe-bUZ-w3fFkrg" name="object" type="_r5CWpIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_r50ZwIZXEe-bUZ-w3fFkrg" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_sAFZ1YZXEe-bUZ-w3fFkrg" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAFZ14ZXEe-bUZ-w3fFkrg" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3vIZXEe-bUZ-w3fFkrg" name="ScheduleLocation" specification="_r50ZwYZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAg3vYZXEe-bUZ-w3fFkrg" type="_r50ZwIZXEe-bUZ-w3fFkrg" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3voZXEe-bUZ-w3fFkrg" name="ScheduleLocation" specification="_r50ZxYZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAg3v4ZXEe-bUZ-w3fFkrg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sAg3wIZXEe-bUZ-w3fFkrg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sAg3wYZXEe-bUZ-w3fFkrg" type="_r50ZwIZXEe-bUZ-w3fFkrg" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3woZXEe-bUZ-w3fFkrg" name="getChannel" specification="_r51A0YZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAg3w4ZXEe-bUZ-w3fFkrg" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAg3xIZXEe-bUZ-w3fFkrg" name="getTime" specification="_r51A04ZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAg3xYZXEe-bUZ-w3fFkrg" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_r50ZwYZXEe-bUZ-w3fFkrg" name="ScheduleLocation" visibility="package" method="_sAg3vIZXEe-bUZ-w3fFkrg">
                  <eAnnotations xmi:id="_r50ZwoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r50Zw4ZXEe-bUZ-w3fFkrg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r50ZxIZXEe-bUZ-w3fFkrg" type="_r50ZwIZXEe-bUZ-w3fFkrg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r50ZxYZXEe-bUZ-w3fFkrg" name="ScheduleLocation" visibility="package" method="_sAg3voZXEe-bUZ-w3fFkrg">
                  <eAnnotations xmi:id="_r50ZyIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r50ZyYZXEe-bUZ-w3fFkrg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r50ZxoZXEe-bUZ-w3fFkrg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r50Zx4ZXEe-bUZ-w3fFkrg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r51A0IZXEe-bUZ-w3fFkrg" type="_r50ZwIZXEe-bUZ-w3fFkrg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r51A0YZXEe-bUZ-w3fFkrg" name="getChannel" visibility="protected" method="_sAg3woZXEe-bUZ-w3fFkrg">
                  <ownedComment xmi:id="_5Jzkc5ZCEe-S5LJtyBrH7w">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r51A0oZXEe-bUZ-w3fFkrg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r51A04ZXEe-bUZ-w3fFkrg" name="getTime" visibility="protected" method="_sAg3xIZXEe-bUZ-w3fFkrg">
                  <ownedComment xmi:id="_5JzkdJZCEe-S5LJtyBrH7w">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r51A1IZXEe-bUZ-w3fFkrg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r53dEIZXEe-bUZ-w3fFkrg" name="ScheduleTable">
              <generalization xmi:id="_r-zAYIZXEe-bUZ-w3fFkrg" general="_r555UYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAGA4IZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAGA4YZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAiFwIZXEe-bUZ-w3fFkrg" name="ScheduleTable" specification="_r53dEYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAiFwYZXEe-bUZ-w3fFkrg" type="_r53dEIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAiFwoZXEe-bUZ-w3fFkrg" name="ScheduleTable" specification="_r53dFYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAiFw4ZXEe-bUZ-w3fFkrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAiFxIZXEe-bUZ-w3fFkrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAiFxYZXEe-bUZ-w3fFkrg" type="_r53dEIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r53dEYZXEe-bUZ-w3fFkrg" name="ScheduleTable" visibility="package" method="_sAiFwIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r53dEoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r53dE4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r53dFIZXEe-bUZ-w3fFkrg" type="_r53dEIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r53dFYZXEe-bUZ-w3fFkrg" name="ScheduleTable" visibility="package" method="_sAiFwoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r53dGIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r53dGYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r53dFoZXEe-bUZ-w3fFkrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r53dF4ZXEe-bUZ-w3fFkrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r53dGoZXEe-bUZ-w3fFkrg" type="_r53dEIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r53dG4ZXEe-bUZ-w3fFkrg" name="ScheduleTime">
              <ownedAttribute xmi:id="_sAGA4oZXEe-bUZ-w3fFkrg" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAGA44ZXEe-bUZ-w3fFkrg" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAiFxoZXEe-bUZ-w3fFkrg" name="ScheduleTime" specification="_r54EIIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAiFx4ZXEe-bUZ-w3fFkrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAiFyIZXEe-bUZ-w3fFkrg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAiFyYZXEe-bUZ-w3fFkrg" type="_r53dG4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r54EIIZXEe-bUZ-w3fFkrg" name="ScheduleTime" visibility="package" method="_sAiFxoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r54EI4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r54EJIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r54EIYZXEe-bUZ-w3fFkrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r54EIoZXEe-bUZ-w3fFkrg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r54EJYZXEe-bUZ-w3fFkrg" type="_r53dG4ZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r54EJoZXEe-bUZ-w3fFkrg" name="SimulatorInput">
              <ownedComment xmi:id="_5J0Lg5ZCEe-S5LJtyBrH7w">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r54EJ4ZXEe-bUZ-w3fFkrg" name="SortedPeriodQueue">
              <generalization xmi:id="_r54rNIZXEe-bUZ-w3fFkrg" general="_r5vhRoZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAGA5IZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAGA5YZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAiFyoZXEe-bUZ-w3fFkrg" name="SortedPeriodQueue" specification="_r54rMIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAiFy4ZXEe-bUZ-w3fFkrg" type="_r54EJ4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAiFzIZXEe-bUZ-w3fFkrg" name="SortedPeriodQueue" specification="_r-zncYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAiFzYZXEe-bUZ-w3fFkrg" name="schedulableObjects" type="_r-ooUIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAiFzoZXEe-bUZ-w3fFkrg" type="_r54EJ4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r54rMIZXEe-bUZ-w3fFkrg" name="SortedPeriodQueue" visibility="package" method="_sAiFyoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r54rMYZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r54rMoZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r54rM4ZXEe-bUZ-w3fFkrg" type="_r54EJ4ZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-zncYZXEe-bUZ-w3fFkrg" name="SortedPeriodQueue" visibility="package" method="_sAiFzIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-znc4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-zndIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-zncoZXEe-bUZ-w3fFkrg" name="schedulableObjects" type="_r-ooUIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-zndYZXEe-bUZ-w3fFkrg" type="_r54EJ4ZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r54rNoZXEe-bUZ-w3fFkrg" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_r-znd4ZXEe-bUZ-w3fFkrg" general="_r5wIVIZXEe-bUZ-w3fFkrg"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_r54rN4ZXEe-bUZ-w3fFkrg" name="ScheduleChoices">
                <ownedLiteral xmi:id="_r55SQYZXEe-bUZ-w3fFkrg" name="PRIORITY"/>
                <ownedLiteral xmi:id="_r55SQoZXEe-bUZ-w3fFkrg" name="RM"/>
                <ownedLiteral xmi:id="_r55SQ4ZXEe-bUZ-w3fFkrg" name="DM"/>
                <ownedLiteral xmi:id="_r55SRIZXEe-bUZ-w3fFkrg" name="RTHART"/>
                <ownedLiteral xmi:id="_r55SRYZXEe-bUZ-w3fFkrg" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_r55SRoZXEe-bUZ-w3fFkrg" name="POSET_RM"/>
                <ownedLiteral xmi:id="_r55SR4ZXEe-bUZ-w3fFkrg" name="POSET_DM"/>
                <ownedLiteral xmi:id="_r55SSIZXEe-bUZ-w3fFkrg" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_r55SSYZXEe-bUZ-w3fFkrg" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_r55SSoZXEe-bUZ-w3fFkrg" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_r55SS4ZXEe-bUZ-w3fFkrg" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_r55STIZXEe-bUZ-w3fFkrg" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_r55STYZXEe-bUZ-w3fFkrg" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_r55SToZXEe-bUZ-w3fFkrg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r55ST4ZXEe-bUZ-w3fFkrg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r55SUIZXEe-bUZ-w3fFkrg" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r55SUYZXEe-bUZ-w3fFkrg" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r55SUoZXEe-bUZ-w3fFkrg" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r55SU4ZXEe-bUZ-w3fFkrg" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r555UIZXEe-bUZ-w3fFkrg" name="SystemFactory">
              <ownedComment xmi:id="_5J0LhJZCEe-S5LJtyBrH7w">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5JeNQJZCEe-S5LJtyBrH7w" name="create" specification="_5IiZIJZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5JeNQZZCEe-S5LJtyBrH7w" name="workload" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JeNQpZCEe-S5LJtyBrH7w" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5JeNQ5ZCEe-S5LJtyBrH7w" name="choice" type="_r-zneIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JeNRJZCEe-S5LJtyBrH7w" type="_r5__8YZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5IiZIJZCEe-S5LJtyBrH7w" name="create" isStatic="true" method="_5JeNQJZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5IjAMJZCEe-S5LJtyBrH7w" name="workload" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5IjAMZZCEe-S5LJtyBrH7w" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5IjAMpZCEe-S5LJtyBrH7w" name="choice" type="_r-zneIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5IjAM5ZCEe-S5LJtyBrH7w" type="_r5__8YZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r555UYZXEe-bUZ-w3fFkrg" name="Table">
              <generalization xmi:id="_r_lqkYZXEe-bUZ-w3fFkrg" general="_r-UfQIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAGA5oZXEe-bUZ-w3fFkrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAGA54ZXEe-bUZ-w3fFkrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAiF1IZXEe-bUZ-w3fFkrg" name="Table" specification="_r555U4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAiF1YZXEe-bUZ-w3fFkrg" type="_r555UYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAiF1oZXEe-bUZ-w3fFkrg" name="Table" specification="_r56gY4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAiF14ZXEe-bUZ-w3fFkrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAiF2IZXEe-bUZ-w3fFkrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAiF2YZXEe-bUZ-w3fFkrg" type="_r555UYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAiF2oZXEe-bUZ-w3fFkrg" name="getNumRows" specification="_r56gaYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAiF24ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAiF3IZXEe-bUZ-w3fFkrg" name="getNumColumns" specification="_r56ga4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAiF3YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAiF3oZXEe-bUZ-w3fFkrg" name="set" specification="_r_lDgYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAiF34ZXEe-bUZ-w3fFkrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAiF4IZXEe-bUZ-w3fFkrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAiF4YZXEe-bUZ-w3fFkrg" name="element" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAiF4oZXEe-bUZ-w3fFkrg" name="get" specification="_r56gbYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAiF44ZXEe-bUZ-w3fFkrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAiF5IZXEe-bUZ-w3fFkrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAiF5YZXEe-bUZ-w3fFkrg" type="_r_XBFYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r555U4ZXEe-bUZ-w3fFkrg" name="Table" method="_sAiF1IZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r56gYIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r56gYYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r56gYoZXEe-bUZ-w3fFkrg" type="_r555UYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r56gY4ZXEe-bUZ-w3fFkrg" name="Table" method="_sAiF1oZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r56gZoZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r56gZ4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r56gZIZXEe-bUZ-w3fFkrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r56gZYZXEe-bUZ-w3fFkrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r56gaIZXEe-bUZ-w3fFkrg" type="_r555UYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r56gaYZXEe-bUZ-w3fFkrg" name="getNumRows" method="_sAiF2oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r56gaoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r56ga4ZXEe-bUZ-w3fFkrg" name="getNumColumns" method="_sAiF3IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r56gbIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r56gbYZXEe-bUZ-w3fFkrg" name="get" method="_sAiF4oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r56gboZXEe-bUZ-w3fFkrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r56gb4ZXEe-bUZ-w3fFkrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_lqkIZXEe-bUZ-w3fFkrg" type="_r_XBFYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_lDgYZXEe-bUZ-w3fFkrg" name="set" method="_sAiF3oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_lDgoZXEe-bUZ-w3fFkrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_lDg4ZXEe-bUZ-w3fFkrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_lDhIZXEe-bUZ-w3fFkrg" name="element" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r57HcIZXEe-bUZ-w3fFkrg" name="Visualization">
              <ownedComment xmi:id="_5J0LhZZCEe-S5LJtyBrH7w">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_r57HcYZXEe-bUZ-w3fFkrg" name="SystemChoices">
                <ownedLiteral xmi:id="_r57Hc4ZXEe-bUZ-w3fFkrg" name="SOURCE"/>
                <ownedLiteral xmi:id="_r57HdIZXEe-bUZ-w3fFkrg" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_r57HdYZXEe-bUZ-w3fFkrg" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_r57HdoZXEe-bUZ-w3fFkrg" name="LATENCY"/>
                <ownedLiteral xmi:id="_r57Hd4ZXEe-bUZ-w3fFkrg" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_r57HeIZXEe-bUZ-w3fFkrg" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_r57HeYZXEe-bUZ-w3fFkrg" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_r57HeoZXEe-bUZ-w3fFkrg" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_r57HfIZXEe-bUZ-w3fFkrg" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_r57HfYZXEe-bUZ-w3fFkrg" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_r57HfoZXEe-bUZ-w3fFkrg" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_r57ugIZXEe-bUZ-w3fFkrg" name="toDisplay"/>
              <ownedOperation xmi:id="_r57ugYZXEe-bUZ-w3fFkrg" name="toFile"/>
              <ownedOperation xmi:id="_r57ugoZXEe-bUZ-w3fFkrg" name="toString">
                <ownedParameter xmi:id="_r57ug4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r57uhIZXEe-bUZ-w3fFkrg" name="VisualizationFactory">
              <ownedComment xmi:id="_5J0LhpZCEe-S5LJtyBrH7w">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5JeNRZZCEe-S5LJtyBrH7w" name="createVisualization" specification="_5IjANJZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5JeNRpZCEe-S5LJtyBrH7w" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JeNR5ZCEe-S5LJtyBrH7w" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5JeNSJZCEe-S5LJtyBrH7w" name="choice" type="_r-0OhoZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JeNSZZCEe-S5LJtyBrH7w" type="_r57HcIZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Je0UJZCEe-S5LJtyBrH7w" name="createVisualization" specification="_5IjnQZZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5Je0UZZCEe-S5LJtyBrH7w" name="workload" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5Je0UpZCEe-S5LJtyBrH7w" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5Je0U5ZCEe-S5LJtyBrH7w" name="choice" type="_r-01kYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5Je0VJZCEe-S5LJtyBrH7w" type="_r57HcIZXEe-bUZ-w3fFkrg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_5IjANJZCEe-S5LJtyBrH7w" name="createVisualization" isStatic="true" method="_5JeNRZZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5IjANZZCEe-S5LJtyBrH7w" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5IjANpZCEe-S5LJtyBrH7w" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5IjAN5ZCEe-S5LJtyBrH7w" name="choice" type="_r-0OhoZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5IjnQJZCEe-S5LJtyBrH7w" type="_r57HcIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5IjnQZZCEe-S5LJtyBrH7w" name="createVisualization" isStatic="true" method="_5Je0UJZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5IjnQpZCEe-S5LJtyBrH7w" name="workload" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5IjnQ5ZCEe-S5LJtyBrH7w" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_5IjnRJZCEe-S5LJtyBrH7w" name="choice" type="_r-01kYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5IkOUJZCEe-S5LJtyBrH7w" type="_r57HcIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r58VkIZXEe-bUZ-w3fFkrg" name="VisualizationImplementation">
              <ownedComment xmi:id="_5J0ykJZCEe-S5LJtyBrH7w">
                <body>Creates a VisualizationImplementation that implements Visualization &lt;br>&#xD;
Has two constructors for either a workload or warp input  &lt;br>&#xD;
Also has a default initalizer for a visualization for any object &lt;br>&#xD;
Has different methods for ways to display the contents of the visualization: file, display, string &lt;br>&#xD;
Has a method that creates a visualization based on a systems choice &lt;br>&#xD;
Has a method that creates a filename template &lt;br>&#xD;
&#xD;
@author sgoddard &#xD;
@version 1.5 &#xD;
@version 1.5.1 - Maria Gauna- added JavaDoc Comments 09/21/24 &lt;br></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAGA6IZXEe-bUZ-w3fFkrg" name="visualization" visibility="private" type="_r5PyAYZXEe-bUZ-w3fFkrg" association="_sBDDJ4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAGn8YZXEe-bUZ-w3fFkrg" name="fileContent" visibility="private" type="_r5PyAYZXEe-bUZ-w3fFkrg" association="_sBDDKoZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAGn84ZXEe-bUZ-w3fFkrg" name="window" visibility="private" type="_r5axIIZXEe-bUZ-w3fFkrg" association="_sBDqMYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAGn9YZXEe-bUZ-w3fFkrg" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAGn94ZXEe-bUZ-w3fFkrg" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAGn-YZXEe-bUZ-w3fFkrg" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAGn-4ZXEe-bUZ-w3fFkrg" name="fm" visibility="private" type="_r5S1UIZXEe-bUZ-w3fFkrg" association="_sBDqNIZXEe-bUZ-w3fFkrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAGn_IZXEe-bUZ-w3fFkrg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAGn_oZXEe-bUZ-w3fFkrg" name="warp" visibility="private" type="_r5__8YZXEe-bUZ-w3fFkrg" association="_sBDqN4ZXEe-bUZ-w3fFkrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAHPAIZXEe-bUZ-w3fFkrg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAHPAoZXEe-bUZ-w3fFkrg" name="workLoad" visibility="private" type="_r6Jw8IZXEe-bUZ-w3fFkrg" association="_sBERQYZXEe-bUZ-w3fFkrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAHPA4ZXEe-bUZ-w3fFkrg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAHPBYZXEe-bUZ-w3fFkrg" name="visualizationObject" visibility="private" type="_r5-KwIZXEe-bUZ-w3fFkrg" association="_sBERRIZXEe-bUZ-w3fFkrg"/>
              <interfaceRealization xmi:id="_r-01nYZXEe-bUZ-w3fFkrg" client="_r58VkIZXEe-bUZ-w3fFkrg" supplier="_r57HcIZXEe-bUZ-w3fFkrg" contract="_r57HcIZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAis1YZXEe-bUZ-w3fFkrg" name="VisualizationImplementation" specification="_r_mRoYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAis1oZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAis14ZXEe-bUZ-w3fFkrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAis2IZXEe-bUZ-w3fFkrg" name="choice" type="_r_lqk4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAis2YZXEe-bUZ-w3fFkrg" type="_r58VkIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAis2oZXEe-bUZ-w3fFkrg" name="VisualizationImplementation" specification="_r_mRqoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAis24ZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAis3IZXEe-bUZ-w3fFkrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAis3YZXEe-bUZ-w3fFkrg" name="choice" type="_r_mRqIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAis3oZXEe-bUZ-w3fFkrg" type="_r58VkIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAis34ZXEe-bUZ-w3fFkrg" name="toDisplay" specification="_r58VkYZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAis4IZXEe-bUZ-w3fFkrg" name="toFile" specification="_r58VlYZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAis4YZXEe-bUZ-w3fFkrg" name="toString" specification="_r588o4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAis4oZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAis44ZXEe-bUZ-w3fFkrg" name="createVisualization" specification="_r_mRsYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAis5IZXEe-bUZ-w3fFkrg" name="choice" type="_r_lqk4ZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAis5YZXEe-bUZ-w3fFkrg" name="createVisualization" specification="_r_m4sIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAis5oZXEe-bUZ-w3fFkrg" name="choice" type="_r_mRqIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAis54ZXEe-bUZ-w3fFkrg" name="createVisualization" specification="_r_m4soZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAis6IZXEe-bUZ-w3fFkrg" name="obj" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAis6YZXEe-bUZ-w3fFkrg" name="createFileNameTemplate" specification="_r588qIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAis6oZXEe-bUZ-w3fFkrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAis64ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r58VkYZXEe-bUZ-w3fFkrg" name="toDisplay" method="_sAis34ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r58VlYZXEe-bUZ-w3fFkrg" name="toFile" method="_sAis4IZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r588o4ZXEe-bUZ-w3fFkrg" name="toString" method="_sAis4YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r588pIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r588qIZXEe-bUZ-w3fFkrg" name="createFileNameTemplate" visibility="private" method="_sAis6YZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J0ylZZCEe-S5LJtyBrH7w">
                  <body>Creates a template for the file name of an outputDirectory parameter. &lt;br>&#xD;
   * Uses a file manager to make a new directory for the filename based a base directory and output directory. &lt;br>&#xD;
   * Creates the fileNameTemplate using full output path and input filename. &lt;br>&#xD;
   * @param outputDirectory the directory where the file will be saved. &lt;br>&#xD;
   * @return the fileNameTemplete as a string &lt;br>&#xD;
   * @see FileManager's method getBaseDirectory() &lt;br>&#xD;
   * @see FileManager's method createDirectory(String,String) &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r588qYZXEe-bUZ-w3fFkrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r588qoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_mRoYZXEe-bUZ-w3fFkrg" name="VisualizationImplementation" method="_sAis1YZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_mRpYZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_mRpoZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5J0ykZZCEe-S5LJtyBrH7w">
                  <body>Constructor that creates a VisualizationImplementataion that: &lt;br>&#xD;
   * Creates a new file manager. &lt;br>&#xD;
   * Assigns the inputed warp to warp instance variable. &lt;br>&#xD;
   * Gets the fileName from the warp and assigns it the inputFileName instance variable. &lt;br>&#xD;
   * Creates a file name template based on the inputed output directory, &#xD;
   * and assigns it to the fileNameTemplete instance variable. &lt;br>&#xD;
   * Sets the visualization object equal to null and  &#xD;
   * calls method createVisualization with an parameter choice sent to the constructor. &lt;br> &#xD;
   * @param warp an interface that gives access to methods for managing warp operations &lt;br>&#xD;
   * @param outputDirectory a string that provides reference to the output directory &lt;br>&#xD;
   * @param choice what is sent to the createVizualization method &lt;br>&#xD;
   * @see VisualizationImplementation method createVisualization(SystemChoices) &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r_mRooZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_mRo4ZXEe-bUZ-w3fFkrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_mRpIZXEe-bUZ-w3fFkrg" name="choice" type="_r_lqk4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_mRp4ZXEe-bUZ-w3fFkrg" type="_r58VkIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_mRqoZXEe-bUZ-w3fFkrg" name="VisualizationImplementation" method="_sAis2oZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_mRroZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_mRr4ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5J0ykpZCEe-S5LJtyBrH7w">
                  <body>Constructor that creates a VisualizationImplementation that: &lt;br>&#xD;
   * Creates a new file manager. &lt;br>&#xD;
   * Assigns the inputed workload to workload instance variable. &lt;br>&#xD;
   * Gets the fileName from the workload and assigns it the inputFileName instance variable. &lt;br>&#xD;
   * Creates a file name template based on the inputed output directory, &#xD;
   * and assigns it to the fileNameTemplete instance variable. &lt;br>&#xD;
   * Sets the visualization object equal to null and &#xD;
   * calls method createVisualization with an parameter choice sent to the constructor. &lt;br>&#xD;
   * @param workLoad an workload that gives access to methods for managing workload operations &lt;br>&#xD;
   * @param outputDirectory a string that provides reference to the output directory &lt;br>&#xD;
   * @param choice what is sent to the createVizualization method &lt;br>&#xD;
   * @see VisualizationImplementation method createVisualization(SystemChoices)  &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r_mRq4ZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_mRrIZXEe-bUZ-w3fFkrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_mRrYZXEe-bUZ-w3fFkrg" name="choice" type="_r_mRqIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_mRsIZXEe-bUZ-w3fFkrg" type="_r58VkIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_mRsYZXEe-bUZ-w3fFkrg" name="createVisualization" visibility="private" method="_sAis44ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J0yk5ZCEe-S5LJtyBrH7w">
                  <body>Creates a visualization based on a choice parameter. &lt;br>&#xD;
   * A switch statement evaluates the choice, options for choices include: &lt;br>&#xD;
   * source, reliability, simulator, latency, channel, latency report, and deadline report &lt;br>&#xD;
   * The default case creates a placeholder visualization.  &lt;br>&#xD;
   * @param choice, the type of system visualization to create &lt;br>&#xD;
   * @see VisualizationImplementation's createVisualization(WorkLoadChoices) &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r_mRsoZXEe-bUZ-w3fFkrg" name="choice" type="_r_lqk4ZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_m4sIZXEe-bUZ-w3fFkrg" name="createVisualization" visibility="private" method="_sAis5YZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J0ylJZCEe-S5LJtyBrH7w">
                  <body>Creates a visualization based on a choice parameter. &lt;br>&#xD;
   * A switch statement evaluates the choice, options for choices include:  &lt;br>&#xD;
   * communication graph, graph visualization, or input graph. &lt;br>&#xD;
   * The default case creates a placeholder visualization.  &lt;br>&#xD;
   * @param choice, the type of workload visualization to make. &lt;br>&#xD;
   * @see VisualizationImplementation's createVisualization(WorkLoadChoices) &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r_m4sYZXEe-bUZ-w3fFkrg" name="choice" type="_r_mRqIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_m4soZXEe-bUZ-w3fFkrg" name="createVisualization" visibility="private" method="_sAis54ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_m4s4ZXEe-bUZ-w3fFkrg" name="obj" type="_r_XBFYZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5-KwIZXEe-bUZ-w3fFkrg" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_5J0ylpZCEe-S5LJtyBrH7w">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAHPB4ZXEe-bUZ-w3fFkrg" name="fm" visibility="private" type="_r5S1UIZXEe-bUZ-w3fFkrg" association="_sBERR4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAHPCYZXEe-bUZ-w3fFkrg" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAHPC4ZXEe-bUZ-w3fFkrg" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAH2EYZXEe-bUZ-w3fFkrg" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAH2EoZXEe-bUZ-w3fFkrg" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAH2E4ZXEe-bUZ-w3fFkrg" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAH2FIZXEe-bUZ-w3fFkrg" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAis7IZXEe-bUZ-w3fFkrg" name="VisualizationObject" specification="_r-2DsIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAis7YZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAis7oZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAis74ZXEe-bUZ-w3fFkrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAis8IZXEe-bUZ-w3fFkrg" type="_r5-KwIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAis8YZXEe-bUZ-w3fFkrg" name="VisualizationObject" specification="_r-2Dt4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAis8oZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAis84ZXEe-bUZ-w3fFkrg" name="warp" type="_r54rNoZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAis9IZXEe-bUZ-w3fFkrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAis9YZXEe-bUZ-w3fFkrg" type="_r5-KwIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAis9oZXEe-bUZ-w3fFkrg" name="VisualizationObject" specification="_r-2DvoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAis94ZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAis-IZXEe-bUZ-w3fFkrg" name="warp" type="_r54rNoZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAis-YZXEe-bUZ-w3fFkrg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAis-oZXEe-bUZ-w3fFkrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAis-4ZXEe-bUZ-w3fFkrg" type="_r5-KwIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAis_IZXEe-bUZ-w3fFkrg" name="VisualizationObject" specification="_r-2qwIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAis_YZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAis_oZXEe-bUZ-w3fFkrg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAis_4ZXEe-bUZ-w3fFkrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAitAIZXEe-bUZ-w3fFkrg" type="_r5-KwIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjT4IZXEe-bUZ-w3fFkrg" name="nameExtension" specification="_r_m4toZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAjT4YZXEe-bUZ-w3fFkrg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAjT4oZXEe-bUZ-w3fFkrg" name="m" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAjT44ZXEe-bUZ-w3fFkrg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAjT5IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjT5YZXEe-bUZ-w3fFkrg" name="nameExtension" specification="_r5-KwYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAjT5oZXEe-bUZ-w3fFkrg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAjT54ZXEe-bUZ-w3fFkrg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAjT6IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjT6YZXEe-bUZ-w3fFkrg" name="getFileManager" specification="_r5-x0oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAjT6oZXEe-bUZ-w3fFkrg" type="_r5S1UIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjT64ZXEe-bUZ-w3fFkrg" name="visualization" specification="_r5-x04ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAjT7IZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjT7YZXEe-bUZ-w3fFkrg" name="createFile" specification="_r5-x1IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAjT7oZXEe-bUZ-w3fFkrg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAjT74ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjT8IZXEe-bUZ-w3fFkrg" name="fileVisualization" specification="_r5-x14ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAjT8YZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjT8oZXEe-bUZ-w3fFkrg" name="displayVisualization" specification="_r5-x2IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAjT84ZXEe-bUZ-w3fFkrg" type="_r5axIIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjT9IZXEe-bUZ-w3fFkrg" name="createHeader" specification="_r5-x2YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAjT9YZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjT9oZXEe-bUZ-w3fFkrg" name="createFooter" specification="_r5-x2oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAjT94ZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjT-IZXEe-bUZ-w3fFkrg" name="createColumnHeader" specification="_r5-x24ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAjT-YZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAjT-oZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjT-4ZXEe-bUZ-w3fFkrg" name="createVisualizationData" specification="_r5-x34ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAjT_IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAjT_YZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r5-KwYZXEe-bUZ-w3fFkrg" name="nameExtension" visibility="private" method="_sAjT5YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5-KwoZXEe-bUZ-w3fFkrg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5-x0IZXEe-bUZ-w3fFkrg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5-x0YZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5-x0oZXEe-bUZ-w3fFkrg" name="getFileManager" method="_sAjT6YZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J1ZoJZCEe-S5LJtyBrH7w">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-2qx4ZXEe-bUZ-w3fFkrg" type="_r5S1UIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5-x04ZXEe-bUZ-w3fFkrg" name="visualization" method="_sAjT64ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-2qyIZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5-x1IZXEe-bUZ-w3fFkrg" name="createFile" method="_sAjT7YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5-x1YZXEe-bUZ-w3fFkrg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r5-x1oZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5-x14ZXEe-bUZ-w3fFkrg" name="fileVisualization" method="_sAjT8IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-2qyYZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5-x2IZXEe-bUZ-w3fFkrg" name="displayVisualization" method="_sAjT8oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-2qyoZXEe-bUZ-w3fFkrg" type="_r5axIIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5-x2YZXEe-bUZ-w3fFkrg" name="createHeader" visibility="protected" method="_sAjT9IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-2qy4ZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5-x2oZXEe-bUZ-w3fFkrg" name="createFooter" visibility="protected" method="_sAjT9oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-2qzIZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r5-x24ZXEe-bUZ-w3fFkrg" name="createColumnHeader" visibility="protected" method="_sAjT-IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5-x3IZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5-x3YZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r5-x34ZXEe-bUZ-w3fFkrg" name="createVisualizationData" visibility="protected" method="_sAjT-4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r5_Y4IZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r5_Y4YZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r-2DsIZXEe-bUZ-w3fFkrg" name="VisualizationObject" visibility="package" method="_sAis7IZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-2DtIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-2DtYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-2DsYZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-2DsoZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-2Ds4ZXEe-bUZ-w3fFkrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-2DtoZXEe-bUZ-w3fFkrg" type="_r5-KwIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-2Dt4ZXEe-bUZ-w3fFkrg" name="VisualizationObject" visibility="package" method="_sAis8YZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-2Du4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-2DvIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-2DuIZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-2DuYZXEe-bUZ-w3fFkrg" name="warp" type="_r54rNoZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-2DuoZXEe-bUZ-w3fFkrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-2DvYZXEe-bUZ-w3fFkrg" type="_r5-KwIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-2DvoZXEe-bUZ-w3fFkrg" name="VisualizationObject" visibility="package" method="_sAis9oZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-2Dw4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-2DxIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-2Dv4ZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-2DwIZXEe-bUZ-w3fFkrg" name="warp" type="_r54rNoZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-2DwYZXEe-bUZ-w3fFkrg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-2DwoZXEe-bUZ-w3fFkrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-2DxYZXEe-bUZ-w3fFkrg" type="_r5-KwIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-2qwIZXEe-bUZ-w3fFkrg" name="VisualizationObject" visibility="package" method="_sAis_IZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-2qxIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-2qxYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-2qwYZXEe-bUZ-w3fFkrg" name="fm" type="_r5S1UIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-2qwoZXEe-bUZ-w3fFkrg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-2qw4ZXEe-bUZ-w3fFkrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r-2qxoZXEe-bUZ-w3fFkrg" type="_r5-KwIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_m4toZXEe-bUZ-w3fFkrg" name="nameExtension" visibility="private" method="_sAjT4IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_nfwIZXEe-bUZ-w3fFkrg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_nfwYZXEe-bUZ-w3fFkrg" name="m" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_nfwoZXEe-bUZ-w3fFkrg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_nfw4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r5__8IZXEe-bUZ-w3fFkrg" name="WarpPoset">
              <ownedComment xmi:id="_5JzkcZZCEe-S5LJtyBrH7w">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_r-3R0IZXEe-bUZ-w3fFkrg" general="_r5is8IZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjT_oZXEe-bUZ-w3fFkrg" name="WarpPoset" specification="_r-2qzYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAjT_4ZXEe-bUZ-w3fFkrg" name="workload" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAjUAIZXEe-bUZ-w3fFkrg" type="_r5__8IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjUAYZXEe-bUZ-w3fFkrg" name="findCoordinator" specification="_r_nfxIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAjUAoZXEe-bUZ-w3fFkrg" name="nodesInFlow" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAjUA4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r-2qzYZXEe-bUZ-w3fFkrg" name="WarpPoset" visibility="package" method="_sAjT_oZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r-2qz4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r-2q0IZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r-2qzoZXEe-bUZ-w3fFkrg" name="workload" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r-2q0YZXEe-bUZ-w3fFkrg" type="_r5__8IZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_nfxIZXEe-bUZ-w3fFkrg" name="findCoordinator" visibility="protected" method="_sAjUAYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_nfxYZXEe-bUZ-w3fFkrg" name="nodesInFlow" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_nfxoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r5__8YZXEe-bUZ-w3fFkrg" name="WarpInterface">
              <ownedComment xmi:id="_5J1ZoZZCEe-S5LJtyBrH7w">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_r-3R0YZXEe-bUZ-w3fFkrg" general="_r54rNoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6AnAIZXEe-bUZ-w3fFkrg" name="toWorkload">
                <ownedParameter xmi:id="_r-3R0oZXEe-bUZ-w3fFkrg" type="_r6Jw8IZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6AnAYZXEe-bUZ-w3fFkrg" name="toProgram">
                <ownedParameter xmi:id="_r-3R04ZXEe-bUZ-w3fFkrg" type="_r5nlcIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6AnAoZXEe-bUZ-w3fFkrg" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_r-3R1IZXEe-bUZ-w3fFkrg" type="_r5wIUYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6AnA4ZXEe-bUZ-w3fFkrg" name="toSimulator">
                <ownedParameter xmi:id="_r-3R1YZXEe-bUZ-w3fFkrg" type="_r54EJoZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6AnBIZXEe-bUZ-w3fFkrg" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_r-3R1oZXEe-bUZ-w3fFkrg" type="_r5dNbIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6AnBYZXEe-bUZ-w3fFkrg" name="toChannelAnalysis">
                <ownedParameter xmi:id="_r-3R14ZXEe-bUZ-w3fFkrg" type="_r5H2MIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6AnBoZXEe-bUZ-w3fFkrg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_r6AnB4ZXEe-bUZ-w3fFkrg" name="reliabilitiesMet">
                <ownedParameter xmi:id="_r6AnCIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6AnCYZXEe-bUZ-w3fFkrg" name="deadlinesMet">
                <ownedParameter xmi:id="_r6AnCoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r6BOEIZXEe-bUZ-w3fFkrg" name="WarpDSL">
              <ownedComment xmi:id="_5J1ZopZCEe-S5LJtyBrH7w">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAH2F4ZXEe-bUZ-w3fFkrg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAH2GIZXEe-bUZ-w3fFkrg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAH2GYZXEe-bUZ-w3fFkrg" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAH2GoZXEe-bUZ-w3fFkrg" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAIdIIZXEe-bUZ-w3fFkrg" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAIdIYZXEe-bUZ-w3fFkrg" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj6_IZXEe-bUZ-w3fFkrg" name="getInstructionParameters" specification="_r6CcMIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAj6_YZXEe-bUZ-w3fFkrg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAj6_oZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r6CcMIZXEe-bUZ-w3fFkrg" name="getInstructionParameters" method="_sAj6_IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6CcMYZXEe-bUZ-w3fFkrg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_oG0YZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_r6BOEYZXEe-bUZ-w3fFkrg" name="InstructionParameters">
                <ownedAttribute xmi:id="_sAIdIoZXEe-bUZ-w3fFkrg" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAIdI4ZXEe-bUZ-w3fFkrg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAIdJIZXEe-bUZ-w3fFkrg" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAIdJYZXEe-bUZ-w3fFkrg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAIdJoZXEe-bUZ-w3fFkrg" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAIdJ4ZXEe-bUZ-w3fFkrg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAIdKIZXEe-bUZ-w3fFkrg" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAIdKYZXEe-bUZ-w3fFkrg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAIdKoZXEe-bUZ-w3fFkrg" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAIdK4ZXEe-bUZ-w3fFkrg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAIdLIZXEe-bUZ-w3fFkrg" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAIdLYZXEe-bUZ-w3fFkrg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAIdL4ZXEe-bUZ-w3fFkrg" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAIdMIZXEe-bUZ-w3fFkrg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjUBIZXEe-bUZ-w3fFkrg" name="getCoordinator" specification="_r6BOEoZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAjUBYZXEe-bUZ-w3fFkrg" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAjUBoZXEe-bUZ-w3fFkrg" name="setCoordinator" specification="_r6BOFIZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAjUB4ZXEe-bUZ-w3fFkrg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj68IZXEe-bUZ-w3fFkrg" name="setName" specification="_r6B1IYZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj68YZXEe-bUZ-w3fFkrg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj68oZXEe-bUZ-w3fFkrg" name="setFlow" specification="_r6B1I4ZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj684ZXEe-bUZ-w3fFkrg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj69IZXEe-bUZ-w3fFkrg" name="setSrc" specification="_r6B1JYZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj69YZXEe-bUZ-w3fFkrg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj69oZXEe-bUZ-w3fFkrg" name="setSnk" specification="_r6B1J4ZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj694ZXEe-bUZ-w3fFkrg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj6-IZXEe-bUZ-w3fFkrg" name="setChannel" specification="_r6B1KYZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj6-YZXEe-bUZ-w3fFkrg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj6-oZXEe-bUZ-w3fFkrg" name="unused" specification="_r6B1K4ZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj6-4ZXEe-bUZ-w3fFkrg" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_r6BOEoZXEe-bUZ-w3fFkrg" name="getCoordinator" method="_sAjUBIZXEe-bUZ-w3fFkrg">
                  <ownedComment xmi:id="_5J1Zo5ZCEe-S5LJtyBrH7w">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r6BOE4ZXEe-bUZ-w3fFkrg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r6BOFIZXEe-bUZ-w3fFkrg" name="setCoordinator" method="_sAjUBoZXEe-bUZ-w3fFkrg">
                  <ownedComment xmi:id="_5J1ZpJZCEe-S5LJtyBrH7w">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r6B1IIZXEe-bUZ-w3fFkrg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r6B1IYZXEe-bUZ-w3fFkrg" name="setName" visibility="private" method="_sAj68IZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_r6B1IoZXEe-bUZ-w3fFkrg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r6B1I4ZXEe-bUZ-w3fFkrg" name="setFlow" visibility="private" method="_sAj68oZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_r6B1JIZXEe-bUZ-w3fFkrg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r6B1JYZXEe-bUZ-w3fFkrg" name="setSrc" visibility="private" method="_sAj69IZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_r6B1JoZXEe-bUZ-w3fFkrg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r6B1J4ZXEe-bUZ-w3fFkrg" name="setSnk" visibility="private" method="_sAj69oZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_r6B1KIZXEe-bUZ-w3fFkrg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r6B1KYZXEe-bUZ-w3fFkrg" name="setChannel" visibility="private" method="_sAj6-IZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_r6B1KoZXEe-bUZ-w3fFkrg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r6B1K4ZXEe-bUZ-w3fFkrg" name="unused" method="_sAj6-oZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_r6B1LIZXEe-bUZ-w3fFkrg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_r6CcM4ZXEe-bUZ-w3fFkrg" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_r_ot4YZXEe-bUZ-w3fFkrg" general="_r_oG0oZXEe-bUZ-w3fFkrg"/>
                <ownedAttribute xmi:id="_sAJEMIZXEe-bUZ-w3fFkrg" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sAJEMoZXEe-bUZ-w3fFkrg" name="instructionParametersArrayList" visibility="package" type="_r-UfQIZXEe-bUZ-w3fFkrg" association="_sBERSoZXEe-bUZ-w3fFkrg"/>
                <ownedAttribute xmi:id="_sAJENYZXEe-bUZ-w3fFkrg" name="instructionParameters" visibility="package" type="_r-llAoZXEe-bUZ-w3fFkrg" association="_sBE4UYZXEe-bUZ-w3fFkrg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj6_4ZXEe-bUZ-w3fFkrg" name="ListenerDsl" specification="_r6CcNIZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj7AIZXEe-bUZ-w3fFkrg" type="_r6CcM4ZXEe-bUZ-w3fFkrg" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj7AYZXEe-bUZ-w3fFkrg" name="getInstructionParameters" specification="_r6CcOIZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj7AoZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj7A4ZXEe-bUZ-w3fFkrg" name="enterAction" specification="_r-344oZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj7BIZXEe-bUZ-w3fFkrg" name="ctx" type="_r-344IZXEe-bUZ-w3fFkrg"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj7BYZXEe-bUZ-w3fFkrg" name="exitAction" specification="_r-3454ZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj7BoZXEe-bUZ-w3fFkrg" name="ctx" type="_r-344IZXEe-bUZ-w3fFkrg"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj7B4ZXEe-bUZ-w3fFkrg" name="exitFlowName" specification="_r-4f8YZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj7CIZXEe-bUZ-w3fFkrg" name="ctx" type="_r-347IZXEe-bUZ-w3fFkrg"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj7CYZXEe-bUZ-w3fFkrg" name="exitCmd" specification="_r-4f-IZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj7CoZXEe-bUZ-w3fFkrg" name="ctx" type="_r-4f9oZXEe-bUZ-w3fFkrg"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj7C4ZXEe-bUZ-w3fFkrg" name="exitSrcNode" specification="_r-5HAYZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj7DIZXEe-bUZ-w3fFkrg" name="ctx" type="_r-4f_YZXEe-bUZ-w3fFkrg"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj7DYZXEe-bUZ-w3fFkrg" name="exitSnkNode" specification="_r-5HCIZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj7DoZXEe-bUZ-w3fFkrg" name="ctx" type="_r-5HBoZXEe-bUZ-w3fFkrg"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAj7D4ZXEe-bUZ-w3fFkrg" name="exitChannel" specification="_r-5uEYZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_sAj7EIZXEe-bUZ-w3fFkrg" name="ctx" type="_r-5HDYZXEe-bUZ-w3fFkrg"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_r6CcNIZXEe-bUZ-w3fFkrg" name="ListenerDsl" visibility="package" method="_sAj6_4ZXEe-bUZ-w3fFkrg">
                  <eAnnotations xmi:id="_r6CcNYZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r6CcNoZXEe-bUZ-w3fFkrg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r6CcN4ZXEe-bUZ-w3fFkrg" type="_r6CcM4ZXEe-bUZ-w3fFkrg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r6CcOIZXEe-bUZ-w3fFkrg" name="getInstructionParameters" method="_sAj7AYZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_r_ot4IZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r-344oZXEe-bUZ-w3fFkrg" name="enterAction" method="_sAj7A4ZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_r-3444ZXEe-bUZ-w3fFkrg" name="ctx" type="_r-344IZXEe-bUZ-w3fFkrg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r-3454ZXEe-bUZ-w3fFkrg" name="exitAction" method="_sAj7BYZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_r-346IZXEe-bUZ-w3fFkrg" name="ctx" type="_r-344IZXEe-bUZ-w3fFkrg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r-4f8YZXEe-bUZ-w3fFkrg" name="exitFlowName" method="_sAj7B4ZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_r-4f8oZXEe-bUZ-w3fFkrg" name="ctx" type="_r-347IZXEe-bUZ-w3fFkrg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r-4f-IZXEe-bUZ-w3fFkrg" name="exitCmd" method="_sAj7CYZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_r-4f-YZXEe-bUZ-w3fFkrg" name="ctx" type="_r-4f9oZXEe-bUZ-w3fFkrg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r-5HAYZXEe-bUZ-w3fFkrg" name="exitSrcNode" method="_sAj7C4ZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_r-5HAoZXEe-bUZ-w3fFkrg" name="ctx" type="_r-4f_YZXEe-bUZ-w3fFkrg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r-5HCIZXEe-bUZ-w3fFkrg" name="exitSnkNode" method="_sAj7DYZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_r-5HCYZXEe-bUZ-w3fFkrg" name="ctx" type="_r-5HBoZXEe-bUZ-w3fFkrg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r-5uEYZXEe-bUZ-w3fFkrg" name="exitChannel" method="_sAj7D4ZXEe-bUZ-w3fFkrg">
                  <ownedParameter xmi:id="_r-5uEoZXEe-bUZ-w3fFkrg" name="ctx" type="_r-5HDYZXEe-bUZ-w3fFkrg"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r6ERYIZXEe-bUZ-w3fFkrg" name="Warp">
              <ownedComment xmi:id="_5J1ZpZZCEe-S5LJtyBrH7w">
                <body>Warp class that is implemented to manage the behavior of a network &lt;br>&#xD;
There is no constructor so no Warp objects need to be instantiated &lt;br>&#xD;
All variables represent default conditions for Warp object creation &lt;br>&#xD;
All methods either implement or qualify the behavior of a warp &lt;br>&#xD;
&#xD;
Revision History: &lt;br>&#xD;
1.8 Fall 2024 &lt;br>&#xD;
1.8.1 - Maria Gauna - added Java Doc comments 09/21/24 &lt;br>&#xD;
&#xD;
@author sgoddard &lt;br>&#xD;
@version 1.8 Fall 2024 &lt;br>&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sAJrQIZXEe-bUZ-w3fFkrg" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAJrQYZXEe-bUZ-w3fFkrg" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAJrQoZXEe-bUZ-w3fFkrg" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_r_hZI4ZXEe-bUZ-w3fFkrg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAJrQ4ZXEe-bUZ-w3fFkrg" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAJrRIZXEe-bUZ-w3fFkrg" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_r_hZI4ZXEe-bUZ-w3fFkrg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAJrRYZXEe-bUZ-w3fFkrg" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAJrRoZXEe-bUZ-w3fFkrg" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAJrR4ZXEe-bUZ-w3fFkrg" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAJrSIZXEe-bUZ-w3fFkrg" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_r-zneIZXEe-bUZ-w3fFkrg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAJrSYZXEe-bUZ-w3fFkrg" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAJrSoZXEe-bUZ-w3fFkrg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAJrS4ZXEe-bUZ-w3fFkrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAJrTIZXEe-bUZ-w3fFkrg" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAJrToZXEe-bUZ-w3fFkrg" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAKSUYZXEe-bUZ-w3fFkrg" name="minLQ" visibility="private" isStatic="true" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAKSU4ZXEe-bUZ-w3fFkrg" name="e2e" visibility="private" isStatic="true" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAKSVYZXEe-bUZ-w3fFkrg" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAKSV4ZXEe-bUZ-w3fFkrg" name="guiRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAKSWYZXEe-bUZ-w3fFkrg" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAKSW4ZXEe-bUZ-w3fFkrg" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAKSXYZXEe-bUZ-w3fFkrg" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAK5YYZXEe-bUZ-w3fFkrg" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAK5Y4ZXEe-bUZ-w3fFkrg" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAK5ZYZXEe-bUZ-w3fFkrg" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAK5Z4ZXEe-bUZ-w3fFkrg" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAK5aYZXEe-bUZ-w3fFkrg" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAK5a4ZXEe-bUZ-w3fFkrg" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAK5bIZXEe-bUZ-w3fFkrg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAK5boZXEe-bUZ-w3fFkrg" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sALgcYZXEe-bUZ-w3fFkrg" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sALgc4ZXEe-bUZ-w3fFkrg" name="schedulerSelected" visibility="private" isStatic="true" type="_r-zneIZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAkiAIZXEe-bUZ-w3fFkrg" name="main" specification="_r6ERYYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAkiAYZXEe-bUZ-w3fFkrg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAkiAoZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>/** parse command-line options and set WARP system parameters */&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 /** and print out the values if in verbose mode */&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 /** Create and visualize the workload, inputFile string, which may be null. */&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 &#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAkiCYZXEe-bUZ-w3fFkrg" name="verifyPerformanceRequirements" specification="_r-7jQYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAkiCoZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAkiC4ZXEe-bUZ-w3fFkrg" name="verifyReliabilities" specification="_r-7jQ4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAkiDIZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAkiDYZXEe-bUZ-w3fFkrg" name="verifyDeadlines" specification="_r-7jRYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAkiDoZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAkiD4ZXEe-bUZ-w3fFkrg" name="verifyNoChannelConflicts" specification="_r-7jR4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAkiEIZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAkiEYZXEe-bUZ-w3fFkrg" name="setWarpParameters" specification="_r6E4c4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAkiEoZXEe-bUZ-w3fFkrg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAkiE4ZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
 /** GraphVis file requested flag */&#xD;
 guiRequested = gui.value; &#xD;
 /** GraphVis file requested flag */&#xD;
 gvRequested = gv.value; &#xD;
 /** WARP file requested flag */&#xD;
 wfRequested = wf.value; &#xD;
 /** Reliability Analysis file requested flag */&#xD;
 raRequested = ra.value; &#xD;
 /** Latency Analysis file requested flag */&#xD;
 laRequested = la.value; &#xD;
 /** Latency Analysis file requested flag */&#xD;
 caRequested = ca.value; &#xD;
 /** Simulation file requested flag */&#xD;
 simRequested = s.value; &#xD;
 /** all out files requested flag */&#xD;
 allRequested = all.value; &#xD;
 /** latency report requested flag */&#xD;
 latencyRequested = latency.value; &#xD;
 /** verbose mode flag (mainly for running in IDE) */&#xD;
 verboseMode = verbose.value; &#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 /** input file specified */&#xD;
 inputFile = input.value; &#xD;
 &#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAkiFIZXEe-bUZ-w3fFkrg" name="printWarpParameters" specification="_r6E4d4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5JgpgJZCEe-S5LJtyBrH7w" name="visualize" specification="_5G3lMJZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5JgpgZZCEe-S5LJtyBrH7w" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JgpgpZCEe-S5LJtyBrH7w" name="choice" type="_r-01kYZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5Jgpg5ZCEe-S5LJtyBrH7w" name="visualize" specification="_5G3lM5ZCEe-S5LJtyBrH7w">
                <ownedParameter xmi:id="_5JgphJZCEe-S5LJtyBrH7w" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5JgphZZCEe-S5LJtyBrH7w" name="choice" type="_r-0OhoZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r6ERYYZXEe-bUZ-w3fFkrg" name="main" isStatic="true" method="_sAkiAIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2AsJZCEe-S5LJtyBrH7w">
                  <body>Main: &lt;br>&#xD;
   * Calls the setWarpParamters method and calls the printWarpParameters when verboseMode is on. &lt;br>&#xD;
   * Create and visualizes a new workload with a inputFile string, which may be null. &lt;br>&#xD;
   * If the user has request all to be visualized, its iterates through all the workloads and visualizes them. &lt;br>&#xD;
   * If a schedule was chosen, it creates a warp system for it, &#xD;
   * then checks the performance requirements and visualizes the system's choices. &lt;br>&#xD;
   * Else it creates a system for each scheduler choice, &#xD;
   * checks the performance requirements of each system and for each system visualizes all the system choices &lt;br>&#xD;
   * If all were not requested, is visualizes warp workload, sources program, and any other requested items. &lt;br>&#xD;
   * It creates a warp interface with the specified workload, channels, and selected schedule &lt;br>&#xD;
   * Finally, it visualizing other aspects of the system based on what the user inputs &lt;br>&#xD;
   *  &#xD;
   * @param args which is an input of an array of arguments from a command line &lt;br>&#xD;
   * @see WorkLoad's method workload(Integer,Double,Double,String) &lt;br>&#xD;
   * @see SystemFactory's create setWarpParameters(WorkLoad,Integer,ScheduleChoices) &lt;br>&#xD;
   * @see Warp's method setWarpParameters(String[] args) &lt;br>&#xD;
   * @see Warp's method printWarpParameters() &lt;br>&#xD;
   * @see Warp's method visualize(WorkLoad, WorkLoadChoices) &lt;br>&#xD;
   * @see Warp's method verifyPerformanceRequirements(Warp) &lt;br>&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6E4cIZXEe-bUZ-w3fFkrg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r6E4cYZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6E4c4ZXEe-bUZ-w3fFkrg" name="setWarpParameters" visibility="private" isStatic="true" method="_sAkiEYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2At5ZCEe-S5LJtyBrH7w">
                  <body>Creates a parser, that parses the command line arguments and adds certain parameters for the system depending on the input. &lt;br>&#xD;
   * The Holders store parsed variables from the command line arguments. &lt;br>&#xD;
   * The parser's addOption sets valid command line options, types, and what holder will hold them. &lt;br>&#xD;
   * Sets Warp system configuration options: &lt;br>&#xD;
   * If a global variable defined doesn't figure certain requirements,then set it equal to a default. &lt;br>&#xD;
   * Sets requested flag variables equal to holders &lt;br>&#xD;
   * If a scheduler value was defined, scheduler choices equal to that value. &lt;br>&#xD;
   * Else set the scheduler choices equal to a default schedule. &lt;br>&#xD;
   * &#xD;
   * @param args which is an input of an array of arguments from a command line &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r6E4dIZXEe-bUZ-w3fFkrg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r6E4dYZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6E4d4ZXEe-bUZ-w3fFkrg" name="printWarpParameters" visibility="private" isStatic="true" method="_sAkiFIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2AuJZCEe-S5LJtyBrH7w">
                  <body>Prints out each of the warp system configuration parameters on a separate lines &lt;br></body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r-7jQYZXEe-bUZ-w3fFkrg" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_sAkiCYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2As5ZCEe-S5LJtyBrH7w">
                  <body>Verifies each of the performance requirements for a warp &lt;br>&#xD;
   * @param warp what is sent to the methods &lt;br>&#xD;
   * @see Warp's method verifyDeadlines(Warp) &lt;br>&#xD;
   * @see Warp's verifyReliabilities(Warp) &lt;br>&#xD;
   * @see Warp's method  verifyNoChannelConflicts(Warp) &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r-7jQoZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-7jQ4ZXEe-bUZ-w3fFkrg" name="verifyReliabilities" visibility="private" isStatic="true" method="_sAkiC4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2AtJZCEe-S5LJtyBrH7w">
                  <body>As long as the schedule selected is not RTHART, then this method: &lt;br>&#xD;
   * Verifies if all reliabilities have been met. &lt;br>&#xD;
   * Prints an error if they don't  &#xD;
   * or prints a confirmation of reliability if they are and verboseMode is on. &lt;br>&#xD;
   * @param warp the warp you use to determine if reliabilities have been met</body>
                </ownedComment>
                <ownedParameter xmi:id="_r-7jRIZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-7jRYZXEe-bUZ-w3fFkrg" name="verifyDeadlines" visibility="private" isStatic="true" method="_sAkiDYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2AtZZCEe-S5LJtyBrH7w">
                  <body>Checks if deadlines of a warp have been met. &lt;br>&#xD;
   * If they haven't been met, an error is printed,&#xD;
   * and a visualization of the deadline report is prompted &lt;br>&#xD;
   * Else if verboseMode is on, a deadline confirmation is printed to console. &lt;br>&#xD;
   * @param warp an interface that gives access to methods for managing warp operations in the visualization. &lt;br>&#xD;
   * @see Warp's method visualize(WorkLoad, WorkLoadChoices) &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r-7jRoZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r-7jR4ZXEe-bUZ-w3fFkrg" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_sAkiD4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2AtpZCEe-S5LJtyBrH7w">
                  <body>Checks if there is no channel conflicts for a warp. &lt;br>&#xD;
   * If there is a channel conflict then an error is printed, &#xD;
   * and if a visualization is not requested yet then prompt a visualization of the channel. &lt;br>&#xD;
   * Else if verbose mode is on, an no channel conflicts confirmation is printed to console. &lt;br>&#xD;
   * @param warp an interface that gives access to methods for managing warp operations in the visualization. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r-7jSIZXEe-bUZ-w3fFkrg" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5G3lMJZCEe-S5LJtyBrH7w" name="visualize" visibility="private" isStatic="true" method="_5JgpgJZCEe-S5LJtyBrH7w">
                <ownedComment xmi:id="_5J2AsZZCEe-S5LJtyBrH7w">
                  <body>Creates a visualize for workload based on specific choices sent to command line. &lt;br>&#xD;
   * And prints that visualization to the consule or to a GUI, &#xD;
   * depending on if either the verboseMode or the GUI is enabled &lt;br>&#xD;
   * Also places the visualization into a file &lt;br>&#xD;
   * @param workLoad used to create a visualization &lt;br>&#xD;
   * @param choice the type of visualization to make &lt;br>&#xD;
   * @see VisualizationFactory's createVisualization(WorkLoad,String,WorkLoadChoices) &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_5G3lMZZCEe-S5LJtyBrH7w" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5G3lMpZCEe-S5LJtyBrH7w" name="choice" type="_r-01kYZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_5G3lM5ZCEe-S5LJtyBrH7w" name="visualize" visibility="private" isStatic="true" method="_5Jgpg5ZCEe-S5LJtyBrH7w">
                <ownedComment xmi:id="_5J2AspZCEe-S5LJtyBrH7w">
                  <body>Creates a visualization of a warp based on specific choices sent to command line. &lt;br>&#xD;
   * If that visualization exists, send to to a file,&#xD;
   * and if GUI and scheduler equals true, then display the visualization. &lt;br>&#xD;
   * @param warp the warp used to create a visualization &lt;br>&#xD;
   * @param choice the type of visualization to make &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_5G3lNJZCEe-S5LJtyBrH7w" name="warp" type="_r5__8YZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_5G3lNZZCEe-S5LJtyBrH7w" name="choice" type="_r-0OhoZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r6GGkIZXEe-bUZ-w3fFkrg" name="WarpSystem">
              <ownedComment xmi:id="_5J2ny5ZCEe-S5LJtyBrH7w">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sALgdYZXEe-bUZ-w3fFkrg" name="program" visibility="private" type="_r5nlcIZXEe-bUZ-w3fFkrg" association="_sBE4VIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sALgd4ZXEe-bUZ-w3fFkrg" name="workLoad" visibility="private" type="_r6Jw8IZXEe-bUZ-w3fFkrg" association="_sBE4V4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAMHgIZXEe-bUZ-w3fFkrg" name="ra" visibility="private" type="_r5wIUYZXEe-bUZ-w3fFkrg" association="_sBE4WoZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAMHgoZXEe-bUZ-w3fFkrg" name="la" visibility="private" type="_r5dNbIZXEe-bUZ-w3fFkrg" association="_sBE4XYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAMHhIZXEe-bUZ-w3fFkrg" name="ca" visibility="private" type="_r5H2MIZXEe-bUZ-w3fFkrg" association="_sBFfYoZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAMHhoZXEe-bUZ-w3fFkrg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAMHjIZXEe-bUZ-w3fFkrg" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAMHjYZXEe-bUZ-w3fFkrg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAMukYZXEe-bUZ-w3fFkrg" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAMukoZXEe-bUZ-w3fFkrg" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_r-8KUIZXEe-bUZ-w3fFkrg" client="_r6GGkIZXEe-bUZ-w3fFkrg" supplier="_r5__8YZXEe-bUZ-w3fFkrg" contract="_r5__8YZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAkiF4ZXEe-bUZ-w3fFkrg" name="WarpSystem" specification="_r_p8AIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAkiGIZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAkiGYZXEe-bUZ-w3fFkrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAkiGoZXEe-bUZ-w3fFkrg" name="choice" type="_r_gLBYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAkiG4ZXEe-bUZ-w3fFkrg" type="_r6GGkIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAkiHIZXEe-bUZ-w3fFkrg" name="toWorkload" specification="_r6GtoIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAkiHYZXEe-bUZ-w3fFkrg" type="_r6Jw8IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAkiHoZXEe-bUZ-w3fFkrg" name="toProgram" specification="_r6GtpIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAkiH4ZXEe-bUZ-w3fFkrg" type="_r5nlcIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAkiIIZXEe-bUZ-w3fFkrg" name="toReliabilityAnalysis" specification="_r6GtqIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAkiIYZXEe-bUZ-w3fFkrg" type="_r5wIUYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJEIZXEe-bUZ-w3fFkrg" name="toSimulator" specification="_r6HUsoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJEYZXEe-bUZ-w3fFkrg" type="_r54EJoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJEoZXEe-bUZ-w3fFkrg" name="toLatencyAnalysis" specification="_r6HUtoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJE4ZXEe-bUZ-w3fFkrg" type="_r5dNbIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJFIZXEe-bUZ-w3fFkrg" name="toChannelAnalysis" specification="_r6HUuoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJFYZXEe-bUZ-w3fFkrg" type="_r5H2MIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJFoZXEe-bUZ-w3fFkrg" name="reliabilitiesMet" specification="_r6HUvoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJF4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliablities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJGIZXEe-bUZ-w3fFkrg" name="deadlinesMet" specification="_r6HUw4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJGYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJGoZXEe-bUZ-w3fFkrg" name="createProgram" specification="_r_qjEIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJG4ZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAlJHIZXEe-bUZ-w3fFkrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAlJHYZXEe-bUZ-w3fFkrg" name="choice" type="_r_gLBYZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJHoZXEe-bUZ-w3fFkrg" name="getNumFaults" specification="_r6H7xIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJH4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJIIZXEe-bUZ-w3fFkrg" name="getMinPacketReceptionRate" specification="_r6H7yYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJIYZXEe-bUZ-w3fFkrg" type="_r_hZI4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJIoZXEe-bUZ-w3fFkrg" name="getE2e" specification="_r6H7zYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJI4ZXEe-bUZ-w3fFkrg" type="_r_hZI4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJJIZXEe-bUZ-w3fFkrg" name="getName" specification="_r6H70YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJJYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJJoZXEe-bUZ-w3fFkrg" name="getSchedulerName" specification="_r6Ii04ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJJ4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJKIZXEe-bUZ-w3fFkrg" name="getNumTransmissions" specification="_r6Ii2IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJKYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJKoZXEe-bUZ-w3fFkrg" name="getOptimizationFlag" specification="_r6Ii3YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJK4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r6GtoIZXEe-bUZ-w3fFkrg" name="toWorkload" method="_sAkiHIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-8xYIZXEe-bUZ-w3fFkrg" type="_r6Jw8IZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6GtpIZXEe-bUZ-w3fFkrg" name="toProgram" method="_sAkiHoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-8xYYZXEe-bUZ-w3fFkrg" type="_r5nlcIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6GtqIZXEe-bUZ-w3fFkrg" name="toReliabilityAnalysis" method="_sAkiIIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-8xYoZXEe-bUZ-w3fFkrg" type="_r5wIUYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6HUsoZXEe-bUZ-w3fFkrg" name="toSimulator" method="_sAlJEIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-8xY4ZXEe-bUZ-w3fFkrg" type="_r54EJoZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6HUtoZXEe-bUZ-w3fFkrg" name="toLatencyAnalysis" method="_sAlJEoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-8xZIZXEe-bUZ-w3fFkrg" type="_r5dNbIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6HUuoZXEe-bUZ-w3fFkrg" name="toChannelAnalysis" method="_sAlJFIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r-8xZYZXEe-bUZ-w3fFkrg" type="_r5H2MIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6HUvoZXEe-bUZ-w3fFkrg" name="reliabilitiesMet" method="_sAlJFoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6HUv4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6HUw4ZXEe-bUZ-w3fFkrg" name="deadlinesMet" method="_sAlJGIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6H7wIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6H7xIZXEe-bUZ-w3fFkrg" name="getNumFaults" method="_sAlJHoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6H7xYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6H7yYZXEe-bUZ-w3fFkrg" name="getMinPacketReceptionRate" method="_sAlJIIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_qjFIZXEe-bUZ-w3fFkrg" type="_r_hZI4ZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6H7zYZXEe-bUZ-w3fFkrg" name="getE2e" method="_sAlJIoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_qjFYZXEe-bUZ-w3fFkrg" type="_r_hZI4ZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6H70YZXEe-bUZ-w3fFkrg" name="getName" method="_sAlJJIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6H70oZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6Ii04ZXEe-bUZ-w3fFkrg" name="getSchedulerName" method="_sAlJJoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6Ii1IZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6Ii2IZXEe-bUZ-w3fFkrg" name="getNumTransmissions" method="_sAlJKIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6Ii2YZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6Ii3YZXEe-bUZ-w3fFkrg" name="getOptimizationFlag" method="_sAlJKoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6Ii3oZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6Ii4oZXEe-bUZ-w3fFkrg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_r_p8AIZXEe-bUZ-w3fFkrg" name="WarpSystem" method="_sAkiF4ZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_p8BIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_p8BYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_p8AYZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_p8AoZXEe-bUZ-w3fFkrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_p8A4ZXEe-bUZ-w3fFkrg" name="choice" type="_r_gLBYZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_p8BoZXEe-bUZ-w3fFkrg" type="_r6GGkIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_qjEIZXEe-bUZ-w3fFkrg" name="createProgram" visibility="private" method="_sAlJGoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_qjEYZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_qjEoZXEe-bUZ-w3fFkrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_qjE4ZXEe-bUZ-w3fFkrg" name="choice" type="_r_gLBYZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r6Jw8IZXEe-bUZ-w3fFkrg" name="WorkLoad">
              <ownedComment xmi:id="_5J3O0JZCEe-S5LJtyBrH7w">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@author ccolin - modified as per HW2 instructions&#xD;
@version 1.4&#xD;
@author msgauna- modified  getNumTxAttemptsPerLink and getTotalTxAttemptsInFlow methods &#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r--ml4ZXEe-bUZ-w3fFkrg" general="_r6RFsIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAMulIZXEe-bUZ-w3fFkrg" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAMulYZXEe-bUZ-w3fFkrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAMuloZXEe-bUZ-w3fFkrg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAMul4ZXEe-bUZ-w3fFkrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sANVoIZXEe-bUZ-w3fFkrg" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sANVoYZXEe-bUZ-w3fFkrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sANVooZXEe-bUZ-w3fFkrg" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sANVo4ZXEe-bUZ-w3fFkrg" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sANVpIZXEe-bUZ-w3fFkrg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sANVpYZXEe-bUZ-w3fFkrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sANVpoZXEe-bUZ-w3fFkrg" name="minPacketReceptionRate" type="_r_hZI4ZXEe-bUZ-w3fFkrg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sANVp4ZXEe-bUZ-w3fFkrg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sANVqIZXEe-bUZ-w3fFkrg" name="e2e" visibility="private" type="_r_hZI4ZXEe-bUZ-w3fFkrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sANVqYZXEe-bUZ-w3fFkrg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sANVq4ZXEe-bUZ-w3fFkrg" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sANVrIZXEe-bUZ-w3fFkrg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sANVrYZXEe-bUZ-w3fFkrg" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sANVroZXEe-bUZ-w3fFkrg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sANVsIZXEe-bUZ-w3fFkrg" name="flows" type="_r5Xt0IZXEe-bUZ-w3fFkrg" association="_sAwvRIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sANVsYZXEe-bUZ-w3fFkrg" name="nodes" type="_r5g3w4ZXEe-bUZ-w3fFkrg" association="_sAwvRoZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAN8sIZXEe-bUZ-w3fFkrg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAN8soZXEe-bUZ-w3fFkrg" name="flowNamesInOriginalOrder" type="_r-UfQIZXEe-bUZ-w3fFkrg" association="_sBFfZYZXEe-bUZ-w3fFkrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAN8tIZXEe-bUZ-w3fFkrg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAN8tYZXEe-bUZ-w3fFkrg" name="flowNamesInPriorityOrder" type="_r-UfQIZXEe-bUZ-w3fFkrg" association="_sBFfaIZXEe-bUZ-w3fFkrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAN8t4ZXEe-bUZ-w3fFkrg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_r-9_g4ZXEe-bUZ-w3fFkrg" client="_r6Jw8IZXEe-bUZ-w3fFkrg" supplier="_r5wIVIZXEe-bUZ-w3fFkrg" contract="_r5wIVIZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJLIZXEe-bUZ-w3fFkrg" name="WorkLoad" specification="_r_rKIIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJLYZXEe-bUZ-w3fFkrg" name="m" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAlJLoZXEe-bUZ-w3fFkrg" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAlJL4ZXEe-bUZ-w3fFkrg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAlJMIZXEe-bUZ-w3fFkrg" type="_r6Jw8IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 /* User file manager passed to this object */&#xD;
 minPacketReceptionRate = m;&#xD;
 /* Use populates this flows object as the input file is read */&#xD;
 this.e2e = e2e;&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlJMYZXEe-bUZ-w3fFkrg" name="WorkLoad" specification="_r_rxNoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlJMoZXEe-bUZ-w3fFkrg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAlJM4ZXEe-bUZ-w3fFkrg" name="m" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAlJNIZXEe-bUZ-w3fFkrg" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAlJNYZXEe-bUZ-w3fFkrg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAlJNoZXEe-bUZ-w3fFkrg" type="_r6Jw8IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 /* Use file manager passed to this object */&#xD;
 minPacketReceptionRate = m;&#xD;
 /* Use populate this flows object as the input file is read */&#xD;
 this.e2e = e2e;&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwIIZXEe-bUZ-w3fFkrg" name="setDefaultParameters" specification="_r6KYAIZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>/* Default is node and flow names are all alpha names */&#xD;
 intForNodeNames = true;&#xD;
 intForFlowNames = true;&#xD;
 /* map of all flow nodes in the WARP graph (&lt;name, Flow>) */&#xD;
 flows = new FlowMap();&#xD;
 /* map of all graph nodes in the WARP graph (&lt;name, Node>) */&#xD;
 nodes = new NodeMap();&#xD;
 /* array to hold names of flows to preserve their order */&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>();&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwIYZXEe-bUZ-w3fFkrg" name="getE2e" specification="_r6KYAYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwIoZXEe-bUZ-w3fFkrg" type="_r_hZI4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwI4ZXEe-bUZ-w3fFkrg" name="getIntForFlowNames" specification="_r6KYAoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwJIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwJYZXEe-bUZ-w3fFkrg" name="getName" specification="_r6K_EYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwJoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwJ4ZXEe-bUZ-w3fFkrg" name="setMinPacketReceptionRate" specification="_r_rxP4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwKIZXEe-bUZ-w3fFkrg" name="minPacketReceptionRate" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwKYZXEe-bUZ-w3fFkrg" name="getMaxPhase" specification="_r6K_E4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwKoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwK4ZXEe-bUZ-w3fFkrg" name="getMinPeriod" specification="_r6K_FYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwLIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwLYZXEe-bUZ-w3fFkrg" name="setE2e" specification="_r_sYQIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwLoZXEe-bUZ-w3fFkrg" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwL4ZXEe-bUZ-w3fFkrg" name="setIntForFlowNames" specification="_r6K_F4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwMIZXEe-bUZ-w3fFkrg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwMYZXEe-bUZ-w3fFkrg" name="setName" specification="_r6K_GYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwMoZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwM4ZXEe-bUZ-w3fFkrg" name="setNodeChannel" specification="_r6K_G4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwNIZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAlwNYZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Get the node object */&#xD;
 var node = nodes.get(name);&#xD;
 node.setChannel(channel);&#xD;
 /* Update nodes map with updated object */&#xD;
 nodes.put(name, node);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwNoZXEe-bUZ-w3fFkrg" name="getNodeChannel" specification="_r6K_HoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwN4ZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAlwOIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Get node object */&#xD;
 var node = nodes.get(name);&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwOYZXEe-bUZ-w3fFkrg" name="addFlow" specification="_r6LmIIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwOoZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow.\n&quot;, flowName);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   /* Set false because name not a number, above makes sure we only set it once */&#xD;
   intForFlowNames = false;&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwO4ZXEe-bUZ-w3fFkrg" name="isIntForNodeNames" specification="_r6LmIoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwPIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Return true if all node names are integers */&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwPYZXEe-bUZ-w3fFkrg" name="isIntForFlowNames" specification="_r6LmJIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwPoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Return true if all flow names are integers */&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwP4ZXEe-bUZ-w3fFkrg" name="addNodeToFlow" specification="_r6LmJoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwQIZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAlwQYZXEe-bUZ-w3fFkrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 /* Create node and add it to nodes if map doesn't have this node already */&#xD;
 if (!nodes.containsKey(nodeName)) {&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   /* nodeIndex will be the order added */&#xD;
   var index = nodes.size();&#xD;
   /* Create a new graph node */&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index);&#xD;
   /* Add it to the map of nodes */&#xD;
   nodes.put(nodeName, graphNode);&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwQoZXEe-bUZ-w3fFkrg" name="getFlowPriority" specification="_r6LmKYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwQ4ZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAlwRIZXEe-bUZ-w3fFkrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAlwRYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     /* Found source node, set its index */&#xD;
     priority = node.getPriority();&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwRoZXEe-bUZ-w3fFkrg" name="getFlowPriority" specification="_r6LmLYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwR4ZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAlwSIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwSYZXEe-bUZ-w3fFkrg" name="setFlowPriority" specification="_r6LmMIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwSoZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAlwS4ZXEe-bUZ-w3fFkrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAlwTIZXEe-bUZ-w3fFkrg" name="setFlowPeriod" specification="_r6MNMIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAlwTYZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAlwToZXEe-bUZ-w3fFkrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXMIZXEe-bUZ-w3fFkrg" name="setFlowDeadline" specification="_r6MNM4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAmXMYZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAmXMoZXEe-bUZ-w3fFkrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXM4ZXEe-bUZ-w3fFkrg" name="setFlowPhase" specification="_r6MNNoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAmXNIZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAmXNYZXEe-bUZ-w3fFkrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXNoZXEe-bUZ-w3fFkrg" name="getFlowIndex" specification="_r6MNOYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAmXN4ZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAmXOIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXOYZXEe-bUZ-w3fFkrg" name="getFlowPeriod" specification="_r6MNPIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAmXOoZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAmXO4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXPIZXEe-bUZ-w3fFkrg" name="getFlowDeadline" specification="_r6MNP4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAmXPYZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAmXPoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXP4ZXEe-bUZ-w3fFkrg" name="getFlowPhase" specification="_r6MNQoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAmXQIZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAmXQYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXQoZXEe-bUZ-w3fFkrg" name="getFlowTxAttemptsPerLink" specification="_r6M0QYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAmXQ4ZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAmXRIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXRYZXEe-bUZ-w3fFkrg" name="setFlowsInPriorityOrder" specification="_r6M0RIZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is index in this case */&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 /* Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXRoZXEe-bUZ-w3fFkrg" name="setFlowsInDMorder" specification="_r6M0RYZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /* Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXR4ZXEe-bUZ-w3fFkrg" name="setFlowsInRMorder" specification="_r6M0RoZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is period in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 /* Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXSIZXEe-bUZ-w3fFkrg" name="setFlowsInRealTimeHARTorder" specification="_r6M0R4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>/* use Priority order for RealTimeHART */&#xD;
 setFlowsInPriorityOrder();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXSYZXEe-bUZ-w3fFkrg" name="finalizeCurrentFlow" specification="_r6M0SIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAmXSoZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXS4ZXEe-bUZ-w3fFkrg" name="nextReleaseTime" specification="_r6M0SoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAmXTIZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAmXTYZXEe-bUZ-w3fFkrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAmXToZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 /* Next release TIme at or after currentTime */ &#xD;
 return flow.getReleaseTime();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXT4ZXEe-bUZ-w3fFkrg" name="nextAbsoluteDeadline" specification="_r6M0ToZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAmXUIZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAmXUYZXEe-bUZ-w3fFkrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAmXUoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 /* Next deadline after currentTime */&#xD;
 return flow.getReleaseTime() + flow.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXU4ZXEe-bUZ-w3fFkrg" name="finalizeFlowWithE2eParameters" specification="_r6NbUIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAmXVIZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 /* shorten the name :-) */&#xD;
 var m = minPacketReceptionRate;&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   /* set nTx to 1 by default (1 transmission per link required at minimum and when m == 1.0) */&#xD;
   Double nTx = 1.0;&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   /* Update flow node in Flows array */&#xD;
   flows.put(flowName, flowNode);&#xD;
   /* should never happen... */&#xD;
 } else {&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property.\n&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXVYZXEe-bUZ-w3fFkrg" name="finalizeFlowWithFixedFaultTolerance" specification="_r6NbUoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAmXVoZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   /* Update flow node in Flows array */&#xD;
   flows.put(flowName, flowNode);&#xD;
   /* should never happen... */&#xD;
 } else {&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property.\n&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXV4ZXEe-bUZ-w3fFkrg" name="getFixedTxPerLinkAndTotalTxCost" specification="_r--mkIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAmXWIZXEe-bUZ-w3fFkrg" name="flow" type="_r5UDdIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAmXWYZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Instantiate the ReliabilityAnalysis object and correct constructor*/&#xD;
	  ReliabilityAnalysis reliabilityAnalysis = new ReliabilityAnalysis(numFaults);&#xD;
	  /* Call the method that will determine which method to call */&#xD;
	  return reliabilityAnalysis.numTxPerLinkAndTotalTxCost(flow);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAmXWoZXEe-bUZ-w3fFkrg" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_r_sYQ4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAmXW4ZXEe-bUZ-w3fFkrg" name="flow" type="_r5UDdIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAmXXIZXEe-bUZ-w3fFkrg" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAmXXYZXEe-bUZ-w3fFkrg" name="M" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAmXXoZXEe-bUZ-w3fFkrg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAmXX4ZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Instantiate the ReliabilityAnalysis object and correct constructor*/&#xD;
	  ReliabilityAnalysis reliabilityAnalysis = new ReliabilityAnalysis(e2e, M);&#xD;
	  /* Call the method that will determine which method to call */&#xD;
	  return reliabilityAnalysis.numTxPerLinkAndTotalTxCost(flow);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAm-QIZXEe-bUZ-w3fFkrg" name="getNodeNamesOrderedAlphabetically" specification="_r6NbVIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAm-QYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAm-QoZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 /* Get names from the node map */&#xD;
 Set&lt;String> keys = nodes.keySet();&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 /* Sort node names */&#xD;
 Arrays.sort(nodeNames);&#xD;
 /* However, if names are actually strings of integers, then the sort doesn't come out&#xD;
  * the way we would like. So, handle that case */&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 /* Flag to see if all names are integers or not */&#xD;
 var allIntNames = true;&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     /* nodeName is an alpha representation of an integer */&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     /* nodeName is an alpha name and not an integer, so set flag and terminate loop */&#xD;
     allIntNames = false;&#xD;
     /* Can stop loop if we know not all names are integers */&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   /* If all names are integers, then we need to sort them accordingly&#xD;
    * Otherwise, we get names in what appears to not be in order because&#xD;
    * below sorts in ascending order */&#xD;
   Arrays.sort(nodeNamesAsInts);&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     /* Integer to string */&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]);&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAm-Q4ZXEe-bUZ-w3fFkrg" name="getFlow" specification="_r6NbWIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAm-RIZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAm-RYZXEe-bUZ-w3fFkrg" type="_r5UDdIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Get requested flow node */&#xD;
 var flow = flows.get(flowName);&#xD;
 /* Return empty node if not found */&#xD;
 if (flow == null) {&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it.\n&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAm-RoZXEe-bUZ-w3fFkrg" name="getFlowNames" specification="_r6NbWoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAm-R4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAm-SIZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better &#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAm-SYZXEe-bUZ-w3fFkrg" name="getNodeIndex" specification="_r6OCYIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAm-SoZXEe-bUZ-w3fFkrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAm-S4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 /* Could throw exception if null but just return 0 for now */&#xD;
 var node = nodes.get(nodeName);&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAm-TIZXEe-bUZ-w3fFkrg" name="getNodesInFlow" specification="_r6OCY4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAm-TYZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAm-ToZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAm-T4ZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     /* Get node from array, get node's name and store it in array */&#xD;
     var node = flow.nodes.get(i);&#xD;
     nodes[i] = node.getName();&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   /* return empty array */&#xD;
   nodes = new String[0];&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAm-UIZXEe-bUZ-w3fFkrg" name="getHyperPeriod" specification="_r6OCaIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAm-UYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* hyperPeriod is LCM of all periods, initialize to 1 */&#xD;
 var hyperPeriod = 1;&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   /* Find LCM of hyperPeriod so far and the current period,&#xD;
    * update hyperPeriod with new value */&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName));&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAm-UoZXEe-bUZ-w3fFkrg" name="getTotalTxAttemptsInFlow" specification="_r6OpcIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAm-U4ZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAm-VIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer totalCost = -1;&#xD;
 String[] flowNames = this.getFlowNames();&#xD;
 for (int i = 0; i &lt; flowNames.length; i++) {&#xD;
   if (flowNames[i].equals(flowName)) {&#xD;
     var flow = getFlow(flowName);&#xD;
     var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
     var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
     totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
   }&#xD;
 }&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAm-VYZXEe-bUZ-w3fFkrg" name="getNumTxAttemptsPerLink" specification="_r6Opc4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAm-VoZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAm-V4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAm-WIZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;Integer> linkTxAndTotalCost = new ArrayList&lt;Integer>();&#xD;
 String[] flowNames = this.getFlowNames();&#xD;
 for (int i = 0; i &lt; flowNames.length; i++) {&#xD;
   if (flowNames[i].equals(flowName)) {&#xD;
     var flow = getFlow(flowName);&#xD;
     linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
     var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
     /* Remove last element since that is the sum of the others */&#xD;
     linkTxAndTotalCost.remove(lastElement);&#xD;
   }&#xD;
 }&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAm-WYZXEe-bUZ-w3fFkrg" name="addEdge" specification="_r--mlIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAm-WoZXEe-bUZ-w3fFkrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAm-W4ZXEe-bUZ-w3fFkrg" name="edge" type="_r5QZGoZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>/* Get node object */&#xD;
 var node = nodes.get(nodeName);&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAm-XIZXEe-bUZ-w3fFkrg" name="maxFlowLength" specification="_r6OpeIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAm-XYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r6KYAIZXEe-bUZ-w3fFkrg" name="setDefaultParameters" visibility="private" method="_sAlwIIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6KYAYZXEe-bUZ-w3fFkrg" name="getE2e" method="_sAlwIYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J3O05ZCEe-S5LJtyBrH7w">
                  <body>Get the E2E reliability target.&#xD;
&#xD;
   * @return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_rxPoZXEe-bUZ-w3fFkrg" type="_r_hZI4ZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6KYAoZXEe-bUZ-w3fFkrg" name="getIntForFlowNames" method="_sAlwI4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J3O1JZCEe-S5LJtyBrH7w">
                  <body>Get whether flow names are represented by integers.&#xD;
&#xD;
   * @return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6K_EIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6K_EYZXEe-bUZ-w3fFkrg" name="getName" method="_sAlwJYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J3O1ZZCEe-S5LJtyBrH7w">
                  <body>Get the name of the WARP graph.&#xD;
&#xD;
   * @return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6K_EoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6K_E4ZXEe-bUZ-w3fFkrg" name="getMaxPhase" method="_sAlwKYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J3O15ZCEe-S5LJtyBrH7w">
                  <body>Finds what the largest phase is of all flows.&#xD;
&#xD;
   * @return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6K_FIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6K_FYZXEe-bUZ-w3fFkrg" name="getMinPeriod" method="_sAlwK4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J3O2JZCEe-S5LJtyBrH7w">
                  <body>Gets the minimum period of all flows.&#xD;
&#xD;
   * @return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6K_FoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6K_F4ZXEe-bUZ-w3fFkrg" name="setIntForFlowNames" method="_sAlwL4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J314JZCEe-S5LJtyBrH7w">
                  <body>Sets whether flow names are represented by integers or not.&#xD;
&#xD;
   * @param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6K_GIZXEe-bUZ-w3fFkrg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6K_GYZXEe-bUZ-w3fFkrg" name="setName" method="_sAlwMYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J314ZZCEe-S5LJtyBrH7w">
                  <body>Sets the name of the WorkLoad.&#xD;
&#xD;
   * @param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6K_GoZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6K_G4ZXEe-bUZ-w3fFkrg" name="setNodeChannel" method="_sAlwM4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J314pZCEe-S5LJtyBrH7w">
                  <body>Sets a specific node to a specific channel.&#xD;
&#xD;
   * @param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6K_HIZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6K_HYZXEe-bUZ-w3fFkrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6K_HoZXEe-bUZ-w3fFkrg" name="getNodeChannel" method="_sAlwNoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J3145ZCEe-S5LJtyBrH7w">
                  <body>Gets the channel of a node.&#xD;
&#xD;
   * @return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6K_H4ZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6K_IIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6LmIIZXEe-bUZ-w3fFkrg" name="addFlow" method="_sAlwOYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J315JZCEe-S5LJtyBrH7w">
                  <body>Add a new flow node to the Flow dictionary.&#xD;
&#xD;
   * @param flowName Name of the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6LmIYZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6LmIoZXEe-bUZ-w3fFkrg" name="isIntForNodeNames" method="_sAlwO4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6LmI4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6LmJIZXEe-bUZ-w3fFkrg" name="isIntForFlowNames" method="_sAlwPYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6LmJYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6LmJoZXEe-bUZ-w3fFkrg" name="addNodeToFlow" method="_sAlwP4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J315ZZCEe-S5LJtyBrH7w">
                  <body>Add a new node to the flow.&#xD;
&#xD;
   * @param flowName Name of the flow.&#xD;
   * @param nodeName Name of the new node.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6LmJ4ZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6LmKIZXEe-bUZ-w3fFkrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6LmKYZXEe-bUZ-w3fFkrg" name="getFlowPriority" method="_sAlwQoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J315pZCEe-S5LJtyBrH7w">
                  <body>Get the priority of a specific node in a flow.&#xD;
&#xD;
   * @param flowName Name of the flow that contains node&#xD;
   * @param nodeName Name of the node in the flow&#xD;
   * @return Priority of the given node in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6LmKoZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6LmK4ZXEe-bUZ-w3fFkrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6LmLIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6LmLYZXEe-bUZ-w3fFkrg" name="getFlowPriority" method="_sAlwRoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J3155ZCEe-S5LJtyBrH7w">
                  <body>Return priority of a flow across all flows.&#xD;
&#xD;
   * @param flowName Name of the flow&#xD;
   * @return Priority of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6LmLoZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6LmL4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6LmMIZXEe-bUZ-w3fFkrg" name="setFlowPriority" method="_sAlwSYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6LmMYZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6LmMoZXEe-bUZ-w3fFkrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6MNMIZXEe-bUZ-w3fFkrg" name="setFlowPeriod" method="_sAlwTIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6MNMYZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6MNMoZXEe-bUZ-w3fFkrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6MNM4ZXEe-bUZ-w3fFkrg" name="setFlowDeadline" method="_sAmXMIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6MNNIZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6MNNYZXEe-bUZ-w3fFkrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6MNNoZXEe-bUZ-w3fFkrg" name="setFlowPhase" method="_sAmXM4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6MNN4ZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6MNOIZXEe-bUZ-w3fFkrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6MNOYZXEe-bUZ-w3fFkrg" name="getFlowIndex" method="_sAmXNoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6MNOoZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6MNO4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6MNPIZXEe-bUZ-w3fFkrg" name="getFlowPeriod" method="_sAmXOYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J316JZCEe-S5LJtyBrH7w">
                  <body>Retrieves the period of a given flow.&#xD;
&#xD;
   * @param flowName Name of flow&#xD;
   * @return Period of flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6MNPYZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6MNPoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6MNP4ZXEe-bUZ-w3fFkrg" name="getFlowDeadline" method="_sAmXPIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J316ZZCEe-S5LJtyBrH7w">
                  <body>Get the deadline of a given flow.&#xD;
&#xD;
   * @param flowName Name of the flow&#xD;
   * @return Deadline of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6MNQIZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6MNQYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6MNQoZXEe-bUZ-w3fFkrg" name="getFlowPhase" method="_sAmXP4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J316pZCEe-S5LJtyBrH7w">
                  <body>Get the phase of a given flow.&#xD;
u90&#xD;
   * @return Phase of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6MNQ4ZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6M0QIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6M0QYZXEe-bUZ-w3fFkrg" name="getFlowTxAttemptsPerLink" method="_sAmXQoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J3165ZCEe-S5LJtyBrH7w">
                  <body>Get the number of transmissions per link for a given flow.&#xD;
&#xD;
   * Returns -1 if invalid flowName&#xD;
&#xD;
   * @param flowName Name of the flow&#xD;
   * @return numTxPerLink of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6M0QoZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6M0Q4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6M0RIZXEe-bUZ-w3fFkrg" name="setFlowsInPriorityOrder" method="_sAmXRYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J317JZCEe-S5LJtyBrH7w">
                  <body>Sorts flows first by priority and then by index, and updates the `flowNamesInPriorityOrder`&#xD;
   * list with the names of the flows in the sorted order.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r6M0RYZXEe-bUZ-w3fFkrg" name="setFlowsInDMorder" method="_sAmXRoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J317ZZCEe-S5LJtyBrH7w">
                  <body>Sorts flows first by deadline and then by priority, and updates the `flowNamesInPriorityOrder`&#xD;
   * list with the names of the flows in the sorted order.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r6M0RoZXEe-bUZ-w3fFkrg" name="setFlowsInRMorder" method="_sAmXR4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J317pZCEe-S5LJtyBrH7w">
                  <body>Sorts flows first by period and then by priority, and updates the `flowNamesInPriorityOrder`&#xD;
   * list with the names of the flows in the sorted order.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r6M0R4ZXEe-bUZ-w3fFkrg" name="setFlowsInRealTimeHARTorder" method="_sAmXSIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6M0SIZXEe-bUZ-w3fFkrg" name="finalizeCurrentFlow" method="_sAmXSYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6M0SYZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6M0SoZXEe-bUZ-w3fFkrg" name="nextReleaseTime" method="_sAmXS4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6M0S4ZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6M0TIZXEe-bUZ-w3fFkrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6M0TYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6M0ToZXEe-bUZ-w3fFkrg" name="nextAbsoluteDeadline" method="_sAmXT4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6M0T4ZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6M0UIZXEe-bUZ-w3fFkrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6M0UYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6NbUIZXEe-bUZ-w3fFkrg" name="finalizeFlowWithE2eParameters" visibility="private" method="_sAmXU4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6NbUYZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6NbUoZXEe-bUZ-w3fFkrg" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_sAmXVYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6NbU4ZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6NbVIZXEe-bUZ-w3fFkrg" name="getNodeNamesOrderedAlphabetically" method="_sAm-QIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J4c8ZZCEe-S5LJtyBrH7w">
                  <body>Get the names of all nodes in flow, ordered alphabetically.&#xD;
   * &#xD;
   * @return Array of all node names sorted</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6NbVYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r6NbVoZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6NbWIZXEe-bUZ-w3fFkrg" name="getFlow" visibility="private" method="_sAm-Q4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6NbWYZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r--mk4ZXEe-bUZ-w3fFkrg" type="_r5UDdIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6NbWoZXEe-bUZ-w3fFkrg" name="getFlowNames" method="_sAm-RoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J4c8pZCEe-S5LJtyBrH7w">
                  <body>Get the names of all the flows in the graph file, ordered as they were read from&#xD;
   * the graph file.&#xD;
&#xD;
   * @return Array of all flow names ordered as read</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6NbW4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r6NbXIZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6OCYIZXEe-bUZ-w3fFkrg" name="getNodeIndex" method="_sAm-SYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J4c85ZCEe-S5LJtyBrH7w">
                  <body>Get the index of the node in the nodes dictionary.&#xD;
&#xD;
   * @param nodeName Name of node.&#xD;
   * @return Index of node</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6OCYYZXEe-bUZ-w3fFkrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6OCYoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6OCY4ZXEe-bUZ-w3fFkrg" name="getNodesInFlow" method="_sAm-TIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J4c9JZCEe-S5LJtyBrH7w">
                  <body>Get the names of all the nodes in a flow, ordered as they exist in the flow specification.&#xD;
&#xD;
   * @param flowName Name of flow&#xD;
   * @return All node names in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6OCZIZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6OCZYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r6OCZoZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6OCaIZXEe-bUZ-w3fFkrg" name="getHyperPeriod" method="_sAm-UIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J4c9ZZCEe-S5LJtyBrH7w">
                  <body>Calculates and returns the least common multiple (LCM) of the periods&#xD;
   * of all flows to determine the hyperPeriod.&#xD;
&#xD;
   * @return the hyperPeriod of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6OCaYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6OpcIZXEe-bUZ-w3fFkrg" name="getTotalTxAttemptsInFlow" method="_sAm-UoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J4c9pZCEe-S5LJtyBrH7w">
                  <body>Get the total cost of all transmission attempts in flow.&#xD;
   * returns -1 if the flowName doesn't exists in the workLoad &#xD;
&#xD;
   * @param flowName Name of the flow&#xD;
   * @return Cost of all transmissions</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6OpcYZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6OpcoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6Opc4ZXEe-bUZ-w3fFkrg" name="getNumTxAttemptsPerLink" method="_sAm-VYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J4c95ZCEe-S5LJtyBrH7w">
                  <body>Get the number of transmissions needed per link to meet E2E reliability target.&#xD;
   * returns an empty array of integers if the flowName doesn't exists in the workLoad&#xD;
&#xD;
   * @param flowName Name of flow&#xD;
   * @return Array of number of transmissions needed per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6OpdIZXEe-bUZ-w3fFkrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6OpdYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r6OpdoZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6OpeIZXEe-bUZ-w3fFkrg" name="maxFlowLength" method="_sAm-XIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J4c-ZZCEe-S5LJtyBrH7w">
                  <body>Get the length of the longest flow among all flows.&#xD;
&#xD;
   * @return Longest flow integer</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6OpeYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r--mkIZXEe-bUZ-w3fFkrg" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_sAmXV4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J3175ZCEe-S5LJtyBrH7w">
                  <body>Computes the number of transmissions needed per node and total cost for a given &#xD;
   * flow using the ReliabilityAnaylsis class.&#xD;
   * &#xD;
   * @param flow Flow whose node transmissions and total cost need to be calculated&#xD;
   * @return Array of number of transmissions needed for each node</body>
                </ownedComment>
                <ownedParameter xmi:id="_r--mkYZXEe-bUZ-w3fFkrg" name="flow" type="_r5UDdIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_sYQoZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r--mlIZXEe-bUZ-w3fFkrg" name="addEdge" method="_sAm-WYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J4c-JZCEe-S5LJtyBrH7w">
                  <body>Add an edge to a given node.&#xD;
&#xD;
   * @param nodeName Name of the node for new edge&#xD;
   * @param edge New edge to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_r--mlYZXEe-bUZ-w3fFkrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r--mloZXEe-bUZ-w3fFkrg" name="edge" type="_r5QZGoZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_rKIIZXEe-bUZ-w3fFkrg" name="WorkLoad" visibility="package" method="_sAlJLIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_rxM4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_rxNIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5J3O0ZZCEe-S5LJtyBrH7w">
                  <body>Creates WorkLoad with 0 faults tolerated, specified packet reception rate and E2E reliability, &#xD;
   * and reads input file to build node and flow data.&#xD;
&#xD;
   * @param m              minimum packet reception rate&#xD;
   * @param e2e            E2E reliability target&#xD;
   * @param inputFileName  name of input file</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_rxMIZXEe-bUZ-w3fFkrg" name="m" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_rxMYZXEe-bUZ-w3fFkrg" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_rxMoZXEe-bUZ-w3fFkrg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_rxNYZXEe-bUZ-w3fFkrg" type="_r6Jw8IZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_rxNoZXEe-bUZ-w3fFkrg" name="WorkLoad" visibility="package" method="_sAlJMYZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_rxO4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_rxPIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5J3O0pZCEe-S5LJtyBrH7w">
                  <body>Creates WorkLoad with specified fault toleration, packet reception rate and E2E reliability, &#xD;
   * and reads input file to build node and flow data.&#xD;
&#xD;
   * @param numFaults      number of faults tolerated&#xD;
   * @param m              minimum packet reception rate&#xD;
   * @param e2e            E2E reliability target&#xD;
   * @param inputFileName  name of input file</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_rxN4ZXEe-bUZ-w3fFkrg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_rxOIZXEe-bUZ-w3fFkrg" name="m" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_rxOYZXEe-bUZ-w3fFkrg" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_rxOoZXEe-bUZ-w3fFkrg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_rxPYZXEe-bUZ-w3fFkrg" type="_r6Jw8IZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_rxP4ZXEe-bUZ-w3fFkrg" name="setMinPacketReceptionRate" method="_sAlwJ4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J3O1pZCEe-S5LJtyBrH7w">
                  <body>Sets the minimum packet reception rate of the WorkLoad.&#xD;
&#xD;
   * @param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_rxQIZXEe-bUZ-w3fFkrg" name="minPacketReceptionRate" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_sYQIZXEe-bUZ-w3fFkrg" name="setE2e" method="_sAlwLYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J3O2ZZCEe-S5LJtyBrH7w">
                  <body>Sets the E2E reliability target.&#xD;
&#xD;
   * @param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_sYQYZXEe-bUZ-w3fFkrg" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_sYQ4ZXEe-bUZ-w3fFkrg" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_sAmXWoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J4c8JZCEe-S5LJtyBrH7w">
                  <body>Computes the number of transmission attempts needed per link and the total number of&#xD;
   * transmission attempts required to achieve the E2E reliability target for the given flow,&#xD;
   * considering the specified reliability and optimization parameters using the ReliabilityAnaylsis class.&#xD;
&#xD;
   * @param flow Flow for which to compute transmission attempts and the cost for&#xD;
   * @param e2e  E2E reliability target&#xD;
   * @param M    Minimum link reliability needed to ensure successful transmission&#xD;
   * @param optimizationRequested  Boolean for if transmission calculations should be optimized&#xD;
   * @return The numTxAttemptsPerLinkAndTotalTxAttempts of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_sYRIZXEe-bUZ-w3fFkrg" name="flow" type="_r5UDdIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_sYRYZXEe-bUZ-w3fFkrg" name="e2e" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_sYRoZXEe-bUZ-w3fFkrg" name="M" type="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_sYR4ZXEe-bUZ-w3fFkrg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_s_UIZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r6RFsIZXEe-bUZ-w3fFkrg" name="WorkLoadDescription">
              <ownedComment xmi:id="_5J4c-pZCEe-S5LJtyBrH7w">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
Modified by Maria Gauna on 9/16/24</body>
              </ownedComment>
              <generalization xmi:id="_r_BC1YZXEe-bUZ-w3fFkrg" general="_r5-KwIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAOjwIZXEe-bUZ-w3fFkrg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAOjwYZXEe-bUZ-w3fFkrg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAOjwoZXEe-bUZ-w3fFkrg" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAPK0IZXEe-bUZ-w3fFkrg" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAPK0YZXEe-bUZ-w3fFkrg" name="description" visibility="private" type="_r5PyAYZXEe-bUZ-w3fFkrg" association="_sBFfa4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAPK04ZXEe-bUZ-w3fFkrg" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAPK1YZXEe-bUZ-w3fFkrg" name="fm" visibility="private" type="_r5S1UIZXEe-bUZ-w3fFkrg" association="_sBGGcYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAPK14ZXEe-bUZ-w3fFkrg" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAm-XoZXEe-bUZ-w3fFkrg" name="WorkLoadDescription" specification="_r6RFsYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAm-X4ZXEe-bUZ-w3fFkrg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAm-YIZXEe-bUZ-w3fFkrg" type="_r6RFsIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAm-YYZXEe-bUZ-w3fFkrg" name="visualization" specification="_r6RswIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAm-YoZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlUIZXEe-bUZ-w3fFkrg" name="fileVisualization" specification="_r6RsxIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlUYZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlUoZXEe-bUZ-w3fFkrg" name="toString" specification="_r6RsyIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlU4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlVIZXEe-bUZ-w3fFkrg" name="getName" specification="_r_AbxIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlVYZXEe-bUZ-w3fFkrg" name="file" type="_r6RFsIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAnlVoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String name= file.getInputFileName();&#xD;
	  return name.substring(0,name.length()-4);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlV4ZXEe-bUZ-w3fFkrg" name="getFlows" specification="_r_BC0oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlWIZXEe-bUZ-w3fFkrg" name="fileOfFlows" type="_r6RFsIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAnlWYZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;String> text = new ArrayList&lt;String>();&#xD;
	  for(int i=1;i&lt;fileOfFlows.description.size()-1;i++) {&#xD;
		  text.add(fileOfFlows.description.get(i));&#xD;
	  }&#xD;
	  return text;&#xD;
	  &#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlWoZXEe-bUZ-w3fFkrg" name="printArray" specification="_r_tmYYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlW4ZXEe-bUZ-w3fFkrg" name="arrayListOfFlows" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>for(int i=0;i&lt;arrayListOfFlows.size();i++) {&#xD;
		  System.out.print(&quot;Flow &quot;+(i+1)+&quot;: &quot; +arrayListOfFlows.get(i));&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlXIZXEe-bUZ-w3fFkrg" name="initialize" specification="_r6ST1IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlXYZXEe-bUZ-w3fFkrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlXoZXEe-bUZ-w3fFkrg" name="main" specification="_r6ST1oZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlX4ZXEe-bUZ-w3fFkrg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAnlYIZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoadDescription workLoadDescrip= new WorkLoadDescription(&quot;StressTest.txt&quot;); &#xD;
	  System.out.println(getName(workLoadDescrip));&#xD;
	  ArrayList&lt;String> arrayListOfFlows = getFlows(workLoadDescrip);&#xD;
	  Collections.sort(arrayListOfFlows);&#xD;
	  printArray(arrayListOfFlows);&#xD;
	  &#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r6RFsYZXEe-bUZ-w3fFkrg" name="WorkLoadDescription" visibility="package" method="_sAm-XoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r6RFs4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r6RFtIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r6RFsoZXEe-bUZ-w3fFkrg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6RFtYZXEe-bUZ-w3fFkrg" type="_r6RFsIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6RswIZXEe-bUZ-w3fFkrg" name="visualization" method="_sAm-YYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_AbwoZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6RsxIZXEe-bUZ-w3fFkrg" name="fileVisualization" method="_sAnlUIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_Abw4ZXEe-bUZ-w3fFkrg" type="_r5PyAYZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6RsyIZXEe-bUZ-w3fFkrg" name="toString" method="_sAnlUoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6ST0IZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6ST1IZXEe-bUZ-w3fFkrg" name="initialize" visibility="private" method="_sAnlXIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6ST1YZXEe-bUZ-w3fFkrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6ST1oZXEe-bUZ-w3fFkrg" name="main" isStatic="true" method="_sAnlXoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6ST14ZXEe-bUZ-w3fFkrg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r6ST2IZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_AbxIZXEe-bUZ-w3fFkrg" name="getName" isStatic="true" method="_sAnlVIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_BC0IZXEe-bUZ-w3fFkrg" name="file" type="_r6RFsIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_BC0YZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_BC0oZXEe-bUZ-w3fFkrg" name="getFlows" isStatic="true" method="_sAnlV4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_BC04ZXEe-bUZ-w3fFkrg" name="fileOfFlows" type="_r6RFsIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_tmYIZXEe-bUZ-w3fFkrg" type="_r-UfQIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_tmYYZXEe-bUZ-w3fFkrg" name="printArray" isStatic="true" method="_sAnlWoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_tmYoZXEe-bUZ-w3fFkrg" name="arrayListOfFlows" type="_r-UfQIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r6S64IZXEe-bUZ-w3fFkrg" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_5J4c-5ZCEe-S5LJtyBrH7w">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_r_uNcIZXEe-bUZ-w3fFkrg" general="_r-gsiYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAPK2IZXEe-bUZ-w3fFkrg" name="workLoad" visibility="package" type="_r6Jw8IZXEe-bUZ-w3fFkrg" association="_sBGGdIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sAPK2oZXEe-bUZ-w3fFkrg" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlYYZXEe-bUZ-w3fFkrg" name="WorkLoadListener" specification="_r_Bp4IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlYoZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAnlY4ZXEe-bUZ-w3fFkrg" type="_r6S64IZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlZIZXEe-bUZ-w3fFkrg" name="buildNodesAndFlows" specification="_r_Bp5YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlZYZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlZoZXEe-bUZ-w3fFkrg" name="testPrintStdOut" specification="_r6Th8IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlZ4ZXEe-bUZ-w3fFkrg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlaIZXEe-bUZ-w3fFkrg" name="enterWarpName" specification="_r_Bp54ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlaYZXEe-bUZ-w3fFkrg" name="ctx" type="_r-hTnIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlaoZXEe-bUZ-w3fFkrg" name="enterFlowName" specification="_r_Bp7IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnla4ZXEe-bUZ-w3fFkrg" name="ctx" type="_r-ihsIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlbIZXEe-bUZ-w3fFkrg" name="exitPriority" specification="_r_CQ9YZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlbYZXEe-bUZ-w3fFkrg" name="ctx" type="_r_CQ84ZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlboZXEe-bUZ-w3fFkrg" name="exitPeriod" specification="_r_CQ_IZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlb4ZXEe-bUZ-w3fFkrg" name="ctx" type="_r_CQ-oZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlcIZXEe-bUZ-w3fFkrg" name="exitDeadline" specification="_r_C4BIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlcYZXEe-bUZ-w3fFkrg" name="ctx" type="_r_C4AoZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnlcoZXEe-bUZ-w3fFkrg" name="exitPhase" specification="_r_C4C4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnlc4ZXEe-bUZ-w3fFkrg" name="ctx" type="_r_C4CYZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnldIZXEe-bUZ-w3fFkrg" name="exitSrcNode" specification="_r_DfEIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnldYZXEe-bUZ-w3fFkrg" name="ctx" type="_r-iht4ZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnldoZXEe-bUZ-w3fFkrg" name="exitSnkNode" specification="_r_DfFYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnld4ZXEe-bUZ-w3fFkrg" name="ctx" type="_r-ihvoZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAnleIZXEe-bUZ-w3fFkrg" name="exitFlow" specification="_r_DfGoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAnleYZXEe-bUZ-w3fFkrg" name="ctx" type="_r-jIxoZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r6Th8IZXEe-bUZ-w3fFkrg" name="testPrintStdOut" method="_sAnlZoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6Th8YZXEe-bUZ-w3fFkrg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_Bp4IZXEe-bUZ-w3fFkrg" name="WorkLoadListener" visibility="private" method="_sAnlYYZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_Bp4oZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_Bp44ZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r_Bp4YZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_Bp5IZXEe-bUZ-w3fFkrg" type="_r6S64IZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_Bp5YZXEe-bUZ-w3fFkrg" name="buildNodesAndFlows" isStatic="true" method="_sAnlZIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_Bp5oZXEe-bUZ-w3fFkrg" name="workLoad" type="_r6Jw8IZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_Bp54ZXEe-bUZ-w3fFkrg" name="enterWarpName" method="_sAnlaIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_Bp6IZXEe-bUZ-w3fFkrg" name="ctx" type="_r-hTnIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_Bp7IZXEe-bUZ-w3fFkrg" name="enterFlowName" method="_sAnlaoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_Bp7YZXEe-bUZ-w3fFkrg" name="ctx" type="_r-ihsIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_CQ9YZXEe-bUZ-w3fFkrg" name="exitPriority" method="_sAnlbIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_CQ9oZXEe-bUZ-w3fFkrg" name="ctx" type="_r_CQ84ZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_CQ_IZXEe-bUZ-w3fFkrg" name="exitPeriod" method="_sAnlboZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_CQ_YZXEe-bUZ-w3fFkrg" name="ctx" type="_r_CQ-oZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_C4BIZXEe-bUZ-w3fFkrg" name="exitDeadline" method="_sAnlcIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_C4BYZXEe-bUZ-w3fFkrg" name="ctx" type="_r_C4AoZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_C4C4ZXEe-bUZ-w3fFkrg" name="exitPhase" method="_sAnlcoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_C4DIZXEe-bUZ-w3fFkrg" name="ctx" type="_r_C4CYZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_DfEIZXEe-bUZ-w3fFkrg" name="exitSrcNode" method="_sAnldIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_DfEYZXEe-bUZ-w3fFkrg" name="ctx" type="_r-iht4ZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_DfFYZXEe-bUZ-w3fFkrg" name="exitSnkNode" method="_sAnldoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_DfFoZXEe-bUZ-w3fFkrg" name="ctx" type="_r-ihvoZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_DfGoZXEe-bUZ-w3fFkrg" name="exitFlow" method="_sAnleIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_DfG4ZXEe-bUZ-w3fFkrg" name="ctx" type="_r-jIxoZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r6UJAIZXEe-bUZ-w3fFkrg" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_sAPx4YZXEe-bUZ-w3fFkrg" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAPx4oZXEe-bUZ-w3fFkrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAPx44ZXEe-bUZ-w3fFkrg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAPx5IZXEe-bUZ-w3fFkrg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAPx5YZXEe-bUZ-w3fFkrg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAPx5oZXEe-bUZ-w3fFkrg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAPx54ZXEe-bUZ-w3fFkrg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAPx6IZXEe-bUZ-w3fFkrg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAPx6YZXEe-bUZ-w3fFkrg" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sAPx6oZXEe-bUZ-w3fFkrg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAPx64ZXEe-bUZ-w3fFkrg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAQY8YZXEe-bUZ-w3fFkrg" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAQY8oZXEe-bUZ-w3fFkrg" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAQY84ZXEe-bUZ-w3fFkrg" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAQY9IZXEe-bUZ-w3fFkrg" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAQY9oZXEe-bUZ-w3fFkrg" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAQY-IZXEe-bUZ-w3fFkrg" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sAQY-oZXEe-bUZ-w3fFkrg" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sARAAIZXEe-bUZ-w3fFkrg" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sARAAYZXEe-bUZ-w3fFkrg" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sARAAoZXEe-bUZ-w3fFkrg" name="predecessor" type="_r6UJAIZXEe-bUZ-w3fFkrg" association="_sAxWYIZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sARAA4ZXEe-bUZ-w3fFkrg" name="endTimes" visibility="private" type="_r5vhRoZXEe-bUZ-w3fFkrg" association="_sBGGd4ZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sARABoZXEe-bUZ-w3fFkrg" name="subObjects" type="_r_EtMYZXEe-bUZ-w3fFkrg" isReadOnly="true" association="_sBGGeoZXEe-bUZ-w3fFkrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMYIZXEe-bUZ-w3fFkrg" name="SchedulableObject" specification="_r6UwEIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMYYZXEe-bUZ-w3fFkrg" type="_r6UJAIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMYoZXEe-bUZ-w3fFkrg" name="SchedulableObject" specification="_r_FUQIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMY4ZXEe-bUZ-w3fFkrg" name="obj" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAoMZIZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAoMZYZXEe-bUZ-w3fFkrg" type="_r6UJAIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMZoZXEe-bUZ-w3fFkrg" name="SchedulableObject" specification="_r6UwFIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMZ4ZXEe-bUZ-w3fFkrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAoMaIZXEe-bUZ-w3fFkrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAoMaYZXEe-bUZ-w3fFkrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAoMaoZXEe-bUZ-w3fFkrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAoMa4ZXEe-bUZ-w3fFkrg" type="_r6UJAIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMbIZXEe-bUZ-w3fFkrg" name="SchedulableObject" specification="_r6VXJoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMbYZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAoMboZXEe-bUZ-w3fFkrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAoMb4ZXEe-bUZ-w3fFkrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAoMcIZXEe-bUZ-w3fFkrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAoMcYZXEe-bUZ-w3fFkrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAoMcoZXEe-bUZ-w3fFkrg" type="_r6UJAIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMc4ZXEe-bUZ-w3fFkrg" name="setDefaultParameters" specification="_r6VXL4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMdIZXEe-bUZ-w3fFkrg" name="getAllEndTimes" specification="_r6VXMIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMdYZXEe-bUZ-w3fFkrg" type="_r5vhRoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMdoZXEe-bUZ-w3fFkrg" name="addToEndTimes" specification="_r6VXMoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMd4ZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMeIZXEe-bUZ-w3fFkrg" name="peekEndTimes" specification="_r6V-MIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMeYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMeoZXEe-bUZ-w3fFkrg" name="pollEndTimes" specification="_r6V-MoZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMe4ZXEe-bUZ-w3fFkrg" name="addSubObject" specification="_r_FUR4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMfIZXEe-bUZ-w3fFkrg" name="obj" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMfYZXEe-bUZ-w3fFkrg" name="getName" specification="_r6V-M4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMfoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMf4ZXEe-bUZ-w3fFkrg" name="setName" specification="_r6V-NYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMgIZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMgYZXEe-bUZ-w3fFkrg" name="getReleaseTime" specification="_r6V-N4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMgoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMg4ZXEe-bUZ-w3fFkrg" name="getPhase" specification="_r6V-OYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMhIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMhYZXEe-bUZ-w3fFkrg" name="getStartTime" specification="_r6V-O4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMhoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMh4ZXEe-bUZ-w3fFkrg" name="setEndTime" specification="_r6V-PYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMiIZXEe-bUZ-w3fFkrg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMiYZXEe-bUZ-w3fFkrg" name="setStartTime" specification="_r6V-P4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMioZXEe-bUZ-w3fFkrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoMi4ZXEe-bUZ-w3fFkrg" name="setReleaseTime" specification="_r6WlQYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoMjIZXEe-bUZ-w3fFkrg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozcIZXEe-bUZ-w3fFkrg" name="setPeriod" specification="_r6WlQ4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozcYZXEe-bUZ-w3fFkrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozcoZXEe-bUZ-w3fFkrg" name="setPhase" specification="_r6WlRYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozc4ZXEe-bUZ-w3fFkrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozdIZXEe-bUZ-w3fFkrg" name="setNextReleaseTime" specification="_r6WlR4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozdYZXEe-bUZ-w3fFkrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozdoZXEe-bUZ-w3fFkrg" name="maxPhaseComparison" specification="_r_FUSYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozd4ZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozeIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozeYZXEe-bUZ-w3fFkrg" name="maxPhaseComparison" specification="_r_FUTIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozeoZXEe-bUZ-w3fFkrg" name="obj1" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAoze4ZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozfIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozfYZXEe-bUZ-w3fFkrg" name="deadlineComparison" specification="_r_FUUIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozfoZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozf4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozgIZXEe-bUZ-w3fFkrg" name="deadlineComparison" specification="_r_FUU4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozgYZXEe-bUZ-w3fFkrg" name="obj1" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozgoZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozg4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozhIZXEe-bUZ-w3fFkrg" name="periodComparison" specification="_r_F7U4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozhYZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozhoZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozh4ZXEe-bUZ-w3fFkrg" name="periodComparison" specification="_r_F7VoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoziIZXEe-bUZ-w3fFkrg" name="obj1" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAoziYZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozioZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozi4ZXEe-bUZ-w3fFkrg" name="priorityComparison" specification="_r_F7WoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozjIZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozjYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozjoZXEe-bUZ-w3fFkrg" name="priorityComparison" specification="_r_F7XYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozj4ZXEe-bUZ-w3fFkrg" name="obj1" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozkIZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozkYZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozkoZXEe-bUZ-w3fFkrg" name="releaseTimeComparison" specification="_r_F7YYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozk4ZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozlIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozlYZXEe-bUZ-w3fFkrg" name="releaseTimeComparison" specification="_r_F7ZIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozloZXEe-bUZ-w3fFkrg" name="obj1" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozl4ZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozmIZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozmYZXEe-bUZ-w3fFkrg" name="LatestReleaseTimeComparison" specification="_r_F7aIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozmoZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozm4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAoznIZXEe-bUZ-w3fFkrg" name="LatestReleaseTimeComparison" specification="_r_GiYoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAoznYZXEe-bUZ-w3fFkrg" name="obj1" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAoznoZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_sAozn4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozoIZXEe-bUZ-w3fFkrg" name="compareAscendingOrder" specification="_r6XMUIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozoYZXEe-bUZ-w3fFkrg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAozooZXEe-bUZ-w3fFkrg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAozo4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozpIZXEe-bUZ-w3fFkrg" name="compareDescendingOrder" specification="_r6XzYIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozpYZXEe-bUZ-w3fFkrg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAozpoZXEe-bUZ-w3fFkrg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sAozp4ZXEe-bUZ-w3fFkrg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozqIZXEe-bUZ-w3fFkrg" name="print" specification="_r6XzZIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAozqYZXEe-bUZ-w3fFkrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAozqoZXEe-bUZ-w3fFkrg" name="print" specification="_r6XzZoZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r6UwEIZXEe-bUZ-w3fFkrg" name="SchedulableObject" visibility="package" method="_sAoMYIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r6UwEYZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r6UwEoZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r6UwE4ZXEe-bUZ-w3fFkrg" type="_r6UJAIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6UwFIZXEe-bUZ-w3fFkrg" name="SchedulableObject" visibility="package" method="_sAoMZoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r6VXI4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r6VXJIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r6UwFYZXEe-bUZ-w3fFkrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6VXIIZXEe-bUZ-w3fFkrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6VXIYZXEe-bUZ-w3fFkrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6VXIoZXEe-bUZ-w3fFkrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6VXJYZXEe-bUZ-w3fFkrg" type="_r6UJAIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6VXJoZXEe-bUZ-w3fFkrg" name="SchedulableObject" visibility="package" method="_sAoMbIZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r6VXLIZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r6VXLYZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r6VXJ4ZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6VXKIZXEe-bUZ-w3fFkrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6VXKYZXEe-bUZ-w3fFkrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6VXKoZXEe-bUZ-w3fFkrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6VXK4ZXEe-bUZ-w3fFkrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6VXLoZXEe-bUZ-w3fFkrg" type="_r6UJAIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6VXL4ZXEe-bUZ-w3fFkrg" name="setDefaultParameters" visibility="private" method="_sAoMc4ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6VXMIZXEe-bUZ-w3fFkrg" name="getAllEndTimes" method="_sAoMdIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2AupZCEe-S5LJtyBrH7w">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_FURoZXEe-bUZ-w3fFkrg" type="_r5vhRoZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r6VXMoZXEe-bUZ-w3fFkrg" name="addToEndTimes" method="_sAoMdoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6VXM4ZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6V-MIZXEe-bUZ-w3fFkrg" name="peekEndTimes" method="_sAoMeIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6V-MYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6V-MoZXEe-bUZ-w3fFkrg" name="pollEndTimes" method="_sAoMeoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6V-M4ZXEe-bUZ-w3fFkrg" name="getName" method="_sAoMfYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2nwJZCEe-S5LJtyBrH7w">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6V-NIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6V-NYZXEe-bUZ-w3fFkrg" name="setName" method="_sAoMf4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2nwZZCEe-S5LJtyBrH7w">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6V-NoZXEe-bUZ-w3fFkrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6V-N4ZXEe-bUZ-w3fFkrg" name="getReleaseTime" method="_sAoMgYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2nwpZCEe-S5LJtyBrH7w">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6V-OIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6V-OYZXEe-bUZ-w3fFkrg" name="getPhase" method="_sAoMg4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2nw5ZCEe-S5LJtyBrH7w">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6V-OoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6V-O4ZXEe-bUZ-w3fFkrg" name="getStartTime" method="_sAoMhYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2nxJZCEe-S5LJtyBrH7w">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6V-PIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6V-PYZXEe-bUZ-w3fFkrg" name="setEndTime" method="_sAoMh4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2nxZZCEe-S5LJtyBrH7w">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6V-PoZXEe-bUZ-w3fFkrg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6V-P4ZXEe-bUZ-w3fFkrg" name="setStartTime" method="_sAoMiYZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2nxpZCEe-S5LJtyBrH7w">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6WlQIZXEe-bUZ-w3fFkrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6WlQYZXEe-bUZ-w3fFkrg" name="setReleaseTime" method="_sAoMi4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2nx5ZCEe-S5LJtyBrH7w">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6WlQoZXEe-bUZ-w3fFkrg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6WlQ4ZXEe-bUZ-w3fFkrg" name="setPeriod" method="_sAozcIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2nyJZCEe-S5LJtyBrH7w">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6WlRIZXEe-bUZ-w3fFkrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6WlRYZXEe-bUZ-w3fFkrg" name="setPhase" method="_sAozcoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2nyZZCEe-S5LJtyBrH7w">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6WlRoZXEe-bUZ-w3fFkrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6WlR4ZXEe-bUZ-w3fFkrg" name="setNextReleaseTime" method="_sAozdIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J2nypZCEe-S5LJtyBrH7w">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6WlSIZXEe-bUZ-w3fFkrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6XMUIZXEe-bUZ-w3fFkrg" name="compareAscendingOrder" method="_sAozoIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6XMUYZXEe-bUZ-w3fFkrg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6XMUoZXEe-bUZ-w3fFkrg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6XMU4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6XzYIZXEe-bUZ-w3fFkrg" name="compareDescendingOrder" method="_sAozpIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6XzYYZXEe-bUZ-w3fFkrg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6XzYoZXEe-bUZ-w3fFkrg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r6XzY4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6XzZIZXEe-bUZ-w3fFkrg" name="print" method="_sAozqIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r6XzZYZXEe-bUZ-w3fFkrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6XzZoZXEe-bUZ-w3fFkrg" name="print" method="_sAozqoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r_FUQIZXEe-bUZ-w3fFkrg" name="SchedulableObject" visibility="package" method="_sAoMYoZXEe-bUZ-w3fFkrg">
                <eAnnotations xmi:id="_r_FUQ4ZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r_FURIZXEe-bUZ-w3fFkrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_5J2AuZZCEe-S5LJtyBrH7w">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_FUQYZXEe-bUZ-w3fFkrg" name="obj" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_FUQoZXEe-bUZ-w3fFkrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r_FURYZXEe-bUZ-w3fFkrg" type="_r6UJAIZXEe-bUZ-w3fFkrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_FUR4ZXEe-bUZ-w3fFkrg" name="addSubObject" method="_sAoMe4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_FUSIZXEe-bUZ-w3fFkrg" name="obj" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r_FUSYZXEe-bUZ-w3fFkrg" name="maxPhaseComparison" method="_sAozdoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_FUSoZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_FUS4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_FUTIZXEe-bUZ-w3fFkrg" name="maxPhaseComparison" method="_sAozeYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_FUTYZXEe-bUZ-w3fFkrg" name="obj1" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_FUToZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_FUT4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_FUUIZXEe-bUZ-w3fFkrg" name="deadlineComparison" method="_sAozfYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_FUUYZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_FUUoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_FUU4ZXEe-bUZ-w3fFkrg" name="deadlineComparison" method="_sAozgIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_F7UIZXEe-bUZ-w3fFkrg" name="obj1" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_F7UYZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_F7UoZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_F7U4ZXEe-bUZ-w3fFkrg" name="periodComparison" method="_sAozhIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_F7VIZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_F7VYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_F7VoZXEe-bUZ-w3fFkrg" name="periodComparison" method="_sAozh4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_F7V4ZXEe-bUZ-w3fFkrg" name="obj1" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_F7WIZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_F7WYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_F7WoZXEe-bUZ-w3fFkrg" name="priorityComparison" method="_sAozi4ZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_F7W4ZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_F7XIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_F7XYZXEe-bUZ-w3fFkrg" name="priorityComparison" method="_sAozjoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_F7XoZXEe-bUZ-w3fFkrg" name="obj1" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_F7X4ZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_F7YIZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_F7YYZXEe-bUZ-w3fFkrg" name="releaseTimeComparison" method="_sAozkoZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_F7YoZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_F7Y4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_F7ZIZXEe-bUZ-w3fFkrg" name="releaseTimeComparison" method="_sAozlYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_F7ZYZXEe-bUZ-w3fFkrg" name="obj1" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_F7ZoZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_F7Z4ZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_F7aIZXEe-bUZ-w3fFkrg" name="LatestReleaseTimeComparison" method="_sAozmYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_GiYIZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_GiYYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r_GiYoZXEe-bUZ-w3fFkrg" name="LatestReleaseTimeComparison" method="_sAoznIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_r_GiY4ZXEe-bUZ-w3fFkrg" name="obj1" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_GiZIZXEe-bUZ-w3fFkrg" name="obj2" type="_r6UJAIZXEe-bUZ-w3fFkrg"/>
                <ownedParameter xmi:id="_r_GiZYZXEe-bUZ-w3fFkrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r6ZokIZXEe-bUZ-w3fFkrg" name="WorkLoadTest" visibility="package">
              <eAnnotations xmi:id="_r6aPoIZXEe-bUZ-w3fFkrg" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_r6aPoYZXEe-bUZ-w3fFkrg" source="codegen">
                  <details xmi:id="_r6aPooZXEe-bUZ-w3fFkrg" key="codegenDirectory" value="/cs2820-fall24/test"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_5J5EAJZCEe-S5LJtyBrH7w">
                <body>Set of JUnit 5 test cases for Workload.java that&#xD;
tests a total of 17 methods of Workload.java for correctness.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sARnEIZXEe-bUZ-w3fFkrg" name="workLoad" visibility="private" type="_r6Jw8IZXEe-bUZ-w3fFkrg" association="_sBGtgYZXEe-bUZ-w3fFkrg"/>
              <ownedAttribute xmi:id="_sARnEoZXEe-bUZ-w3fFkrg" name="originalOut" visibility="private" isLeaf="true" type="_r_Hwg4ZXEe-bUZ-w3fFkrg" isReadOnly="true" association="_sBGthIZXEe-bUZ-w3fFkrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sARnE4ZXEe-bUZ-w3fFkrg" value="System.out"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sASOIYZXEe-bUZ-w3fFkrg" name="tempOutContent" visibility="private" type="_r_HwgYZXEe-bUZ-w3fFkrg" association="_sBGth4ZXEe-bUZ-w3fFkrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sASOIoZXEe-bUZ-w3fFkrg" value="new ByteArrayOutputStream()"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sApagIZXEe-bUZ-w3fFkrg" name="setUp" specification="_r6aPo4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad = new WorkLoad(0.9, 0.99, &quot;StressTest.txt&quot;);&#xD;
 //Captures System.out prints to check if printed warnings are correctly output&#xD;
 //Better way would be to return the warning string from the methods themselves in Workload.java &#xD;
 tempOutContent = new ByteArrayOutputStream();&#xD;
 System.setOut(new PrintStream(tempOutContent));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sApagYZXEe-bUZ-w3fFkrg" name="tearDown" specification="_r6a2s4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>System.setOut(originalOut);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sApagoZXEe-bUZ-w3fFkrg" name="testAddValidFlow" specification="_r6a2t4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 assertTrue(workLoad.getFlows().containsKey(&quot;Flow1&quot;), &quot;Flow not added to WorkLoad&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sApag4ZXEe-bUZ-w3fFkrg" name="testAddFlowWithExistingNameNoSizeChange" specification="_r6bdw4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>int flowSize = workLoad.getFlows().size();&#xD;
 workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 flowSize++;&#xD;
 workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 assertEquals(flowSize, workLoad.getFlows().size(),&#xD;
              &quot;Existing flow incorrectly added to WorkLoad, increased size&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sApahIZXEe-bUZ-w3fFkrg" name="testAddFlowWithExistingNameCorrectWarning" specification="_r6bdx4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 String expectedMessageString = &quot;\n\tWarning! A flow with name Flow1 already exists. &quot;&#xD;
         + &quot;It has been replaced with a new flow.\n&quot;;&#xD;
 String actualMessageString = tempOutContent.toString();&#xD;
 assertEquals(expectedMessageString, actualMessageString, &quot;Warning message did not&quot;&#xD;
            + &quot; appear or didn't appear correctly formatted&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sApahYZXEe-bUZ-w3fFkrg" name="testAddNewNodeToFlowNodeNowExists" specification="_r6bdy4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 // Add a new node to the flow&#xD;
 workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node1&quot;);&#xD;
 assertTrue(workLoad.getNodes().containsKey(&quot;Node1&quot;), &quot;Node1 should be added to Flow1&quot;);&#xD;
 assertEquals(1, workLoad.getNodesInFlow(&quot;Flow1&quot;).length, &quot;Node1 should be added to Flow1&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sApahoZXEe-bUZ-w3fFkrg" name="testAddExistingNodeToFlowTwoExistsInFlow" specification="_r6cE04ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node1&quot;);&#xD;
 workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node1&quot;);&#xD;
 assertEquals(2, workLoad.getNodesInFlow(&quot;Flow1&quot;).length, &quot;Node1 should be in Flow1 twice&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sApah4ZXEe-bUZ-w3fFkrg" name="testAddExistingNodeToFlowOneExistsInNodeMap" specification="_r6cE14ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node1&quot;);&#xD;
 int expectedNodeMapSize = workLoad.getNodes().size();&#xD;
 workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node1&quot;);&#xD;
 assertEquals(expectedNodeMapSize, workLoad.getNodes().size(),&#xD;
              &quot;Node1 shouldn't be in NodeMap twice&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sApaiIZXEe-bUZ-w3fFkrg" name="testGetFlowPriorityOfNodeInFlow" specification="_r6cE24ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node1&quot;);&#xD;
 workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node2&quot;);&#xD;
 workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node3&quot;);&#xD;
 assertEquals(2, workLoad.getFlowPriority(&quot;Flow1&quot;, &quot;Node3&quot;), &quot;Node3 should have priority 2&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sApaiYZXEe-bUZ-w3fFkrg" name="testGetFlowPriorityOfNonExistingNodeDefaultToZero" specification="_r6cE34ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node1&quot;);&#xD;
 assertEquals(0, workLoad.getFlowPriority(&quot;Flow1&quot;, &quot;Node2&quot;),&#xD;
              &quot;Node2 not in flow, should default to 0&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sApaioZXEe-bUZ-w3fFkrg" name="testGetFlowPriorityOfNodeInEmptyFlow" specification="_r6cE44ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 assertEquals(0, workLoad.getFlowPriority(&quot;Flow1&quot;, &quot;Node1&quot;),&#xD;
              &quot;Node1 not in flow, should default to 0&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBkIZXEe-bUZ-w3fFkrg" name="testGetFlowPriorityNewFlowHasLastPriority" specification="_r6cE54ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>int expectedPriority = workLoad.getFlows().size();&#xD;
 workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 assertEquals(expectedPriority, workLoad.getFlowPriority(&quot;Flow1&quot;),&#xD;
              &quot;Flow1 should have last priority&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBkYZXEe-bUZ-w3fFkrg" name="testGetFlowPriorityNonExistingFlow" specification="_r6cr44ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.getFlowPriority(&quot;Flow1&quot;);&#xD;
 String expectedMessageString = &quot;\n\tWarning! Bad situation: Flow Flow1 doesn't exist but &quot;&#xD;
                                + &quot;trying to retrieve it.\n&quot;;&#xD;
 String actualMessageString = tempOutContent.toString();&#xD;
 assertEquals(expectedMessageString, actualMessageString, &quot;Warning message didn't send or&quot;&#xD;
                                                          + &quot;wasn't formatted correctly&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBkoZXEe-bUZ-w3fFkrg" name="testSetFlowPriorityOfExistingFlowToZero" specification="_r6cr54ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 workLoad.setFlowPriority(&quot;Flow1&quot;, 0);&#xD;
 assertEquals(0, workLoad.getFlowPriority(&quot;Flow1&quot;));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBk4ZXEe-bUZ-w3fFkrg" name="testSetFlowPriorityOfExistingFlowToNegative" specification="_r6cr64ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 workLoad.setFlowPriority(&quot;Flow1&quot;, -1);&#xD;
 assertEquals(-1, workLoad.getFlowPriority(&quot;Flow1&quot;));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBlIZXEe-bUZ-w3fFkrg" name="testSetFlowPriorityOfNonExistingFlow" specification="_r6cr74ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.setFlowPriority(&quot;Flow1&quot;, 0);&#xD;
 assertEquals(0, workLoad.getFlowPriority(&quot;Flow1&quot;));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBlYZXEe-bUZ-w3fFkrg" name="testSetFlowDeadlineOfExistingFlowToZero" specification="_r6cr84ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 workLoad.setFlowDeadline(&quot;Flow1&quot;, 0);&#xD;
 assertEquals(0, workLoad.getFlowDeadline(&quot;Flow1&quot;));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBloZXEe-bUZ-w3fFkrg" name="testSetFlowDeadlineOfExistingFlowToNegative" specification="_r6dS84ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 workLoad.setFlowDeadline(&quot;Flow1&quot;, -1);&#xD;
 assertEquals(-1, workLoad.getFlowDeadline(&quot;Flow1&quot;));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBl4ZXEe-bUZ-w3fFkrg" name="testSetFlowDeadlineOfNonExistingFlow" specification="_r6dS94ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.setFlowDeadline(&quot;Flow1&quot;, 0);&#xD;
 assertEquals(100, workLoad.getFlowDeadline(&quot;Flow1&quot;));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBmIZXEe-bUZ-w3fFkrg" name="testGetFlowDeadlineDefault" specification="_r6dS-4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>int deadlineF1 = workLoad.getFlowDeadline(&quot;F1&quot;);&#xD;
 assertEquals(20, deadlineF1, &quot;get deadline for F1 failed&quot;);&#xD;
&#xD;
 int deadlineF2 = workLoad.getFlowDeadline(&quot;F2&quot;);&#xD;
 assertEquals(50, deadlineF2, &quot;get deadline for F2 failed&quot;);&#xD;
&#xD;
 int deadlineF3 = workLoad.getFlowDeadline(&quot;F3&quot;);&#xD;
 assertEquals(50, deadlineF3, &quot;get deadline for F3 failed&quot;);&#xD;
&#xD;
 int deadlineF4 = workLoad.getFlowDeadline(&quot;F4&quot;);&#xD;
 assertEquals(75, deadlineF4, &quot;get deadline for F4 failed&quot;);&#xD;
&#xD;
 int deadlineF5 = workLoad.getFlowDeadline(&quot;F5&quot;);&#xD;
 assertEquals(75, deadlineF5, &quot;get deadline for F5 failed&quot;);&#xD;
&#xD;
 int deadlineF6 = workLoad.getFlowDeadline(&quot;F6&quot;);&#xD;
 assertEquals(75, deadlineF6, &quot;get deadline for F6 failed&quot;);&#xD;
 &#xD;
 int deadlineF7 = workLoad.getFlowDeadline(&quot;F7&quot;);&#xD;
 assertEquals(100, deadlineF7, &quot;get deadline for F7 failed&quot;);&#xD;
&#xD;
 int deadlineF8 = workLoad.getFlowDeadline(&quot;F8&quot;);&#xD;
 assertEquals(100, deadlineF8, &quot;get deadline for F8 failed&quot;);&#xD;
&#xD;
 int deadlineF9 = workLoad.getFlowDeadline(&quot;F9&quot;);&#xD;
 assertEquals(100, deadlineF9, &quot;get deadline for F9 failed&quot;);&#xD;
&#xD;
 int deadlineF10 = workLoad.getFlowDeadline(&quot;F10&quot;);&#xD;
 assertEquals(100, deadlineF10, &quot;get deadline for F10 failed&quot;);&#xD;
&#xD;
 int deadlineAF1 = workLoad.getFlowDeadline(&quot;AF1&quot;);&#xD;
 assertEquals(20, deadlineAF1, &quot;get deadline for AF1 failed&quot;);&#xD;
&#xD;
 int deadlineAF2 = workLoad.getFlowDeadline(&quot;AF2&quot;);&#xD;
 assertEquals(50, deadlineAF2, &quot;get deadline for AF2 failed&quot;);&#xD;
&#xD;
 int deadlineAF4 = workLoad.getFlowDeadline(&quot;AF4&quot;);&#xD;
 assertEquals(75, deadlineAF4, &quot;get deadline for AF4 failed&quot;);&#xD;
&#xD;
 int deadlineAF5 = workLoad.getFlowDeadline(&quot;AF5&quot;);&#xD;
 assertEquals(75, deadlineAF5, &quot;get deadline for AF5 failed&quot;);&#xD;
&#xD;
 int deadlineAF10 = workLoad.getFlowDeadline(&quot;AF10&quot;);&#xD;
 assertEquals(100, deadlineAF10, &quot;get deadline for AF10 failed&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBmYZXEe-bUZ-w3fFkrg" name="testGetFlowDeadlineNonExistent" specification="_r6dS_4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>int deadlineNonExistent = workLoad.getFlowDeadline(&quot;not a flow&quot;);&#xD;
 assertEquals(100, deadlineNonExistent);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBmoZXEe-bUZ-w3fFkrg" name="testGetFlowTxAttemptsPerLinkDefault" specification="_r6dTA4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;F1&quot;), &quot;flow F1 fail&quot;);&#xD;
 assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;F2&quot;), &quot;flow F2 fail&quot;);&#xD;
 assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;F3&quot;), &quot;flow F3 fail&quot;);&#xD;
 assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;F4&quot;), &quot;flow F4 fail&quot;);&#xD;
 assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;F5&quot;), &quot;flow F5 fail&quot;);&#xD;
 assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;F6&quot;), &quot;flow F6 fail&quot;);&#xD;
 assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;F7&quot;), &quot;flow F7 fail&quot;);&#xD;
 assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;F8&quot;), &quot;flow F8 fail&quot;);&#xD;
 assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;F9&quot;), &quot;flow F9 fail&quot;);&#xD;
 assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;F10&quot;), &quot;flow F10 fail&quot;);&#xD;
 assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;AF1&quot;), &quot;flow AF1 fail&quot;);&#xD;
 assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;AF2&quot;), &quot;flow AF2 fail&quot;);&#xD;
 assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;AF4&quot;), &quot;flow AF4 fail&quot;);&#xD;
 assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;AF5&quot;), &quot;flow AF5 fail&quot;);&#xD;
 assertEquals(3, workLoad.getFlowTxAttemptsPerLink(&quot;AF10&quot;), &quot;flow AF10 fail&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBm4ZXEe-bUZ-w3fFkrg" name="testGetFlowTxAttemptsPerLinkNonExisting" specification="_r6d6A4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad = new WorkLoad(0.9, 0.99, &quot;EmptyTest.txt&quot;);&#xD;
 assertEquals(1, workLoad.getFlowTxAttemptsPerLink(&quot;Flow1&quot;));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBnIZXEe-bUZ-w3fFkrg" name="testSetFlowsInRMorderDefault" specification="_r6d6B4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad.setFlowsInRMorder();&#xD;
 Iterator&lt;String> iter = workLoad.getFlowNamesInPriorityOrder().iterator();&#xD;
 assertWorkloadFlows(iter); //assert results&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBnYZXEe-bUZ-w3fFkrg" name="testSetFlowsInRMorderEmpty" specification="_r6d6C4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad = new WorkLoad(0.9, 0.99, &quot;EmptyTest.txt&quot;);&#xD;
 ArrayList&lt;String> expected = new ArrayList&lt;String>();&#xD;
 workLoad.setFlowsInRMorder();&#xD;
 ArrayList&lt;String> sortedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 assertTrue(expected.equals(sortedFlows), &quot;expected empty ArrayList, result not empty.&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBnoZXEe-bUZ-w3fFkrg" name="testSetFlowsInRMorderStressTest" specification="_r6d6D4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>generateRandomWorkloadFlows(); //generates random workload flows&#xD;
 workLoad.setFlowsInRMorder(); &#xD;
 Iterator&lt;String> iter = workLoad.getFlowNamesInPriorityOrder().iterator();&#xD;
 assertWorkloadFlows(iter); //assert resulting list&#xD;
 workLoad = new WorkLoad(0.9, 0.99, &quot;StressTest.txt&quot;); //reset workLoad after each iteration&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBn4ZXEe-bUZ-w3fFkrg" name="generateRandomWorkloadFlows" specification="_r6ehEoZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>int count = 1;&#xD;
 for (int length = 0; length &lt; Math.random() * 100; length++) { //length varies 0-100 flows&#xD;
   String flowName = &quot;Flow&quot; + Integer.toString(count);&#xD;
   workLoad.addFlow(flowName);&#xD;
   workLoad.setFlowPeriod(flowName, (int) Math.random() * 1000); //set period 0-1000 randomly&#xD;
   workLoad.setFlowPriority(flowName, (int) Math.random() * 1000); //set priority 0-1000 randomly&#xD;
   count++;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqBoIZXEe-bUZ-w3fFkrg" name="assertWorkloadFlows" specification="_r_wCoIZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAqBoYZXEe-bUZ-w3fFkrg" name="iter" type="_r-UfRIZXEe-bUZ-w3fFkrg"/>
                <language>java</language>
                <body>int prevPeriod = 0;&#xD;
 int prevPriority = 0;&#xD;
 while (iter.hasNext()) { //iterate through and assert results&#xD;
   String currentFlowName = iter.next();&#xD;
   int currentPeriod = workLoad.getFlowPeriod(currentFlowName);&#xD;
   int currentPriority = workLoad.getFlowPriority(currentFlowName);&#xD;
   assertTrue(currentPeriod >= prevPeriod, &quot;flows not sorted by period, &quot; + &quot;Flows: &quot;&#xD;
              + Arrays.toString(workLoad.getFlowNames()));&#xD;
   assertTrue(currentPriority >= prevPriority, &quot;flows not sorted by priority, &quot; + &quot;Flows: &quot;&#xD;
              + Arrays.toString(workLoad.getFlowNames()));&#xD;
   prevPeriod = currentPeriod;&#xD;
   prevPriority = currentPriority;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqooIZXEe-bUZ-w3fFkrg" name="testGetNodeNamesOrderedAlphabeticallyDefault" specification="_r6ehE4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>String[] sortedNodes = workLoad.getNodeNamesOrderedAlphabetically();&#xD;
 assertWorkloadNodes(sortedNodes); //assert results&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqooYZXEe-bUZ-w3fFkrg" name="testGetNodeNamesOrderedAlphabeticallyEmpty" specification="_r6ehF4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>String[] expected = new String[0];&#xD;
 workLoad = new WorkLoad(0.9, 0.99, &quot;EmptyTest.txt&quot;);&#xD;
 String[] sortedNodes = workLoad.getNodeNamesOrderedAlphabetically();&#xD;
 assertArrayEquals(expected, sortedNodes, &quot;expected empty array&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqoooZXEe-bUZ-w3fFkrg" name="testGetNodeNamesOrderedAlphabeticallyStressTest" specification="_r6ehG4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>generateRandomNodes();&#xD;
 String[] sortedNodes = workLoad.getNodeNamesOrderedAlphabetically();&#xD;
 assertWorkloadNodes(sortedNodes);&#xD;
 workLoad = new WorkLoad(0.9, 0.99, &quot;StressTest.txt&quot;); //reset workLoad after each iteration&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqoo4ZXEe-bUZ-w3fFkrg" name="generateRandomNodes" specification="_r6ehIIZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>String[] nodeNames = new String[]{&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;,&#xD;
                                   &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;,&#xD;
                                   &quot;Y&quot;, &quot;Z&quot;};&#xD;
 workLoad.addFlow(&quot;Flow1&quot;);&#xD;
 for (int i = 0; i &lt; Math.random() * 100; i++) {&#xD;
   String nodeName = nodeNames[(int) (Math.random() * 25.99)]; //random alphabet as name&#xD;
   workLoad.addNodeToFlow(&quot;Flow1&quot;,  nodeName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqopIZXEe-bUZ-w3fFkrg" name="assertWorkloadNodes" specification="_r6ehIYZXEe-bUZ-w3fFkrg">
                <ownedParameter xmi:id="_sAqopYZXEe-bUZ-w3fFkrg" name="nodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAqopoZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>char previousLetter = 0; //null value for char&#xD;
 for (String node : nodes) {&#xD;
   char currentLetter = node.charAt(0); //get first char of nodeName&#xD;
   assertTrue(currentLetter >= previousLetter, &quot;nodes not sorted alphabetically, &quot;&#xD;
              + &quot;Displaying nodes: &quot; + Arrays.toString(nodes));&#xD;
   previousLetter = currentLetter; //set previousLetter to current&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqop4ZXEe-bUZ-w3fFkrg" name="testGetFlowNames1" specification="_r6fIIYZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>String[] expected = new String[] {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &#xD;
                                   &quot;F9&quot;, &quot;F10&quot;, &quot;AF1&quot;, &quot;AF5&quot;, &quot;AF2&quot;, &quot;AF4&quot;, &quot;AF10&quot;};&#xD;
 String[] actual = workLoad.getFlowNames();&#xD;
 Assert.assertArrayEquals(expected, actual);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqoqIZXEe-bUZ-w3fFkrg" name="testGetFlowNames2" specification="_r6fIJYZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);&#xD;
 String[] expected = new String[] {&quot;F1A&quot;, &quot;F1B&quot;};&#xD;
 String[] actual = workLoad.getFlowNames();&#xD;
 Assert.assertArrayEquals(expected, actual);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqoqYZXEe-bUZ-w3fFkrg" name="testGetFlowNamesEmpty" specification="_r6fIKYZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>workLoad = new WorkLoad(0.9, 0.99, &quot;EmptyTest.txt&quot;);&#xD;
 String[] expected = new String[0];&#xD;
 String[] sortedNodes = workLoad.getFlowNames();&#xD;
 Assert.assertArrayEquals(expected, sortedNodes);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqoqoZXEe-bUZ-w3fFkrg" name="testGetNodeIndexDefault" specification="_r6fILYZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>int aNode = workLoad.getNodeIndex(&quot;A&quot;);&#xD;
 int bNode = workLoad.getNodeIndex(&quot;B&quot;);&#xD;
 int cNode = workLoad.getNodeIndex(&quot;C&quot;);&#xD;
 int dNode = workLoad.getNodeIndex(&quot;D&quot;);&#xD;
 int eNode = workLoad.getNodeIndex(&quot;E&quot;);&#xD;
 int fNode = workLoad.getNodeIndex(&quot;F&quot;);&#xD;
 int gNode = workLoad.getNodeIndex(&quot;G&quot;);&#xD;
 int hNode = workLoad.getNodeIndex(&quot;H&quot;);&#xD;
 int iNode = workLoad.getNodeIndex(&quot;I&quot;);&#xD;
 int jNode = workLoad.getNodeIndex(&quot;J&quot;);&#xD;
 int kNode = workLoad.getNodeIndex(&quot;K&quot;);&#xD;
 int lNode = workLoad.getNodeIndex(&quot;L&quot;);&#xD;
 int mNode = workLoad.getNodeIndex(&quot;M&quot;);&#xD;
 int nNode = workLoad.getNodeIndex(&quot;N&quot;);&#xD;
 assertEquals(0, bNode, &quot;node B fail&quot;);&#xD;
 assertEquals(1, cNode, &quot;node C fail&quot;);&#xD;
 assertEquals(2, dNode, &quot;node D fail&quot;);&#xD;
 assertEquals(3, aNode, &quot;node A fail&quot;);&#xD;
 assertEquals(4, eNode, &quot;node E fail&quot;);&#xD;
 assertEquals(5, fNode, &quot;node F fail&quot;);&#xD;
 assertEquals(6, gNode, &quot;node G fail&quot;);&#xD;
 assertEquals(7, hNode, &quot;node H fail&quot;);&#xD;
 assertEquals(8, iNode, &quot;node I fail&quot;);&#xD;
 assertEquals(9, jNode, &quot;node J fail&quot;);&#xD;
 assertEquals(10, kNode, &quot;node K fail&quot;);&#xD;
 assertEquals(11, lNode, &quot;node L fail&quot;);&#xD;
 assertEquals(15, mNode, &quot;node M fail&quot;);&#xD;
 assertEquals(12, nNode, &quot;node N fail&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqoq4ZXEe-bUZ-w3fFkrg" name="testGetNodeIndexNonExistent" specification="_r6fIMYZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>int indexNonExistent = workLoad.getNodeIndex(&quot;not a node&quot;);&#xD;
 assertEquals(0, indexNonExistent);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqorIZXEe-bUZ-w3fFkrg" name="testGetNodeInFlowOrder" specification="_r6fvMoZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>String[] flows = workLoad.getNodesInFlow(&quot;F1&quot;);&#xD;
	  String order = flows[0]+&quot; &quot; + flows[1]+&quot; &quot;+flows[2];&#xD;
	  assertEquals(&quot;B C D&quot;, order);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqorYZXEe-bUZ-w3fFkrg" name="testGetNodesInFlowDefault" specification="_r6fvNoZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>String[] flows = workLoad.getNodesInFlow(&quot;A2&quot;); &#xD;
	  assertEquals(0,flows.length);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqoroZXEe-bUZ-w3fFkrg" name="testGetNodesInFlowZeroFlows" specification="_r6fvOoZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>WorkLoad workLoadOneFlow = new WorkLoad(0.9, 0.99, &quot;LongChain.txt&quot;);&#xD;
	  workLoadOneFlow.addFlow(&quot;F1&quot;);&#xD;
	  String[] flows = workLoadOneFlow.getNodesInFlow(&quot;F1&quot;); &#xD;
	  assertEquals(0,flows.length);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqor4ZXEe-bUZ-w3fFkrg" name="testGetNodesInFlowOneFlow" specification="_r6fvPoZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>WorkLoad workLoadOneFlow = new WorkLoad(0.9, 0.99, &quot;LongChain.txt&quot;);&#xD;
	  workLoadOneFlow.addFlow(&quot;F1&quot;);&#xD;
	  workLoadOneFlow.addNodeToFlow(&quot;F1&quot;, &quot;A&quot;);&#xD;
	  String[] flows = workLoadOneFlow.getNodesInFlow(&quot;F1&quot;); &#xD;
	  assertEquals(&quot;A&quot;,flows[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqosIZXEe-bUZ-w3fFkrg" name="testGetHyperPeriodMutipleFlows" specification="_r6fvQoZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>assertEquals(300,workLoad.getHyperPeriod());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqosYZXEe-bUZ-w3fFkrg" name="testGetHyperPeriodOneFlow" specification="_r6fvRoZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>WorkLoad workLoadOneFlow = new WorkLoad(0.9, 0.99, &quot;LongChain.txt&quot;);&#xD;
	  assertEquals(150,workLoadOneFlow.getHyperPeriod());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqosoZXEe-bUZ-w3fFkrg" name="testDefaultHyperPeriod" specification="_r6gWQ4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>WorkLoad workLoadNoFlow = new WorkLoad(0.9, 0.99, &quot;Example3.txt&quot;);&#xD;
	  assertEquals(100,workLoadNoFlow.getHyperPeriod());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqos4ZXEe-bUZ-w3fFkrg" name="testValidFlowNameForGetTotalTxAttemptInFlow" specification="_r6gWRIZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>assertEquals(4,workLoad.getTotalTxAttemptsInFlow(&quot;F1&quot;));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqotIZXEe-bUZ-w3fFkrg" name="testUnValidFlowNameForGetTotalTxAttemptInFlow" specification="_r6gWSIZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>assertEquals(-1,workLoad.getTotalTxAttemptsInFlow(&quot;A12&quot;));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqotYZXEe-bUZ-w3fFkrg" name="testGetNumTxAttemptsPerLink" specification="_r6gWTIZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>Integer[] output = workLoad.getNumTxAttemptsPerLink(&quot;F1&quot;);&#xD;
	  assertEquals(3,output[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqotoZXEe-bUZ-w3fFkrg" name="testGetNumTxAttemptsPerLinkNonValidFlowName" specification="_r6gWUIZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>Integer[] output = workLoad.getNumTxAttemptsPerLink(&quot;A12&quot;);&#xD;
	  assertTrue(output.length==0);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqot4ZXEe-bUZ-w3fFkrg" name="testMaxFlowLengthMutipleFlowsWithDifferentLengths" specification="_r6gWVIZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>WorkLoad workLoadWithFlowsOfDiffLengths= new WorkLoad(0.9, 0.99, &quot;Example4.txt&quot;);&#xD;
	  Integer output= workLoadWithFlowsOfDiffLengths.maxFlowLength();&#xD;
	  assertEquals(4,output);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqouIZXEe-bUZ-w3fFkrg" name="testMaxFlowLengthMutipleFlowsWithSameLengths" specification="_r6g9U4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>Integer output= workLoad.maxFlowLength();&#xD;
	  assertEquals(8,output);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sAqouYZXEe-bUZ-w3fFkrg" name="testMaxFlowLengthOneFlow" specification="_r6g9V4ZXEe-bUZ-w3fFkrg">
                <language>java</language>
                <body>WorkLoad workLoadOneFlow = new WorkLoad(0.9, 0.99, &quot;LongChain.txt&quot;);&#xD;
	  Integer output= workLoadOneFlow.maxFlowLength();&#xD;
	  assertEquals(26,output);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r6aPo4ZXEe-bUZ-w3fFkrg" name="setUp" visibility="package" method="_sApagIZXEe-bUZ-w3fFkrg" raisedException="_r_vbkIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6a2s4ZXEe-bUZ-w3fFkrg" name="tearDown" visibility="package" method="_sApagYZXEe-bUZ-w3fFkrg" raisedException="_r_vbkIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6a2t4ZXEe-bUZ-w3fFkrg" name="testAddValidFlow" visibility="package" method="_sApagoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6bdw4ZXEe-bUZ-w3fFkrg" name="testAddFlowWithExistingNameNoSizeChange" visibility="package" method="_sApag4ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6bdx4ZXEe-bUZ-w3fFkrg" name="testAddFlowWithExistingNameCorrectWarning" visibility="package" method="_sApahIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6bdy4ZXEe-bUZ-w3fFkrg" name="testAddNewNodeToFlowNodeNowExists" visibility="package" method="_sApahYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6cE04ZXEe-bUZ-w3fFkrg" name="testAddExistingNodeToFlowTwoExistsInFlow" visibility="package" method="_sApahoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6cE14ZXEe-bUZ-w3fFkrg" name="testAddExistingNodeToFlowOneExistsInNodeMap" visibility="package" method="_sApah4ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6cE24ZXEe-bUZ-w3fFkrg" name="testGetFlowPriorityOfNodeInFlow" visibility="package" method="_sApaiIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6cE34ZXEe-bUZ-w3fFkrg" name="testGetFlowPriorityOfNonExistingNodeDefaultToZero" visibility="package" method="_sApaiYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6cE44ZXEe-bUZ-w3fFkrg" name="testGetFlowPriorityOfNodeInEmptyFlow" visibility="package" method="_sApaioZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6cE54ZXEe-bUZ-w3fFkrg" name="testGetFlowPriorityNewFlowHasLastPriority" visibility="package" method="_sAqBkIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6cr44ZXEe-bUZ-w3fFkrg" name="testGetFlowPriorityNonExistingFlow" visibility="package" method="_sAqBkYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6cr54ZXEe-bUZ-w3fFkrg" name="testSetFlowPriorityOfExistingFlowToZero" visibility="package" method="_sAqBkoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6cr64ZXEe-bUZ-w3fFkrg" name="testSetFlowPriorityOfExistingFlowToNegative" visibility="package" method="_sAqBk4ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6cr74ZXEe-bUZ-w3fFkrg" name="testSetFlowPriorityOfNonExistingFlow" visibility="package" method="_sAqBlIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6cr84ZXEe-bUZ-w3fFkrg" name="testSetFlowDeadlineOfExistingFlowToZero" visibility="package" method="_sAqBlYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6dS84ZXEe-bUZ-w3fFkrg" name="testSetFlowDeadlineOfExistingFlowToNegative" visibility="package" method="_sAqBloZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6dS94ZXEe-bUZ-w3fFkrg" name="testSetFlowDeadlineOfNonExistingFlow" visibility="package" method="_sAqBl4ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6dS-4ZXEe-bUZ-w3fFkrg" name="testGetFlowDeadlineDefault" visibility="package" method="_sAqBmIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6dS_4ZXEe-bUZ-w3fFkrg" name="testGetFlowDeadlineNonExistent" visibility="package" method="_sAqBmYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6dTA4ZXEe-bUZ-w3fFkrg" name="testGetFlowTxAttemptsPerLinkDefault" visibility="package" method="_sAqBmoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6d6A4ZXEe-bUZ-w3fFkrg" name="testGetFlowTxAttemptsPerLinkNonExisting" visibility="package" method="_sAqBm4ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6d6B4ZXEe-bUZ-w3fFkrg" name="testSetFlowsInRMorderDefault" visibility="package" method="_sAqBnIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6d6C4ZXEe-bUZ-w3fFkrg" name="testSetFlowsInRMorderEmpty" visibility="package" method="_sAqBnYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6d6D4ZXEe-bUZ-w3fFkrg" name="testSetFlowsInRMorderStressTest" visibility="package" method="_sAqBnoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6ehEoZXEe-bUZ-w3fFkrg" name="generateRandomWorkloadFlows" visibility="private" method="_sAqBn4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J5EApZCEe-S5LJtyBrH7w">
                  <body>Helper method for testSetFlowsInRMorder stress test, generates random workload flows.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r6ehE4ZXEe-bUZ-w3fFkrg" name="testGetNodeNamesOrderedAlphabeticallyDefault" visibility="package" method="_sAqooIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6ehF4ZXEe-bUZ-w3fFkrg" name="testGetNodeNamesOrderedAlphabeticallyEmpty" visibility="package" method="_sAqooYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6ehG4ZXEe-bUZ-w3fFkrg" name="testGetNodeNamesOrderedAlphabeticallyStressTest" visibility="package" method="_sAqoooZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6ehIIZXEe-bUZ-w3fFkrg" name="generateRandomNodes" visibility="private" method="_sAqoo4ZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J5EBZZCEe-S5LJtyBrH7w">
                  <body>Helper method for getNodeNamesOrderedAlphabeticallyStressTest, &#xD;
   * generates random length nodes in flow with random names out of &#xD;
   * 26 alphabet letters.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r6ehIYZXEe-bUZ-w3fFkrg" name="assertWorkloadNodes" visibility="private" method="_sAqopIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J5EBpZCEe-S5LJtyBrH7w">
                  <body>Helper method for tests for getNodeNamesOrderedAlphabetically, &#xD;
   * loops through array and checks alphabetical order.&#xD;
&#xD;
   * @param nodes - array of node names</body>
                </ownedComment>
                <ownedParameter xmi:id="_r6ehIoZXEe-bUZ-w3fFkrg" name="nodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r6fIIIZXEe-bUZ-w3fFkrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r6fIIYZXEe-bUZ-w3fFkrg" name="testGetFlowNames1" visibility="package" method="_sAqop4ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6fIJYZXEe-bUZ-w3fFkrg" name="testGetFlowNames2" visibility="package" method="_sAqoqIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6fIKYZXEe-bUZ-w3fFkrg" name="testGetFlowNamesEmpty" visibility="package" method="_sAqoqYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6fILYZXEe-bUZ-w3fFkrg" name="testGetNodeIndexDefault" visibility="package" method="_sAqoqoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6fIMYZXEe-bUZ-w3fFkrg" name="testGetNodeIndexNonExistent" visibility="package" method="_sAqoq4ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6fvMoZXEe-bUZ-w3fFkrg" name="testGetNodeInFlowOrder" visibility="package" method="_sAqorIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6fvNoZXEe-bUZ-w3fFkrg" name="testGetNodesInFlowDefault" visibility="package" method="_sAqorYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6fvOoZXEe-bUZ-w3fFkrg" name="testGetNodesInFlowZeroFlows" visibility="package" method="_sAqoroZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6fvPoZXEe-bUZ-w3fFkrg" name="testGetNodesInFlowOneFlow" visibility="package" method="_sAqor4ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6fvQoZXEe-bUZ-w3fFkrg" name="testGetHyperPeriodMutipleFlows" visibility="package" method="_sAqosIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6fvRoZXEe-bUZ-w3fFkrg" name="testGetHyperPeriodOneFlow" visibility="package" method="_sAqosYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6gWQ4ZXEe-bUZ-w3fFkrg" name="testDefaultHyperPeriod" visibility="package" method="_sAqosoZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J5EB5ZCEe-S5LJtyBrH7w">
                  <body>Tests if the defaulted 100 is printed out for a workLoad with no flowPeriods&#xD;
   * Test method for {@link edu.uiowa.cs.warp.WorkLoad#getHyperPeriod()}.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r6gWRIZXEe-bUZ-w3fFkrg" name="testValidFlowNameForGetTotalTxAttemptInFlow" visibility="package" method="_sAqos4ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6gWSIZXEe-bUZ-w3fFkrg" name="testUnValidFlowNameForGetTotalTxAttemptInFlow" visibility="package" method="_sAqotIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6gWTIZXEe-bUZ-w3fFkrg" name="testGetNumTxAttemptsPerLink" visibility="package" method="_sAqotYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6gWUIZXEe-bUZ-w3fFkrg" name="testGetNumTxAttemptsPerLinkNonValidFlowName" visibility="package" method="_sAqotoZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6gWVIZXEe-bUZ-w3fFkrg" name="testMaxFlowLengthMutipleFlowsWithDifferentLengths" visibility="package" method="_sAqot4ZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6g9U4ZXEe-bUZ-w3fFkrg" name="testMaxFlowLengthMutipleFlowsWithSameLengths" visibility="package" method="_sAqouIZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r6g9V4ZXEe-bUZ-w3fFkrg" name="testMaxFlowLengthOneFlow" visibility="package" method="_sAqouYZXEe-bUZ-w3fFkrg"/>
              <ownedOperation xmi:id="_r_wCoIZXEe-bUZ-w3fFkrg" name="assertWorkloadFlows" visibility="private" method="_sAqBoIZXEe-bUZ-w3fFkrg">
                <ownedComment xmi:id="_5J5EA5ZCEe-S5LJtyBrH7w">
                  <body>Helper method for all tests for setFlowsInRMorder, goes through and checks&#xD;
   * order of all the flows and their periods and priorities.&#xD;
   * &#xD;
   * @param iter - Iterator&lt;String> for sorted flow names</body>
                </ownedComment>
                <ownedParameter xmi:id="_r_wCoYZXEe-bUZ-w3fFkrg" name="iter" type="_r-UfRIZXEe-bUZ-w3fFkrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r_XBFYZXEe-bUZ-w3fFkrg" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r_e84YZXEe-bUZ-w3fFkrg" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r_gLBYZXEe-bUZ-w3fFkrg" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r_lqk4ZXEe-bUZ-w3fFkrg" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r_mRqIZXEe-bUZ-w3fFkrg" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_sAuTAIZXEe-bUZ-w3fFkrg" name="" memberEnd="_r_5zpoZXEe-bUZ-w3fFkrg _sAuTAYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sAuTAYZXEe-bUZ-w3fFkrg" name="" type="_r5QZGoZXEe-bUZ-w3fFkrg" association="_sAuTAIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sAwvRIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sANVsIZXEe-bUZ-w3fFkrg _sAwvRYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sAwvRYZXEe-bUZ-w3fFkrg" name="" type="_r6Jw8IZXEe-bUZ-w3fFkrg" association="_sAwvRIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sAwvRoZXEe-bUZ-w3fFkrg" name="" memberEnd="_sANVsYZXEe-bUZ-w3fFkrg _sAwvR4ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sAwvR4ZXEe-bUZ-w3fFkrg" name="" type="_r6Jw8IZXEe-bUZ-w3fFkrg" association="_sAwvRoZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sAxWYIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sARAAoZXEe-bUZ-w3fFkrg _sAxWYYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sAxWYYZXEe-bUZ-w3fFkrg" name="" type="_r6UJAIZXEe-bUZ-w3fFkrg" association="_sAxWYIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA7uYIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA7uYYZXEe-bUZ-w3fFkrg _r_1iMoZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA7uYYZXEe-bUZ-w3fFkrg" name="" type="_r5CWpIZXEe-bUZ-w3fFkrg" association="_sA7uYIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA8VcYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA8VcoZXEe-bUZ-w3fFkrg _r_2JQYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA8VcoZXEe-bUZ-w3fFkrg" name="" type="_r5CWpIZXEe-bUZ-w3fFkrg" association="_sA8VcYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA8VdIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA8VdYZXEe-bUZ-w3fFkrg _r_2JQ4ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA8VdYZXEe-bUZ-w3fFkrg" name="" type="_r5CWpIZXEe-bUZ-w3fFkrg" association="_sA8VdIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA8Vd4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA8VeIZXEe-bUZ-w3fFkrg _r_2wUoZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA8VeIZXEe-bUZ-w3fFkrg" name="" type="_r5H2MIZXEe-bUZ-w3fFkrg" association="_sA8Vd4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA8VeoZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA8Ve4ZXEe-bUZ-w3fFkrg _r_2wVIZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA8Ve4ZXEe-bUZ-w3fFkrg" name="" type="_r5H2MIZXEe-bUZ-w3fFkrg" association="_sA8VeoZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA88gYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA88goZXEe-bUZ-w3fFkrg _r_3XZIZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA88goZXEe-bUZ-w3fFkrg" name="" type="_r5IdQIZXEe-bUZ-w3fFkrg" association="_sA88gYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA88hIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA88hYZXEe-bUZ-w3fFkrg _r_3XZoZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA88hYZXEe-bUZ-w3fFkrg" name="" type="_r5IdQIZXEe-bUZ-w3fFkrg" association="_sA88hIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA88h4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA88iIZXEe-bUZ-w3fFkrg _r_3XboZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA88iIZXEe-bUZ-w3fFkrg" name="" type="_r5JEUIZXEe-bUZ-w3fFkrg" association="_sA88h4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA88ioZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA88i4ZXEe-bUZ-w3fFkrg _r_3-dIZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA88i4ZXEe-bUZ-w3fFkrg" name="" type="_r5K5gIZXEe-bUZ-w3fFkrg" association="_sA88ioZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA9jkYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA9jkoZXEe-bUZ-w3fFkrg _r_4lgYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA9jkoZXEe-bUZ-w3fFkrg" name="" type="_r5K5gIZXEe-bUZ-w3fFkrg" association="_sA9jkYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA9jlIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA9jlYZXEe-bUZ-w3fFkrg _r_5MkIZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA9jlYZXEe-bUZ-w3fFkrg" name="" type="_r5N80IZXEe-bUZ-w3fFkrg" association="_sA9jlIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA9jl4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA9jmIZXEe-bUZ-w3fFkrg _r_5MloZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA9jmIZXEe-bUZ-w3fFkrg" name="" type="_r5N80IZXEe-bUZ-w3fFkrg" association="_sA9jl4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA9jmoZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA9jm4ZXEe-bUZ-w3fFkrg _r_7Bw4ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA9jm4ZXEe-bUZ-w3fFkrg" name="" type="_r5UDdIZXEe-bUZ-w3fFkrg" association="_sA9jmoZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA-KoYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA-KooZXEe-bUZ-w3fFkrg _r_7BxoZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA-KooZXEe-bUZ-w3fFkrg" name="" type="_r5UDdIZXEe-bUZ-w3fFkrg" association="_sA-KoYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA-KpIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA-KpYZXEe-bUZ-w3fFkrg _r_7ByYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA-KpYZXEe-bUZ-w3fFkrg" name="" type="_r5UDdIZXEe-bUZ-w3fFkrg" association="_sA-KpIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA-Kp4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA-KqIZXEe-bUZ-w3fFkrg _r_7o0oZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA-KqIZXEe-bUZ-w3fFkrg" name="" type="_r5UDdIZXEe-bUZ-w3fFkrg" association="_sA-Kp4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA-KqoZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA-Kq4ZXEe-bUZ-w3fFkrg _r_7o1IZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA-Kq4ZXEe-bUZ-w3fFkrg" name="" type="_r5UDdIZXEe-bUZ-w3fFkrg" association="_sA-KqoZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA-KrYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA-KroZXEe-bUZ-w3fFkrg _r_8P64ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA-KroZXEe-bUZ-w3fFkrg" name="" type="_r5YU4IZXEe-bUZ-w3fFkrg" association="_sA-KrYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA-xsYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA-xsoZXEe-bUZ-w3fFkrg _r_828YZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA-xsoZXEe-bUZ-w3fFkrg" name="" type="_r5YU4IZXEe-bUZ-w3fFkrg" association="_sA-xsYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA-xtIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA-xtYZXEe-bUZ-w3fFkrg _r_8284ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA-xtYZXEe-bUZ-w3fFkrg" name="" type="_r5ZjAIZXEe-bUZ-w3fFkrg" association="_sA-xtIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA-xt4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA-xuIZXEe-bUZ-w3fFkrg _r_829YZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA-xuIZXEe-bUZ-w3fFkrg" name="" type="_r5axIIZXEe-bUZ-w3fFkrg" association="_sA-xt4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA-xuoZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA-xu4ZXEe-bUZ-w3fFkrg _r_9eAIZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA-xu4ZXEe-bUZ-w3fFkrg" name="" type="_r5axIIZXEe-bUZ-w3fFkrg" association="_sA-xuoZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA_YwYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA_YwoZXEe-bUZ-w3fFkrg _r_9eBIZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA_YwoZXEe-bUZ-w3fFkrg" name="" type="_r5bYMIZXEe-bUZ-w3fFkrg" association="_sA_YwYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA_YxIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA_YxYZXEe-bUZ-w3fFkrg _r_-FGIZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA_YxYZXEe-bUZ-w3fFkrg" name="" type="_r5dNbIZXEe-bUZ-w3fFkrg" association="_sA_YxIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA_Yx4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA_YyIZXEe-bUZ-w3fFkrg _r_-FGoZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA_YyIZXEe-bUZ-w3fFkrg" name="" type="_r5dNbIZXEe-bUZ-w3fFkrg" association="_sA_Yx4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA_YyoZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA_Yy4ZXEe-bUZ-w3fFkrg _r_-FHIZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA_Yy4ZXEe-bUZ-w3fFkrg" name="" type="_r5dNbIZXEe-bUZ-w3fFkrg" association="_sA_YyoZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA__0YZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA__0oZXEe-bUZ-w3fFkrg _r_-sIYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA__0oZXEe-bUZ-w3fFkrg" name="" type="_r5dNbIZXEe-bUZ-w3fFkrg" association="_sA__0YZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA__1IZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA__1YZXEe-bUZ-w3fFkrg _r_-sI4ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA__1YZXEe-bUZ-w3fFkrg" name="" type="_r5dNbIZXEe-bUZ-w3fFkrg" association="_sA__1IZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA__14ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA__2IZXEe-bUZ-w3fFkrg _r__TMYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA__2IZXEe-bUZ-w3fFkrg" name="" type="_r5ebgIZXEe-bUZ-w3fFkrg" association="_sA__14ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA__2oZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA__24ZXEe-bUZ-w3fFkrg _r__TM4ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA__24ZXEe-bUZ-w3fFkrg" name="" type="_r5ebgIZXEe-bUZ-w3fFkrg" association="_sA__2oZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sA__3YZXEe-bUZ-w3fFkrg" name="" memberEnd="_sA__3oZXEe-bUZ-w3fFkrg _r__TOYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sA__3oZXEe-bUZ-w3fFkrg" name="" type="_r5fpoYZXEe-bUZ-w3fFkrg" association="_sA__3YZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBAm4YZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBAm4oZXEe-bUZ-w3fFkrg _r__6SYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBAm4oZXEe-bUZ-w3fFkrg" name="" type="_r5is8IZXEe-bUZ-w3fFkrg" association="_sBAm4YZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBAm5IZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBAm5YZXEe-bUZ-w3fFkrg _r__6S4ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBAm5YZXEe-bUZ-w3fFkrg" name="" type="_r5is8IZXEe-bUZ-w3fFkrg" association="_sBAm5IZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBAm54ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBAm6IZXEe-bUZ-w3fFkrg _sAAhUYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBAm6IZXEe-bUZ-w3fFkrg" name="" type="_r5is8IZXEe-bUZ-w3fFkrg" association="_sBAm54ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBAm6oZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBAm64ZXEe-bUZ-w3fFkrg _sAAhVoZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBAm64ZXEe-bUZ-w3fFkrg" name="" type="_r5is8IZXEe-bUZ-w3fFkrg" association="_sBAm6oZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBBN8YZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBBN8oZXEe-bUZ-w3fFkrg _sAAhW4ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBBN8oZXEe-bUZ-w3fFkrg" name="" type="_r5is8IZXEe-bUZ-w3fFkrg" association="_sBBN8YZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBBN9IZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBBN9YZXEe-bUZ-w3fFkrg _sAAhXYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBBN9YZXEe-bUZ-w3fFkrg" name="" type="_r5is8IZXEe-bUZ-w3fFkrg" association="_sBBN9IZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBBN94ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBBN-IZXEe-bUZ-w3fFkrg _sABIYIZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBBN-IZXEe-bUZ-w3fFkrg" name="" type="_r5is8IZXEe-bUZ-w3fFkrg" association="_sBBN94ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBBN-oZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBBN-4ZXEe-bUZ-w3fFkrg _sABIY4ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBBN-4ZXEe-bUZ-w3fFkrg" name="" type="_r5is8IZXEe-bUZ-w3fFkrg" association="_sBBN-oZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBBN_YZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBBN_oZXEe-bUZ-w3fFkrg _sABvdoZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBBN_oZXEe-bUZ-w3fFkrg" name="" type="_r5nlcIZXEe-bUZ-w3fFkrg" association="_sBBN_YZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBB1AYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBB1AoZXEe-bUZ-w3fFkrg _sABveIZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBB1AoZXEe-bUZ-w3fFkrg" name="" type="_r5nlcIZXEe-bUZ-w3fFkrg" association="_sBB1AYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBB1BIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBB1BYZXEe-bUZ-w3fFkrg _sABveoZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBB1BYZXEe-bUZ-w3fFkrg" name="" type="_r5nlcIZXEe-bUZ-w3fFkrg" association="_sBB1BIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBB1B4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBB1CIZXEe-bUZ-w3fFkrg _sACWhoZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBB1CIZXEe-bUZ-w3fFkrg" name="" type="_r5nlcIZXEe-bUZ-w3fFkrg" association="_sBB1B4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBB1CoZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBB1C4ZXEe-bUZ-w3fFkrg _sAC9kYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBB1C4ZXEe-bUZ-w3fFkrg" name="" type="_r5nlcIZXEe-bUZ-w3fFkrg" association="_sBB1CoZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBCcEIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBCcEYZXEe-bUZ-w3fFkrg _sADkooZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBCcEYZXEe-bUZ-w3fFkrg" name="" type="_r5tsEIZXEe-bUZ-w3fFkrg" association="_sBCcEIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBCcE4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBCcFIZXEe-bUZ-w3fFkrg _sADkpIZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBCcFIZXEe-bUZ-w3fFkrg" name="" type="_r5tsEIZXEe-bUZ-w3fFkrg" association="_sBCcE4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBCcFoZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBCcF4ZXEe-bUZ-w3fFkrg _sAELtYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBCcF4ZXEe-bUZ-w3fFkrg" name="" type="_r5xWe4ZXEe-bUZ-w3fFkrg" association="_sBCcFoZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBCcGYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBCcGoZXEe-bUZ-w3fFkrg _sAELt4ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBCcGoZXEe-bUZ-w3fFkrg" name="" type="_r5xWe4ZXEe-bUZ-w3fFkrg" association="_sBCcGYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBCcHIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBCcHYZXEe-bUZ-w3fFkrg _sAELu4ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBCcHYZXEe-bUZ-w3fFkrg" name="" type="_r5x9gIZXEe-bUZ-w3fFkrg" association="_sBCcHIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBDDIYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBDDIoZXEe-bUZ-w3fFkrg _sAFZ0YZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBDDIoZXEe-bUZ-w3fFkrg" name="" type="_r5zys4ZXEe-bUZ-w3fFkrg" association="_sBDDIYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBDDJIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBDDJYZXEe-bUZ-w3fFkrg _sAFZ04ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBDDJYZXEe-bUZ-w3fFkrg" name="" type="_r5zys4ZXEe-bUZ-w3fFkrg" association="_sBDDJIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBDDJ4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBDDKIZXEe-bUZ-w3fFkrg _sAGA6IZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBDDKIZXEe-bUZ-w3fFkrg" name="" type="_r58VkIZXEe-bUZ-w3fFkrg" association="_sBDDJ4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBDDKoZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBDDK4ZXEe-bUZ-w3fFkrg _sAGn8YZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBDDK4ZXEe-bUZ-w3fFkrg" name="" type="_r58VkIZXEe-bUZ-w3fFkrg" association="_sBDDKoZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBDqMYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBDqMoZXEe-bUZ-w3fFkrg _sAGn84ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBDqMoZXEe-bUZ-w3fFkrg" name="" type="_r58VkIZXEe-bUZ-w3fFkrg" association="_sBDqMYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBDqNIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBDqNYZXEe-bUZ-w3fFkrg _sAGn-4ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBDqNYZXEe-bUZ-w3fFkrg" name="" type="_r58VkIZXEe-bUZ-w3fFkrg" association="_sBDqNIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBDqN4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBDqOIZXEe-bUZ-w3fFkrg _sAGn_oZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBDqOIZXEe-bUZ-w3fFkrg" name="" type="_r58VkIZXEe-bUZ-w3fFkrg" association="_sBDqN4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBERQYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBERQoZXEe-bUZ-w3fFkrg _sAHPAoZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBERQoZXEe-bUZ-w3fFkrg" name="" type="_r58VkIZXEe-bUZ-w3fFkrg" association="_sBERQYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBERRIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBERRYZXEe-bUZ-w3fFkrg _sAHPBYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBERRYZXEe-bUZ-w3fFkrg" name="" type="_r58VkIZXEe-bUZ-w3fFkrg" association="_sBERRIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBERR4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBERSIZXEe-bUZ-w3fFkrg _sAHPB4ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBERSIZXEe-bUZ-w3fFkrg" name="" type="_r5-KwIZXEe-bUZ-w3fFkrg" association="_sBERR4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBERSoZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBERS4ZXEe-bUZ-w3fFkrg _sAJEMoZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBERS4ZXEe-bUZ-w3fFkrg" name="" type="_r6CcM4ZXEe-bUZ-w3fFkrg" association="_sBERSoZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBE4UYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBE4UoZXEe-bUZ-w3fFkrg _sAJENYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBE4UoZXEe-bUZ-w3fFkrg" name="" type="_r6CcM4ZXEe-bUZ-w3fFkrg" association="_sBE4UYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBE4VIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBE4VYZXEe-bUZ-w3fFkrg _sALgdYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBE4VYZXEe-bUZ-w3fFkrg" name="" type="_r6GGkIZXEe-bUZ-w3fFkrg" association="_sBE4VIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBE4V4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBE4WIZXEe-bUZ-w3fFkrg _sALgd4ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBE4WIZXEe-bUZ-w3fFkrg" name="" type="_r6GGkIZXEe-bUZ-w3fFkrg" association="_sBE4V4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBE4WoZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBE4W4ZXEe-bUZ-w3fFkrg _sAMHgIZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBE4W4ZXEe-bUZ-w3fFkrg" name="" type="_r6GGkIZXEe-bUZ-w3fFkrg" association="_sBE4WoZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBE4XYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBFfYIZXEe-bUZ-w3fFkrg _sAMHgoZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBFfYIZXEe-bUZ-w3fFkrg" name="" type="_r6GGkIZXEe-bUZ-w3fFkrg" association="_sBE4XYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBFfYoZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBFfY4ZXEe-bUZ-w3fFkrg _sAMHhIZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBFfY4ZXEe-bUZ-w3fFkrg" name="" type="_r6GGkIZXEe-bUZ-w3fFkrg" association="_sBFfYoZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBFfZYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBFfZoZXEe-bUZ-w3fFkrg _sAN8soZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBFfZoZXEe-bUZ-w3fFkrg" name="" type="_r6Jw8IZXEe-bUZ-w3fFkrg" association="_sBFfZYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBFfaIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBFfaYZXEe-bUZ-w3fFkrg _sAN8tYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBFfaYZXEe-bUZ-w3fFkrg" name="" type="_r6Jw8IZXEe-bUZ-w3fFkrg" association="_sBFfaIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBFfa4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBFfbIZXEe-bUZ-w3fFkrg _sAPK0YZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBFfbIZXEe-bUZ-w3fFkrg" name="" type="_r6RFsIZXEe-bUZ-w3fFkrg" association="_sBFfa4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBGGcYZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBGGcoZXEe-bUZ-w3fFkrg _sAPK1YZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBGGcoZXEe-bUZ-w3fFkrg" name="" type="_r6RFsIZXEe-bUZ-w3fFkrg" association="_sBGGcYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBGGdIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBGGdYZXEe-bUZ-w3fFkrg _sAPK2IZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBGGdYZXEe-bUZ-w3fFkrg" name="" type="_r6S64IZXEe-bUZ-w3fFkrg" association="_sBGGdIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBGGd4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBGGeIZXEe-bUZ-w3fFkrg _sARAA4ZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBGGeIZXEe-bUZ-w3fFkrg" name="" type="_r6UJAIZXEe-bUZ-w3fFkrg" association="_sBGGd4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBGGeoZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBGGe4ZXEe-bUZ-w3fFkrg _sARABoZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBGGe4ZXEe-bUZ-w3fFkrg" name="" type="_r6UJAIZXEe-bUZ-w3fFkrg" association="_sBGGeoZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBGtgYZXEe-bUZ-w3fFkrg" name="-" memberEnd="_sBGtgoZXEe-bUZ-w3fFkrg _sARnEIZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBGtgoZXEe-bUZ-w3fFkrg" name="" type="_r6ZokIZXEe-bUZ-w3fFkrg" association="_sBGtgYZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBGthIZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBGthYZXEe-bUZ-w3fFkrg _sARnEoZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBGthYZXEe-bUZ-w3fFkrg" name="" type="_r6ZokIZXEe-bUZ-w3fFkrg" association="_sBGthIZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sBGth4ZXEe-bUZ-w3fFkrg" name="" memberEnd="_sBGtiIZXEe-bUZ-w3fFkrg _sASOIYZXEe-bUZ-w3fFkrg">
              <ownedEnd xmi:id="_sBGtiIZXEe-bUZ-w3fFkrg" name="" type="_r6ZokIZXEe-bUZ-w3fFkrg" association="_sBGth4ZXEe-bUZ-w3fFkrg"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_r3pPhIZXEe-bUZ-w3fFkrg" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_r-gsiYZXEe-bUZ-w3fFkrg" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r-hTkYZXEe-bUZ-w3fFkrg" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r-hTk4ZXEe-bUZ-w3fFkrg" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r_oG0oZXEe-bUZ-w3fFkrg" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_r3xyYIZXEe-bUZ-w3fFkrg" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_r-rEmIZXEe-bUZ-w3fFkrg" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r3SDI4ZXEe-bUZ-w3fFkrg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_r3SqMIZXEe-bUZ-w3fFkrg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_r3b0IIZXEe-bUZ-w3fFkrg" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_r-ZXwIZXEe-bUZ-w3fFkrg" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_r4IXsIZXEe-bUZ-w3fFkrg" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_r-9_gYZXEe-bUZ-w3fFkrg" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_r5vhRoZXEe-bUZ-w3fFkrg" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-T4MIZXEe-bUZ-w3fFkrg" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-UfQIZXEe-bUZ-w3fFkrg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-UfQoZXEe-bUZ-w3fFkrg" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_r-UfRIZXEe-bUZ-w3fFkrg" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_r-UfRoZXEe-bUZ-w3fFkrg" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_r-bM9oZXEe-bUZ-w3fFkrg" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_r-ooUIZXEe-bUZ-w3fFkrg" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-rroYZXEe-bUZ-w3fFkrg" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-9YcIZXEe-bUZ-w3fFkrg" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_r-9YcoZXEe-bUZ-w3fFkrg" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-9YdIZXEe-bUZ-w3fFkrg" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r_AbwIZXEe-bUZ-w3fFkrg" name="Scanner"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r_EGI4ZXEe-bUZ-w3fFkrg" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_r_EtMYZXEe-bUZ-w3fFkrg" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_r3jv8IZXEe-bUZ-w3fFkrg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_r-dCIYZXEe-bUZ-w3fFkrg" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-dCI4ZXEe-bUZ-w3fFkrg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-kW5IZXEe-bUZ-w3fFkrg" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-k98YZXEe-bUZ-w3fFkrg" name="InputStreamReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r_HwgYZXEe-bUZ-w3fFkrg" name="ByteArrayOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r_Hwg4ZXEe-bUZ-w3fFkrg" name="PrintStream"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_r3jv8YZXEe-bUZ-w3fFkrg" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_r3jv8oZXEe-bUZ-w3fFkrg" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_r-dCJYZXEe-bUZ-w3fFkrg" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_r-dCJ4ZXEe-bUZ-w3fFkrg" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_r-dCKYZXEe-bUZ-w3fFkrg" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_r3qdoIZXEe-bUZ-w3fFkrg" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_r-jv0IZXEe-bUZ-w3fFkrg" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_r_QTYoZXEe-bUZ-w3fFkrg" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_r_QTY4ZXEe-bUZ-w3fFkrg" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r_bSgIZXEe-bUZ-w3fFkrg" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_r_hZI4ZXEe-bUZ-w3fFkrg" name="Double"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r_vbkIZXEe-bUZ-w3fFkrg" name="Exception"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r3jI4IZXEe-bUZ-w3fFkrg" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_r3jI4YZXEe-bUZ-w3fFkrg" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_r3jI4oZXEe-bUZ-w3fFkrg" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_r-cbE4ZXEe-bUZ-w3fFkrg" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r3jv84ZXEe-bUZ-w3fFkrg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_r3jv9IZXEe-bUZ-w3fFkrg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_r3qdoYZXEe-bUZ-w3fFkrg" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_r-kW4IZXEe-bUZ-w3fFkrg" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_r-kW4oZXEe-bUZ-w3fFkrg" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-dpMYZXEe-bUZ-w3fFkrg" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-jv0oZXEe-bUZ-w3fFkrg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-jv1IZXEe-bUZ-w3fFkrg" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-jv1oZXEe-bUZ-w3fFkrg" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r3oocIZXEe-bUZ-w3fFkrg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_r3pPgIZXEe-bUZ-w3fFkrg" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_r3pPgYZXEe-bUZ-w3fFkrg" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_r3pPgoZXEe-bUZ-w3fFkrg" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_r3pPg4ZXEe-bUZ-w3fFkrg" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_r-gshYZXEe-bUZ-w3fFkrg" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_r-gsh4ZXEe-bUZ-w3fFkrg" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r-gFeYZXEe-bUZ-w3fFkrg" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r-gsgYZXEe-bUZ-w3fFkrg" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_r-gsg4ZXEe-bUZ-w3fFkrg" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_r4SvwIZXEe-bUZ-w3fFkrg" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_r4TW0IZXEe-bUZ-w3fFkrg" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_r4TW0YZXEe-bUZ-w3fFkrg" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_r_HJcIZXEe-bUZ-w3fFkrg" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r_Hwh4ZXEe-bUZ-w3fFkrg" name="AfterEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r_IXkYZXEe-bUZ-w3fFkrg" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r_IXk4ZXEe-bUZ-w3fFkrg" name="RepeatedTest"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r_IXlYZXEe-bUZ-w3fFkrg" name="Test"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_r_HwhYZXEe-bUZ-w3fFkrg" name="Assert"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r3p2koZXEe-bUZ-w3fFkrg" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_r-hTnIZXEe-bUZ-w3fFkrg" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-h6poZXEe-bUZ-w3fFkrg" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-ihsIZXEe-bUZ-w3fFkrg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-iht4ZXEe-bUZ-w3fFkrg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-ihvoZXEe-bUZ-w3fFkrg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-jIxoZXEe-bUZ-w3fFkrg" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r_CQ84ZXEe-bUZ-w3fFkrg" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r_CQ-oZXEe-bUZ-w3fFkrg" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r_C4AoZXEe-bUZ-w3fFkrg" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r_C4CYZXEe-bUZ-w3fFkrg" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r4CREIZXEe-bUZ-w3fFkrg" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_r-344IZXEe-bUZ-w3fFkrg" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-347IZXEe-bUZ-w3fFkrg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-4f9oZXEe-bUZ-w3fFkrg" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-4f_YZXEe-bUZ-w3fFkrg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-5HBoZXEe-bUZ-w3fFkrg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-5HDYZXEe-bUZ-w3fFkrg" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r4EGQIZXEe-bUZ-w3fFkrg" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_r-6VIIZXEe-bUZ-w3fFkrg" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-6VIoZXEe-bUZ-w3fFkrg" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-6VJIZXEe-bUZ-w3fFkrg" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-6VJoZXEe-bUZ-w3fFkrg" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_r-68MYZXEe-bUZ-w3fFkrg" name="StringHolder"/>
    </packagedElement>
    <profileApplication xmi:id="_renEcIZXEe-bUZ-w3fFkrg">
      <eAnnotations xmi:id="_renEcYZXEe-bUZ-w3fFkrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_renEcoZXEe-bUZ-w3fFkrg" base_Package="_ramuMIZXEe-bUZ-w3fFkrg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_r5BvkYZXEe-bUZ-w3fFkrg" genericsValue="T,E" base_Element="_r5BvkIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5C9toZXEe-bUZ-w3fFkrg" base_Element="_r5C9tYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5C9t4ZXEe-bUZ-w3fFkrg" base_Element="_r5C9tYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5C9uIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r5DkwYZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r5DkwIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5Dkw4ZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r5DkwoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5DkxYZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r5DkxIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5EL0YZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r5EL0IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5EL04ZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r5EL0oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5JrbYZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r5Jra4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5LgkIZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r5K5h4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5N80oZXEe-bUZ-w3fFkrg" base_Element="_r5N80YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5N804ZXEe-bUZ-w3fFkrg" base_Element="_r5N80YZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5N81IZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5Oj4YZXEe-bUZ-w3fFkrg" base_Element="_r5Oj4IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5Oj4oZXEe-bUZ-w3fFkrg" base_Element="_r5Oj4IZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5Oj44ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5Oj5YZXEe-bUZ-w3fFkrg" base_Element="_r5Oj5IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5Oj5oZXEe-bUZ-w3fFkrg" base_Element="_r5Oj5IZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5Oj54ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r5PyAIZXEe-bUZ-w3fFkrg" genericsValue="T extends SchedulableObject" base_Element="_r5PK8YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5QZF4ZXEe-bUZ-w3fFkrg" base_Element="_r5QZFYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5QZGIZXEe-bUZ-w3fFkrg" base_Element="_r5QZFYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5QZGYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5RAIYZXEe-bUZ-w3fFkrg" base_Element="_r5RAIIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5RnO4ZXEe-bUZ-w3fFkrg" base_Element="_r5RnOYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5RnPIZXEe-bUZ-w3fFkrg" base_Element="_r5RnOYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5RnPYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5RnQIZXEe-bUZ-w3fFkrg" base_Element="_r5RnPoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5RnQYZXEe-bUZ-w3fFkrg" base_Element="_r5RnPoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5RnQoZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5SOQIZXEe-bUZ-w3fFkrg" base_Element="_r5RnQ4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5SOQYZXEe-bUZ-w3fFkrg" base_Element="_r5RnQ4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5SOQoZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r5VRl4ZXEe-bUZ-w3fFkrg" genericsValue="Node" base_Element="_r5VRloZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5V4oYZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r5V4oIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5V4o4ZXEe-bUZ-w3fFkrg" genericsValue="Integer" base_Element="_r5V4ooZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5Wft4ZXEe-bUZ-w3fFkrg" base_Element="_r5WftYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5WfuIZXEe-bUZ-w3fFkrg" base_Element="_r5WftYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5WfuYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5YU4oZXEe-bUZ-w3fFkrg" base_Element="_r5YU4YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5YU44ZXEe-bUZ-w3fFkrg" base_Element="_r5YU4YZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5YU5IZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r5axKoZXEe-bUZ-w3fFkrg" dimensions="2" base_Element="_r5axJIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5fCkYZXEe-bUZ-w3fFkrg" genericsValue="T extends SchedulableObject" base_Element="_r5fCkIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5fpoIZXEe-bUZ-w3fFkrg" genericsValue="T extends SchedulableObject" base_Element="_r5fCkoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5gQs4ZXEe-bUZ-w3fFkrg" base_Element="_r5gQsYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5gQtIZXEe-bUZ-w3fFkrg" base_Element="_r5gQsYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5gQtYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5gQvIZXEe-bUZ-w3fFkrg" base_Element="_r5gQuoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5gQvYZXEe-bUZ-w3fFkrg" base_Element="_r5gQuoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5gQvoZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5g3wIZXEe-bUZ-w3fFkrg" base_Element="_r5gQv4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5g3wYZXEe-bUZ-w3fFkrg" base_Element="_r5gQv4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5g3woZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5iF4YZXEe-bUZ-w3fFkrg" base_Element="_r5iF4IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5iF4oZXEe-bUZ-w3fFkrg" base_Element="_r5iF4IZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5iF44ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r5iF5YZXEe-bUZ-w3fFkrg" genericsValue="T extends SchedulableObject" base_Element="_r5iF5IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5is8oZXEe-bUZ-w3fFkrg" genericsValue="String, Integer" base_Element="_r5is8YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5jUAIZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r5is84ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Array xmi:id="_r5jUBIZXEe-bUZ-w3fFkrg" base_Element="_r5jUAYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5lwQYZXEe-bUZ-w3fFkrg" base_Element="_r5lwQIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5lwQoZXEe-bUZ-w3fFkrg" base_Element="_r5lwQIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5lwQ4ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r5m-YYZXEe-bUZ-w3fFkrg" genericsValue="T extends SchedulableObject" base_Element="_r5m-YIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5qBsIZXEe-bUZ-w3fFkrg" base_Element="_r5paqIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5qBsYZXEe-bUZ-w3fFkrg" base_Element="_r5paqIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5qBsoZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5qBt4ZXEe-bUZ-w3fFkrg" base_Element="_r5qBtYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5qBuIZXEe-bUZ-w3fFkrg" base_Element="_r5qBtYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5qBuYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5qBvIZXEe-bUZ-w3fFkrg" base_Element="_r5qBuoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5qBvYZXEe-bUZ-w3fFkrg" base_Element="_r5qBuoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5qBvoZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5qowIZXEe-bUZ-w3fFkrg" base_Element="_r5qBw4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5qowYZXEe-bUZ-w3fFkrg" base_Element="_r5qBw4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5qowoZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5qoxIZXEe-bUZ-w3fFkrg" base_Element="_r5qow4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5qoxYZXEe-bUZ-w3fFkrg" base_Element="_r5qow4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5qoxoZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5qoyYZXEe-bUZ-w3fFkrg" base_Element="_r5qox4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5qoyoZXEe-bUZ-w3fFkrg" base_Element="_r5qox4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5qoy4ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5qozoZXEe-bUZ-w3fFkrg" base_Element="_r5qozIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5qoz4ZXEe-bUZ-w3fFkrg" base_Element="_r5qozIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5qo0IZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5rP0IZXEe-bUZ-w3fFkrg" base_Element="_r5qo0oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5rP0YZXEe-bUZ-w3fFkrg" base_Element="_r5qo0oZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5rP0oZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r5rP1IZXEe-bUZ-w3fFkrg" genericsValue="String, Integer" base_Element="_r5rP04ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5tsEoZXEe-bUZ-w3fFkrg" base_Element="_r5tsEYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5tsE4ZXEe-bUZ-w3fFkrg" base_Element="_r5tsEYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5tsFIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5tsFoZXEe-bUZ-w3fFkrg" base_Element="_r5tsFYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5tsF4ZXEe-bUZ-w3fFkrg" base_Element="_r5tsFYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5tsGIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5tsGoZXEe-bUZ-w3fFkrg" base_Element="_r5tsGYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5uTIIZXEe-bUZ-w3fFkrg" base_Element="_r5tsGYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5uTIYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r5uTJYZXEe-bUZ-w3fFkrg" dimensions="1" base_Element="_r5uTIoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5uTJoZXEe-bUZ-w3fFkrg" base_Element="_r5uTIoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5uTJ4ZXEe-bUZ-w3fFkrg" base_Element="_r5uTIoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5uTKIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r5uTLIZXEe-bUZ-w3fFkrg" dimensions="2" base_Element="_r5uTKYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5uTLYZXEe-bUZ-w3fFkrg" base_Element="_r5uTKYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5uTLoZXEe-bUZ-w3fFkrg" base_Element="_r5uTKYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5uTL4ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r5u6MYZXEe-bUZ-w3fFkrg" genericsValue="T extends SchedulableObject" base_Element="_r5u6MIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5vhQYZXEe-bUZ-w3fFkrg" genericsValue="T extends SchedulableObject" base_Element="_r5vhQIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r5vhR4ZXEe-bUZ-w3fFkrg" base_Element="_r5vhRoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5wIUIZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r5vhSIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5x9goZXEe-bUZ-w3fFkrg" base_Element="_r5x9gYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r5x9g4ZXEe-bUZ-w3fFkrg" base_Element="_r5x9gYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r5x9hIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r5ykkYZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r5ykkIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5zysIZXEe-bUZ-w3fFkrg" genericsValue="T extends SchedulableObject" base_Element="_r5zLqIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r5zysoZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r5zysYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r54EKIZXEe-bUZ-w3fFkrg" genericsValue="T extends SchedulableObject" base_Element="_r54EJ4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r54rNYZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r54rNIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r55SQIZXEe-bUZ-w3fFkrg" base_Element="_r54rN4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r555UoZXEe-bUZ-w3fFkrg" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_r555UYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r57HcoZXEe-bUZ-w3fFkrg" base_Element="_r57HcYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r57He4ZXEe-bUZ-w3fFkrg" base_Element="_r57HeoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r58VkoZXEe-bUZ-w3fFkrg" base_Element="_r58VkYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r58Vk4ZXEe-bUZ-w3fFkrg" base_Element="_r58VkYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r58VlIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r588oIZXEe-bUZ-w3fFkrg" base_Element="_r58VlYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r588oYZXEe-bUZ-w3fFkrg" base_Element="_r58VlYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r588ooZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r588pYZXEe-bUZ-w3fFkrg" base_Element="_r588o4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r588poZXEe-bUZ-w3fFkrg" base_Element="_r588o4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r588p4ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r5-x3oZXEe-bUZ-w3fFkrg" base_Element="_r5-x24ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Array xmi:id="_r5_Y4oZXEe-bUZ-w3fFkrg" dimensions="2" base_Element="_r5-x34ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r6CcMoZXEe-bUZ-w3fFkrg" genericsValue="InstructionParameters" base_Element="_r6CcMIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r6DDQIZXEe-bUZ-w3fFkrg" genericsValue="InstructionParameters" base_Element="_r6CcOIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Array xmi:id="_r6E4coZXEe-bUZ-w3fFkrg" dimensions="1" base_Element="_r6E4cIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Array xmi:id="_r6E4doZXEe-bUZ-w3fFkrg" dimensions="1" base_Element="_r6E4dIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6GtoYZXEe-bUZ-w3fFkrg" base_Element="_r6GtoIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6GtooZXEe-bUZ-w3fFkrg" base_Element="_r6GtoIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6Gto4ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6GtpYZXEe-bUZ-w3fFkrg" base_Element="_r6GtpIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6GtpoZXEe-bUZ-w3fFkrg" base_Element="_r6GtpIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6Gtp4ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6GtqYZXEe-bUZ-w3fFkrg" base_Element="_r6GtqIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6HUsIZXEe-bUZ-w3fFkrg" base_Element="_r6GtqIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6HUsYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6HUs4ZXEe-bUZ-w3fFkrg" base_Element="_r6HUsoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6HUtIZXEe-bUZ-w3fFkrg" base_Element="_r6HUsoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6HUtYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6HUt4ZXEe-bUZ-w3fFkrg" base_Element="_r6HUtoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6HUuIZXEe-bUZ-w3fFkrg" base_Element="_r6HUtoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6HUuYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6HUu4ZXEe-bUZ-w3fFkrg" base_Element="_r6HUuoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6HUvIZXEe-bUZ-w3fFkrg" base_Element="_r6HUuoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6HUvYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6HUwIZXEe-bUZ-w3fFkrg" base_Element="_r6HUvoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6HUwYZXEe-bUZ-w3fFkrg" base_Element="_r6HUvoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6HUwoZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6H7wYZXEe-bUZ-w3fFkrg" base_Element="_r6HUw4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6H7woZXEe-bUZ-w3fFkrg" base_Element="_r6HUw4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6H7w4ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6H7xoZXEe-bUZ-w3fFkrg" base_Element="_r6H7xIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6H7x4ZXEe-bUZ-w3fFkrg" base_Element="_r6H7xIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6H7yIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6H7yoZXEe-bUZ-w3fFkrg" base_Element="_r6H7yYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6H7y4ZXEe-bUZ-w3fFkrg" base_Element="_r6H7yYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6H7zIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6H7zoZXEe-bUZ-w3fFkrg" base_Element="_r6H7zYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6H7z4ZXEe-bUZ-w3fFkrg" base_Element="_r6H7zYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6H70IZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6Ii0IZXEe-bUZ-w3fFkrg" base_Element="_r6H70YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6Ii0YZXEe-bUZ-w3fFkrg" base_Element="_r6H70YZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6Ii0oZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6Ii1YZXEe-bUZ-w3fFkrg" base_Element="_r6Ii04ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6Ii1oZXEe-bUZ-w3fFkrg" base_Element="_r6Ii04ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6Ii14ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6Ii2oZXEe-bUZ-w3fFkrg" base_Element="_r6Ii2IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6Ii24ZXEe-bUZ-w3fFkrg" base_Element="_r6Ii2IZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6Ii3IZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6Ii34ZXEe-bUZ-w3fFkrg" base_Element="_r6Ii3YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6Ii4IZXEe-bUZ-w3fFkrg" base_Element="_r6Ii3YZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6Ii4YZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6Ii44ZXEe-bUZ-w3fFkrg" base_Element="_r6Ii4oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6Ii5IZXEe-bUZ-w3fFkrg" base_Element="_r6Ii4oZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6Ii5YZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r6NbV4ZXEe-bUZ-w3fFkrg" base_Element="_r6NbVIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Array xmi:id="_r6NbXYZXEe-bUZ-w3fFkrg" dimensions="1" base_Element="_r6NbWoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Array xmi:id="_r6OCZ4ZXEe-bUZ-w3fFkrg" base_Element="_r6OCY4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Array xmi:id="_r6Opd4ZXEe-bUZ-w3fFkrg" base_Element="_r6Opc4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6RswYZXEe-bUZ-w3fFkrg" base_Element="_r6RswIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6RswoZXEe-bUZ-w3fFkrg" base_Element="_r6RswIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6Rsw4ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6RsxYZXEe-bUZ-w3fFkrg" base_Element="_r6RsxIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6RsxoZXEe-bUZ-w3fFkrg" base_Element="_r6RsxIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6Rsx4ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6ST0YZXEe-bUZ-w3fFkrg" base_Element="_r6RsyIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6ST0oZXEe-bUZ-w3fFkrg" base_Element="_r6RsyIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6ST04ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r6VXMYZXEe-bUZ-w3fFkrg" genericsValue="Integer" base_Element="_r6VXMIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6a2sIZXEe-bUZ-w3fFkrg" base_Element="_r6aPo4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6a2sYZXEe-bUZ-w3fFkrg" base_Element="_r6aPo4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6a2soZXEe-bUZ-w3fFkrg" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6a2tIZXEe-bUZ-w3fFkrg" base_Element="_r6a2s4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6a2tYZXEe-bUZ-w3fFkrg" base_Element="_r6a2s4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6a2toZXEe-bUZ-w3fFkrg" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6bdwIZXEe-bUZ-w3fFkrg" base_Element="_r6a2t4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6bdwYZXEe-bUZ-w3fFkrg" base_Element="_r6a2t4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6bdwoZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6bdxIZXEe-bUZ-w3fFkrg" base_Element="_r6bdw4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6bdxYZXEe-bUZ-w3fFkrg" base_Element="_r6bdw4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6bdxoZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6bdyIZXEe-bUZ-w3fFkrg" base_Element="_r6bdx4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6bdyYZXEe-bUZ-w3fFkrg" base_Element="_r6bdx4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6bdyoZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6cE0IZXEe-bUZ-w3fFkrg" base_Element="_r6bdy4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6cE0YZXEe-bUZ-w3fFkrg" base_Element="_r6bdy4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6cE0oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6cE1IZXEe-bUZ-w3fFkrg" base_Element="_r6cE04ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6cE1YZXEe-bUZ-w3fFkrg" base_Element="_r6cE04ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6cE1oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6cE2IZXEe-bUZ-w3fFkrg" base_Element="_r6cE14ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6cE2YZXEe-bUZ-w3fFkrg" base_Element="_r6cE14ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6cE2oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6cE3IZXEe-bUZ-w3fFkrg" base_Element="_r6cE24ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6cE3YZXEe-bUZ-w3fFkrg" base_Element="_r6cE24ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6cE3oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6cE4IZXEe-bUZ-w3fFkrg" base_Element="_r6cE34ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6cE4YZXEe-bUZ-w3fFkrg" base_Element="_r6cE34ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6cE4oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6cE5IZXEe-bUZ-w3fFkrg" base_Element="_r6cE44ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6cE5YZXEe-bUZ-w3fFkrg" base_Element="_r6cE44ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6cE5oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6cr4IZXEe-bUZ-w3fFkrg" base_Element="_r6cE54ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6cr4YZXEe-bUZ-w3fFkrg" base_Element="_r6cE54ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6cr4oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6cr5IZXEe-bUZ-w3fFkrg" base_Element="_r6cr44ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6cr5YZXEe-bUZ-w3fFkrg" base_Element="_r6cr44ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6cr5oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6cr6IZXEe-bUZ-w3fFkrg" base_Element="_r6cr54ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6cr6YZXEe-bUZ-w3fFkrg" base_Element="_r6cr54ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6cr6oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6cr7IZXEe-bUZ-w3fFkrg" base_Element="_r6cr64ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6cr7YZXEe-bUZ-w3fFkrg" base_Element="_r6cr64ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6cr7oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6cr8IZXEe-bUZ-w3fFkrg" base_Element="_r6cr74ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6cr8YZXEe-bUZ-w3fFkrg" base_Element="_r6cr74ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6cr8oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6dS8IZXEe-bUZ-w3fFkrg" base_Element="_r6cr84ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6dS8YZXEe-bUZ-w3fFkrg" base_Element="_r6cr84ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6dS8oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6dS9IZXEe-bUZ-w3fFkrg" base_Element="_r6dS84ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6dS9YZXEe-bUZ-w3fFkrg" base_Element="_r6dS84ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6dS9oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6dS-IZXEe-bUZ-w3fFkrg" base_Element="_r6dS94ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6dS-YZXEe-bUZ-w3fFkrg" base_Element="_r6dS94ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6dS-oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6dS_IZXEe-bUZ-w3fFkrg" base_Element="_r6dS-4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6dS_YZXEe-bUZ-w3fFkrg" base_Element="_r6dS-4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6dS_oZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6dTAIZXEe-bUZ-w3fFkrg" base_Element="_r6dS_4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6dTAYZXEe-bUZ-w3fFkrg" base_Element="_r6dS_4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6dTAoZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6d6AIZXEe-bUZ-w3fFkrg" base_Element="_r6dTA4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6d6AYZXEe-bUZ-w3fFkrg" base_Element="_r6dTA4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6d6AoZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6d6BIZXEe-bUZ-w3fFkrg" base_Element="_r6d6A4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6d6BYZXEe-bUZ-w3fFkrg" base_Element="_r6d6A4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6d6BoZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6d6CIZXEe-bUZ-w3fFkrg" base_Element="_r6d6B4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6d6CYZXEe-bUZ-w3fFkrg" base_Element="_r6d6B4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6d6CoZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6d6DIZXEe-bUZ-w3fFkrg" base_Element="_r6d6C4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6d6DYZXEe-bUZ-w3fFkrg" base_Element="_r6d6C4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6d6DoZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6d6EIZXEe-bUZ-w3fFkrg" base_Element="_r6d6D4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6d6EYZXEe-bUZ-w3fFkrg" base_Element="_r6d6D4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6ehEIZXEe-bUZ-w3fFkrg" name="RepeatedTest">
      <annotationParameters xmi:id="_r6ehEYZXEe-bUZ-w3fFkrg" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_5J5EAZZCEe-S5LJtyBrH7w" value="500"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6ehFIZXEe-bUZ-w3fFkrg" base_Element="_r6ehE4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6ehFYZXEe-bUZ-w3fFkrg" base_Element="_r6ehE4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6ehFoZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6ehGIZXEe-bUZ-w3fFkrg" base_Element="_r6ehF4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6ehGYZXEe-bUZ-w3fFkrg" base_Element="_r6ehF4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6ehGoZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6ehHIZXEe-bUZ-w3fFkrg" base_Element="_r6ehG4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6ehHYZXEe-bUZ-w3fFkrg" base_Element="_r6ehG4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6ehHoZXEe-bUZ-w3fFkrg" name="RepeatedTest">
      <annotationParameters xmi:id="_r6ehH4ZXEe-bUZ-w3fFkrg" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_5J5EBJZCEe-S5LJtyBrH7w" value="500"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6fIIoZXEe-bUZ-w3fFkrg" base_Element="_r6fIIYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6fII4ZXEe-bUZ-w3fFkrg" base_Element="_r6fIIYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6fIJIZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6fIJoZXEe-bUZ-w3fFkrg" base_Element="_r6fIJYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6fIJ4ZXEe-bUZ-w3fFkrg" base_Element="_r6fIJYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6fIKIZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6fIKoZXEe-bUZ-w3fFkrg" base_Element="_r6fIKYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6fIK4ZXEe-bUZ-w3fFkrg" base_Element="_r6fIKYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6fILIZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6fILoZXEe-bUZ-w3fFkrg" base_Element="_r6fILYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6fIL4ZXEe-bUZ-w3fFkrg" base_Element="_r6fILYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6fIMIZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6fIMoZXEe-bUZ-w3fFkrg" base_Element="_r6fIMYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6fvMIZXEe-bUZ-w3fFkrg" base_Element="_r6fIMYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6fvMYZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6fvM4ZXEe-bUZ-w3fFkrg" base_Element="_r6fvMoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6fvNIZXEe-bUZ-w3fFkrg" base_Element="_r6fvMoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6fvNYZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6fvN4ZXEe-bUZ-w3fFkrg" base_Element="_r6fvNoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6fvOIZXEe-bUZ-w3fFkrg" base_Element="_r6fvNoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6fvOYZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6fvO4ZXEe-bUZ-w3fFkrg" base_Element="_r6fvOoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6fvPIZXEe-bUZ-w3fFkrg" base_Element="_r6fvOoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6fvPYZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6fvP4ZXEe-bUZ-w3fFkrg" base_Element="_r6fvPoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6fvQIZXEe-bUZ-w3fFkrg" base_Element="_r6fvPoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6fvQYZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6fvQ4ZXEe-bUZ-w3fFkrg" base_Element="_r6fvQoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6fvRIZXEe-bUZ-w3fFkrg" base_Element="_r6fvQoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6fvRYZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6gWQIZXEe-bUZ-w3fFkrg" base_Element="_r6fvRoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6gWQYZXEe-bUZ-w3fFkrg" base_Element="_r6fvRoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6gWQoZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6gWRYZXEe-bUZ-w3fFkrg" base_Element="_r6gWRIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6gWRoZXEe-bUZ-w3fFkrg" base_Element="_r6gWRIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6gWR4ZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6gWSYZXEe-bUZ-w3fFkrg" base_Element="_r6gWSIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6gWSoZXEe-bUZ-w3fFkrg" base_Element="_r6gWSIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6gWS4ZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6gWTYZXEe-bUZ-w3fFkrg" base_Element="_r6gWTIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6gWToZXEe-bUZ-w3fFkrg" base_Element="_r6gWTIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6gWT4ZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6gWUYZXEe-bUZ-w3fFkrg" base_Element="_r6gWUIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6gWUoZXEe-bUZ-w3fFkrg" base_Element="_r6gWUIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6gWU4ZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6g9UIZXEe-bUZ-w3fFkrg" base_Element="_r6gWVIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6g9UYZXEe-bUZ-w3fFkrg" base_Element="_r6gWVIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6g9UoZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6g9VIZXEe-bUZ-w3fFkrg" base_Element="_r6g9U4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6g9VYZXEe-bUZ-w3fFkrg" base_Element="_r6g9U4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6g9VoZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6g9WIZXEe-bUZ-w3fFkrg" base_Element="_r6g9V4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r6g9WYZXEe-bUZ-w3fFkrg" base_Element="_r6g9V4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r6g9WoZXEe-bUZ-w3fFkrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-T4MYZXEe-bUZ-w3fFkrg" base_Element="_r-T4MIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-UfQYZXEe-bUZ-w3fFkrg" base_Element="_r-UfQIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-UfQ4ZXEe-bUZ-w3fFkrg" base_Element="_r-UfQoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-UfRYZXEe-bUZ-w3fFkrg" base_Element="_r-UfRIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-VGUIZXEe-bUZ-w3fFkrg" base_Element="_r-UfRoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-VtZoZXEe-bUZ-w3fFkrg" base_Element="_r-VtY4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-WUcIZXEe-bUZ-w3fFkrg" base_Element="_r-VtY4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-WUcYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r-W7goZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r-W7gYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r-W7hYZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r-W7hIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r-YJoIZXEe-bUZ-w3fFkrg" genericsValue="String, Activation" base_Element="_r-XikIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-ZXwYZXEe-bUZ-w3fFkrg" base_Element="_r-ZXwIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-Z-34ZXEe-bUZ-w3fFkrg" base_Element="_r-Z-3IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-al4IZXEe-bUZ-w3fFkrg" base_Element="_r-Z-3IZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-al4YZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-bM94ZXEe-bUZ-w3fFkrg" base_Element="_r-bM9oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-b0A4ZXEe-bUZ-w3fFkrg" base_Element="_r-b0AIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-cbEIZXEe-bUZ-w3fFkrg" base_Element="_r-b0AIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-cbEYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-dCIIZXEe-bUZ-w3fFkrg" base_Element="_r-cbE4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-dCIoZXEe-bUZ-w3fFkrg" base_Element="_r-dCIYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-dCJIZXEe-bUZ-w3fFkrg" base_Element="_r-dCI4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-dCJoZXEe-bUZ-w3fFkrg" base_Element="_r-dCJYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-dCKIZXEe-bUZ-w3fFkrg" base_Element="_r-dCJ4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-dpMIZXEe-bUZ-w3fFkrg" base_Element="_r-dCKYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-dpMoZXEe-bUZ-w3fFkrg" base_Element="_r-dpMYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-eQR4ZXEe-bUZ-w3fFkrg" base_Element="_r-eQRIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-eQSIZXEe-bUZ-w3fFkrg" base_Element="_r-eQRIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-eQSYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r-feYIZXEe-bUZ-w3fFkrg" genericsValue="String, Flow" base_Element="_r-e3UIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r-feYoZXEe-bUZ-w3fFkrg" genericsValue="Node, Activation" base_Element="_r-feYYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-gsgIZXEe-bUZ-w3fFkrg" base_Element="_r-gFeYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-gsgoZXEe-bUZ-w3fFkrg" base_Element="_r-gsgYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-gshIZXEe-bUZ-w3fFkrg" base_Element="_r-gsg4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-gshoZXEe-bUZ-w3fFkrg" base_Element="_r-gshYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-gsiIZXEe-bUZ-w3fFkrg" base_Element="_r-gsh4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-hTkIZXEe-bUZ-w3fFkrg" base_Element="_r-gsiYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-hTkoZXEe-bUZ-w3fFkrg" base_Element="_r-hTkYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-hTlIZXEe-bUZ-w3fFkrg" base_Element="_r-hTk4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-h6oIZXEe-bUZ-w3fFkrg" base_Element="_r-hTnIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-h6o4ZXEe-bUZ-w3fFkrg" base_Element="_r-h6oYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-h6pIZXEe-bUZ-w3fFkrg" base_Element="_r-h6oYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-h6pYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-h6p4ZXEe-bUZ-w3fFkrg" base_Element="_r-h6poZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-h6qoZXEe-bUZ-w3fFkrg" base_Element="_r-h6qIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-h6q4ZXEe-bUZ-w3fFkrg" base_Element="_r-h6qIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-h6rIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-ihsYZXEe-bUZ-w3fFkrg" base_Element="_r-ihsIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-ihtIZXEe-bUZ-w3fFkrg" base_Element="_r-ihsoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-ihtYZXEe-bUZ-w3fFkrg" base_Element="_r-ihsoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-ihtoZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-ihuIZXEe-bUZ-w3fFkrg" base_Element="_r-iht4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-ihu4ZXEe-bUZ-w3fFkrg" base_Element="_r-ihuYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-ihvIZXEe-bUZ-w3fFkrg" base_Element="_r-ihuYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-ihvYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-jIwIZXEe-bUZ-w3fFkrg" base_Element="_r-ihvoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-jIw4ZXEe-bUZ-w3fFkrg" base_Element="_r-jIwYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-jIxIZXEe-bUZ-w3fFkrg" base_Element="_r-jIwYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-jIxYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-jIx4ZXEe-bUZ-w3fFkrg" base_Element="_r-jIxoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-jIyoZXEe-bUZ-w3fFkrg" base_Element="_r-jIyIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-jIy4ZXEe-bUZ-w3fFkrg" base_Element="_r-jIyIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-jIzIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-jv0YZXEe-bUZ-w3fFkrg" base_Element="_r-jv0IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-jv04ZXEe-bUZ-w3fFkrg" base_Element="_r-jv0oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-jv1YZXEe-bUZ-w3fFkrg" base_Element="_r-jv1IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-jv14ZXEe-bUZ-w3fFkrg" base_Element="_r-jv1oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-kW4YZXEe-bUZ-w3fFkrg" base_Element="_r-kW4IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-kW44ZXEe-bUZ-w3fFkrg" base_Element="_r-kW4oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-k98IZXEe-bUZ-w3fFkrg" base_Element="_r-kW5IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-k98oZXEe-bUZ-w3fFkrg" base_Element="_r-k98YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r-llAYZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r-llAIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-llA4ZXEe-bUZ-w3fFkrg" base_Element="_r-llAoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-naMYZXEe-bUZ-w3fFkrg" base_Element="_r-mzIYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-naMoZXEe-bUZ-w3fFkrg" base_Element="_r-mzIYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-naM4ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r-oBQIZXEe-bUZ-w3fFkrg" genericsValue="String, Node" base_Element="_r-naN4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-ooUYZXEe-bUZ-w3fFkrg" base_Element="_r-ooUIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-p2eYZXEe-bUZ-w3fFkrg" base_Element="_r-p2doZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-p2eoZXEe-bUZ-w3fFkrg" base_Element="_r-p2doZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-p2e4ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r-qdhYZXEe-bUZ-w3fFkrg" genericsValue="ScheduleTime" base_Element="_r-qdgIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-rElIZXEe-bUZ-w3fFkrg" base_Element="_r-rEkYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-rElYZXEe-bUZ-w3fFkrg" base_Element="_r-rEkYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-rEloZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-rroIZXEe-bUZ-w3fFkrg" base_Element="_r-rEmIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-rrooZXEe-bUZ-w3fFkrg" base_Element="_r-rroYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r-uH4YZXEe-bUZ-w3fFkrg" genericsValue="String,InstructionTimeSlot" base_Element="_r-uH4IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r-vWAIZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r-uu-YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r-vWB4ZXEe-bUZ-w3fFkrg" genericsValue="Double" base_Element="_r-vWBoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r-v9EYZXEe-bUZ-w3fFkrg" genericsValue="Double,ReliabilityRow" base_Element="_r-v9EIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r-zncIZXEe-bUZ-w3fFkrg" genericsValue="Activation,Row&lt;Activation>" base_Element="_r-zAYIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r-zndoZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r-zncoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-0OgIZXEe-bUZ-w3fFkrg" base_Element="_r-zneIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-01kIZXEe-bUZ-w3fFkrg" base_Element="_r-0OhoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-01koZXEe-bUZ-w3fFkrg" base_Element="_r-01kYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-344YZXEe-bUZ-w3fFkrg" base_Element="_r-344IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-345IZXEe-bUZ-w3fFkrg" base_Element="_r-344oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-345YZXEe-bUZ-w3fFkrg" base_Element="_r-344oZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-345oZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-346YZXEe-bUZ-w3fFkrg" base_Element="_r-3454ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-346oZXEe-bUZ-w3fFkrg" base_Element="_r-3454ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-3464ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-4f8IZXEe-bUZ-w3fFkrg" base_Element="_r-347IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-4f84ZXEe-bUZ-w3fFkrg" base_Element="_r-4f8YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-4f9IZXEe-bUZ-w3fFkrg" base_Element="_r-4f8YZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-4f9YZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-4f94ZXEe-bUZ-w3fFkrg" base_Element="_r-4f9oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-4f-oZXEe-bUZ-w3fFkrg" base_Element="_r-4f-IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-4f-4ZXEe-bUZ-w3fFkrg" base_Element="_r-4f-IZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-4f_IZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-5HAIZXEe-bUZ-w3fFkrg" base_Element="_r-4f_YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-5HA4ZXEe-bUZ-w3fFkrg" base_Element="_r-5HAYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-5HBIZXEe-bUZ-w3fFkrg" base_Element="_r-5HAYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-5HBYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-5HB4ZXEe-bUZ-w3fFkrg" base_Element="_r-5HBoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-5HCoZXEe-bUZ-w3fFkrg" base_Element="_r-5HCIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-5HC4ZXEe-bUZ-w3fFkrg" base_Element="_r-5HCIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-5HDIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-5uEIZXEe-bUZ-w3fFkrg" base_Element="_r-5HDYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-5uE4ZXEe-bUZ-w3fFkrg" base_Element="_r-5uEYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r-5uFIZXEe-bUZ-w3fFkrg" base_Element="_r-5uEYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r-5uFYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r-6VIYZXEe-bUZ-w3fFkrg" base_Element="_r-6VIIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-6VI4ZXEe-bUZ-w3fFkrg" base_Element="_r-6VIoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-6VJYZXEe-bUZ-w3fFkrg" base_Element="_r-6VJIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-68MIZXEe-bUZ-w3fFkrg" base_Element="_r-6VJoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-68MoZXEe-bUZ-w3fFkrg" base_Element="_r-68MYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-9YcYZXEe-bUZ-w3fFkrg" base_Element="_r-9YcIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-9Yc4ZXEe-bUZ-w3fFkrg" base_Element="_r-9YcoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-9_gIZXEe-bUZ-w3fFkrg" base_Element="_r-9YdIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r-9_goZXEe-bUZ-w3fFkrg" base_Element="_r-9_gYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r--mkoZXEe-bUZ-w3fFkrg" genericsValue="Integer" base_Element="_r--mkIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_AbwYZXEe-bUZ-w3fFkrg" base_Element="_r_AbwIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_BC1IZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r_BC0oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_Bp6YZXEe-bUZ-w3fFkrg" base_Element="_r_Bp54ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_Bp6oZXEe-bUZ-w3fFkrg" base_Element="_r_Bp54ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_Bp64ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_CQ8IZXEe-bUZ-w3fFkrg" base_Element="_r_Bp7IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_CQ8YZXEe-bUZ-w3fFkrg" base_Element="_r_Bp7IZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_CQ8oZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_CQ9IZXEe-bUZ-w3fFkrg" base_Element="_r_CQ84ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_CQ94ZXEe-bUZ-w3fFkrg" base_Element="_r_CQ9YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_CQ-IZXEe-bUZ-w3fFkrg" base_Element="_r_CQ9YZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_CQ-YZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_CQ-4ZXEe-bUZ-w3fFkrg" base_Element="_r_CQ-oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_CQ_oZXEe-bUZ-w3fFkrg" base_Element="_r_CQ_IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_C4AIZXEe-bUZ-w3fFkrg" base_Element="_r_CQ_IZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_C4AYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_C4A4ZXEe-bUZ-w3fFkrg" base_Element="_r_C4AoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_C4BoZXEe-bUZ-w3fFkrg" base_Element="_r_C4BIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_C4B4ZXEe-bUZ-w3fFkrg" base_Element="_r_C4BIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_C4CIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_C4CoZXEe-bUZ-w3fFkrg" base_Element="_r_C4CYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_C4DYZXEe-bUZ-w3fFkrg" base_Element="_r_C4C4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_C4DoZXEe-bUZ-w3fFkrg" base_Element="_r_C4C4ZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_C4D4ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_DfEoZXEe-bUZ-w3fFkrg" base_Element="_r_DfEIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_DfE4ZXEe-bUZ-w3fFkrg" base_Element="_r_DfEIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_DfFIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_DfF4ZXEe-bUZ-w3fFkrg" base_Element="_r_DfFYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_DfGIZXEe-bUZ-w3fFkrg" base_Element="_r_DfFYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_DfGYZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_EGIIZXEe-bUZ-w3fFkrg" base_Element="_r_DfGoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_EGIYZXEe-bUZ-w3fFkrg" base_Element="_r_DfGoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_EGIoZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_EtMIZXEe-bUZ-w3fFkrg" base_Element="_r_EGI4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_EtMoZXEe-bUZ-w3fFkrg" base_Element="_r_EtMYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_HwgIZXEe-bUZ-w3fFkrg" base_Element="_r_HJcIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_HwgoZXEe-bUZ-w3fFkrg" base_Element="_r_HwgYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_HwhIZXEe-bUZ-w3fFkrg" base_Element="_r_Hwg4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_HwhoZXEe-bUZ-w3fFkrg" base_Element="_r_HwhYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_IXkIZXEe-bUZ-w3fFkrg" base_Element="_r_Hwh4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_IXkoZXEe-bUZ-w3fFkrg" base_Element="_r_IXkYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_IXlIZXEe-bUZ-w3fFkrg" base_Element="_r_IXk4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_IXloZXEe-bUZ-w3fFkrg" base_Element="_r_IXlYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_QTYYZXEe-bUZ-w3fFkrg" genericsValue="T, E" base_Element="_r_QTYIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_Q6cIZXEe-bUZ-w3fFkrg" base_Element="_r_QTY4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_Q6coZXEe-bUZ-w3fFkrg" genericsValue="Activation" base_Element="_r_Q6cYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_RhgIZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r_Q6dIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_Rhg4ZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r_RhgoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_SIkIZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r_RhhYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_SIk4ZXEe-bUZ-w3fFkrg" genericsValue="ScheduleTime" base_Element="_r_SIkoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_TWsIZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r_SvoIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_Uk0IZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r_T9woZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_Uk0YZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r_T9w4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_VL4oZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r_VL4YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_Vy8IZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r_VL5IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_Vy8oZXEe-bUZ-w3fFkrg" genericsValue="Activation" base_Element="_r_Vy8YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_WaA4ZXEe-bUZ-w3fFkrg" base_Element="_r_WaAIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_XBEIZXEe-bUZ-w3fFkrg" genericsValue="Node" base_Element="_r_WaAYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_XBEYZXEe-bUZ-w3fFkrg" base_Element="_r_WaAIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_XBEoZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r_XBFIZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r_XBE4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_XBFoZXEe-bUZ-w3fFkrg" base_Element="_r_XBFYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_XoJIZXEe-bUZ-w3fFkrg" base_Element="_r_XoIIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_XoJYZXEe-bUZ-w3fFkrg" base_Element="_r_XoIIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_XoJoZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r_XoKIZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r_XoJ4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_YPMYZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r_YPMIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_Y2QYZXEe-bUZ-w3fFkrg" genericsValue="Flow" base_Element="_r_Y2QIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_ZdVYZXEe-bUZ-w3fFkrg" genericsValue="Node" base_Element="_r_ZdVIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_aEYIZXEe-bUZ-w3fFkrg" genericsValue="Integer" base_Element="_r_ZdV4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_bSgYZXEe-bUZ-w3fFkrg" base_Element="_r_bSgIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_b5kYZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r_b5kIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_cgoIZXEe-bUZ-w3fFkrg" base_Element="_r_b5koZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_cgoYZXEe-bUZ-w3fFkrg" base_Element="_r_b5koZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_cgooZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r_cgpIZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r_cgo4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_cgqYZXEe-bUZ-w3fFkrg" base_Element="_r_cgpYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_cgqoZXEe-bUZ-w3fFkrg" base_Element="_r_cgpYZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_cgq4ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r_dHsYZXEe-bUZ-w3fFkrg" genericsValue="Node" base_Element="_r_dHsIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_duwYZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r_duwIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_duxoZXEe-bUZ-w3fFkrg" base_Element="_r_duwoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_dux4ZXEe-bUZ-w3fFkrg" base_Element="_r_duwoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_duyIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r_eV1YZXEe-bUZ-w3fFkrg" genericsValue="Node" base_Element="_r_eV04ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Array xmi:id="_r_eV2oZXEe-bUZ-w3fFkrg" base_Element="_r_eV1oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_e84IZXEe-bUZ-w3fFkrg" genericsValue="Node" base_Element="_r_eV14ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_e84oZXEe-bUZ-w3fFkrg" base_Element="_r_e84YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_fj9IZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r_fj84ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_gLAoZXEe-bUZ-w3fFkrg" base_Element="_r_fj9YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_gLA4ZXEe-bUZ-w3fFkrg" base_Element="_r_fj9YZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_gLBIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_gLBoZXEe-bUZ-w3fFkrg" base_Element="_r_gLBYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_hZJIZXEe-bUZ-w3fFkrg" base_Element="_r_hZI4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_inQYZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r_inQIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_inRoZXEe-bUZ-w3fFkrg" base_Element="_r_inQoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_inR4ZXEe-bUZ-w3fFkrg" base_Element="_r_inQoZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_jOUIZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r_j1bYZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r_j1bIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_kcdYZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r_kccYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_kcfIZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r_kcd4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_lDgIZXEe-bUZ-w3fFkrg" genericsValue="T" base_Element="_r_kceIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_lqkoZXEe-bUZ-w3fFkrg" genericsValue="E" base_Element="_r_lqkYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_mRoIZXEe-bUZ-w3fFkrg" base_Element="_r_lqk4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_mRqYZXEe-bUZ-w3fFkrg" base_Element="_r_mRqIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_r_m4tIZXEe-bUZ-w3fFkrg" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_r_m4soZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_m4tYZXEe-bUZ-w3fFkrg" base_Element="_r_m4soZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_nfx4ZXEe-bUZ-w3fFkrg" base_Element="_r_nfxIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_nfyIZXEe-bUZ-w3fFkrg" genericsValue="Node" base_Element="_r_nfxYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Annotations xmi:id="_r_nfyYZXEe-bUZ-w3fFkrg" base_Element="_r_nfxIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_r_oG0IZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r_oG04ZXEe-bUZ-w3fFkrg" base_Element="_r_oG0oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_sYSIZXEe-bUZ-w3fFkrg" genericsValue="Integer" base_Element="_r_sYQ4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_tmY4ZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r_tmYoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_r_vbkYZXEe-bUZ-w3fFkrg" base_Element="_r_vbkIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_wCooZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r_wCoYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_2JQIZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r_1iMoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_2JQoZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r_2JQYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_2JRIZXEe-bUZ-w3fFkrg" genericsValue="ScheduleTime" base_Element="_r_2JQ4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_2wU4ZXEe-bUZ-w3fFkrg" base_Element="_r_2wUoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_2wVYZXEe-bUZ-w3fFkrg" base_Element="_r_2wVIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_2wV4ZXEe-bUZ-w3fFkrg" base_Element="_r_2wVoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_3XZYZXEe-bUZ-w3fFkrg" base_Element="_r_3XZIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_3XZ4ZXEe-bUZ-w3fFkrg" base_Element="_r_3XZoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_3Xa4ZXEe-bUZ-w3fFkrg" base_Element="_r_3XaoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_3XbYZXEe-bUZ-w3fFkrg" base_Element="_r_3XbIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_3-cIZXEe-bUZ-w3fFkrg" genericsValue="ChannelSet" base_Element="_r_3XboZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_3-cYZXEe-bUZ-w3fFkrg" base_Element="_r_3XboZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_3-dYZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r_3-dIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_3-doZXEe-bUZ-w3fFkrg" base_Element="_r_3-dIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_4lgIZXEe-bUZ-w3fFkrg" base_Element="_r_3-d4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_4lgoZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_r_4lgYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_4lg4ZXEe-bUZ-w3fFkrg" base_Element="_r_4lgYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_4lhYZXEe-bUZ-w3fFkrg" base_Element="_r_4lhIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_4lh4ZXEe-bUZ-w3fFkrg" base_Element="_r_4lhoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_5MkYZXEe-bUZ-w3fFkrg" base_Element="_r_5MkIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_5Mk4ZXEe-bUZ-w3fFkrg" base_Element="_r_5MkoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_5MlYZXEe-bUZ-w3fFkrg" base_Element="_r_5MlIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_5Ml4ZXEe-bUZ-w3fFkrg" base_Element="_r_5MloZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_6asIZXEe-bUZ-w3fFkrg" base_Element="_r_5zqYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_6av4ZXEe-bUZ-w3fFkrg" base_Element="_r_6avYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_7BwIZXEe-bUZ-w3fFkrg" base_Element="_r_6awIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_7BwoZXEe-bUZ-w3fFkrg" base_Element="_r_7BwYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_7BxIZXEe-bUZ-w3fFkrg" genericsValue="Node" base_Element="_r_7Bw4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_7BxYZXEe-bUZ-w3fFkrg" base_Element="_r_7Bw4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_7Bx4ZXEe-bUZ-w3fFkrg" genericsValue="Integer" base_Element="_r_7BxoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_7ByIZXEe-bUZ-w3fFkrg" base_Element="_r_7BxoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_7o0IZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r_7ByYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_7o0YZXEe-bUZ-w3fFkrg" base_Element="_r_7ByYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_7o04ZXEe-bUZ-w3fFkrg" base_Element="_r_7o0oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_7o1YZXEe-bUZ-w3fFkrg" base_Element="_r_7o1IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_8P6IZXEe-bUZ-w3fFkrg" base_Element="_r_8P54ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_8P6oZXEe-bUZ-w3fFkrg" base_Element="_r_8P6YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_8P7IZXEe-bUZ-w3fFkrg" base_Element="_r_8P64ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_8P7oZXEe-bUZ-w3fFkrg" base_Element="_r_8P7YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_828IZXEe-bUZ-w3fFkrg" base_Element="_r_8P74ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_828oZXEe-bUZ-w3fFkrg" base_Element="_r_828YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_829IZXEe-bUZ-w3fFkrg" base_Element="_r_8284ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_829oZXEe-bUZ-w3fFkrg" base_Element="_r_829YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_9eAYZXEe-bUZ-w3fFkrg" base_Element="_r_9eAIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_9eBYZXEe-bUZ-w3fFkrg" base_Element="_r_9eBIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_9eCIZXEe-bUZ-w3fFkrg" base_Element="_r_9eB4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_9eC4ZXEe-bUZ-w3fFkrg" base_Element="_r_9eCYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_-FFIZXEe-bUZ-w3fFkrg" base_Element="_r_-FEoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_-FFoZXEe-bUZ-w3fFkrg" base_Element="_r_-FFYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_-FGYZXEe-bUZ-w3fFkrg" base_Element="_r_-FGIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_-FG4ZXEe-bUZ-w3fFkrg" base_Element="_r_-FGoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_-sIIZXEe-bUZ-w3fFkrg" base_Element="_r_-FHIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_-sIoZXEe-bUZ-w3fFkrg" base_Element="_r_-sIYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r_-sJIZXEe-bUZ-w3fFkrg" genericsValue="String, Integer" base_Element="_r_-sI4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r_-sJYZXEe-bUZ-w3fFkrg" base_Element="_r_-sI4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r__TMoZXEe-bUZ-w3fFkrg" base_Element="_r__TMYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r__TNIZXEe-bUZ-w3fFkrg" base_Element="_r__TM4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_r__TOoZXEe-bUZ-w3fFkrg" genericsValue="Edge" base_Element="_r__TOYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r__6SoZXEe-bUZ-w3fFkrg" base_Element="_r__6SYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAAhUIZXEe-bUZ-w3fFkrg" base_Element="_r__6S4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAAhVYZXEe-bUZ-w3fFkrg" base_Element="_sAAhUYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAAhWoZXEe-bUZ-w3fFkrg" base_Element="_sAAhVoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAAhXIZXEe-bUZ-w3fFkrg" base_Element="_sAAhW4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_sAAhXoZXEe-bUZ-w3fFkrg" genericsValue="Activation" base_Element="_sAAhXYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAAhX4ZXEe-bUZ-w3fFkrg" base_Element="_sAAhXYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_sABIYYZXEe-bUZ-w3fFkrg" genericsValue="String, Integer" base_Element="_sABIYIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sABIYoZXEe-bUZ-w3fFkrg" base_Element="_sABIYIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sABIZIZXEe-bUZ-w3fFkrg" base_Element="_sABIY4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sABvd4ZXEe-bUZ-w3fFkrg" base_Element="_sABvdoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sABveYZXEe-bUZ-w3fFkrg" base_Element="_sABveIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sABve4ZXEe-bUZ-w3fFkrg" base_Element="_sABveoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sABvfYZXEe-bUZ-w3fFkrg" base_Element="_sABvfIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sABvf4ZXEe-bUZ-w3fFkrg" base_Element="_sABvfoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sACWgYZXEe-bUZ-w3fFkrg" base_Element="_sACWgIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sACWg4ZXEe-bUZ-w3fFkrg" base_Element="_sACWgoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sACWhYZXEe-bUZ-w3fFkrg" base_Element="_sACWhIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sACWh4ZXEe-bUZ-w3fFkrg" base_Element="_sACWhoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sACWiYZXEe-bUZ-w3fFkrg" base_Element="_sACWiIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sACWi4ZXEe-bUZ-w3fFkrg" base_Element="_sACWioZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAC9kIZXEe-bUZ-w3fFkrg" base_Element="_sACWjIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAC9koZXEe-bUZ-w3fFkrg" base_Element="_sAC9kYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sADko4ZXEe-bUZ-w3fFkrg" base_Element="_sADkooZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sADkpYZXEe-bUZ-w3fFkrg" base_Element="_sADkpIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sADkp4ZXEe-bUZ-w3fFkrg" base_Element="_sADkpoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAELtoZXEe-bUZ-w3fFkrg" base_Element="_sAELtYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAELuIZXEe-bUZ-w3fFkrg" base_Element="_sAELt4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAELvIZXEe-bUZ-w3fFkrg" base_Element="_sAELu4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAELvoZXEe-bUZ-w3fFkrg" base_Element="_sAELvYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAEyx4ZXEe-bUZ-w3fFkrg" base_Element="_sAEyxoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAEyyYZXEe-bUZ-w3fFkrg" base_Element="_sAEyyIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAEyzIZXEe-bUZ-w3fFkrg" base_Element="_sAEyyoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAFZ0IZXEe-bUZ-w3fFkrg" base_Element="_sAEyzYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAFZ0oZXEe-bUZ-w3fFkrg" base_Element="_sAFZ0YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAFZ1IZXEe-bUZ-w3fFkrg" base_Element="_sAFZ04ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAFZ1oZXEe-bUZ-w3fFkrg" base_Element="_sAFZ1YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAFZ2IZXEe-bUZ-w3fFkrg" base_Element="_sAFZ14ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAGn8IZXEe-bUZ-w3fFkrg" base_Element="_sAGA6IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAGn8oZXEe-bUZ-w3fFkrg" base_Element="_sAGn8YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAGn9IZXEe-bUZ-w3fFkrg" base_Element="_sAGn84ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAGn9oZXEe-bUZ-w3fFkrg" base_Element="_sAGn9YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAGn-IZXEe-bUZ-w3fFkrg" base_Element="_sAGn94ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAGn-oZXEe-bUZ-w3fFkrg" base_Element="_sAGn-YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAGn_YZXEe-bUZ-w3fFkrg" base_Element="_sAGn-4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAHPAYZXEe-bUZ-w3fFkrg" base_Element="_sAGn_oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAHPBIZXEe-bUZ-w3fFkrg" base_Element="_sAHPAoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAHPBoZXEe-bUZ-w3fFkrg" base_Element="_sAHPBYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAHPCIZXEe-bUZ-w3fFkrg" base_Element="_sAHPB4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAHPCoZXEe-bUZ-w3fFkrg" base_Element="_sAHPCYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAH2EIZXEe-bUZ-w3fFkrg" base_Element="_sAHPC4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Array xmi:id="_sAH2FYZXEe-bUZ-w3fFkrg" dimensions="2" base_Element="_sAH2E4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAH2FoZXEe-bUZ-w3fFkrg" base_Element="_sAH2E4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAIdLoZXEe-bUZ-w3fFkrg" base_Element="_sAIdLIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAJEMYZXEe-bUZ-w3fFkrg" base_Element="_sAJEMIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_sAJEM4ZXEe-bUZ-w3fFkrg" genericsValue="InstructionParameters" base_Element="_sAJEMoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAJENIZXEe-bUZ-w3fFkrg" base_Element="_sAJEMoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAJENoZXEe-bUZ-w3fFkrg" base_Element="_sAJENYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAJrTYZXEe-bUZ-w3fFkrg" base_Element="_sAJrTIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAKSUIZXEe-bUZ-w3fFkrg" base_Element="_sAJrToZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAKSUoZXEe-bUZ-w3fFkrg" base_Element="_sAKSUYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAKSVIZXEe-bUZ-w3fFkrg" base_Element="_sAKSU4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAKSVoZXEe-bUZ-w3fFkrg" base_Element="_sAKSVYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAKSWIZXEe-bUZ-w3fFkrg" base_Element="_sAKSV4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAKSWoZXEe-bUZ-w3fFkrg" base_Element="_sAKSWYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAKSXIZXEe-bUZ-w3fFkrg" base_Element="_sAKSW4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAK5YIZXEe-bUZ-w3fFkrg" base_Element="_sAKSXYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAK5YoZXEe-bUZ-w3fFkrg" base_Element="_sAK5YYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAK5ZIZXEe-bUZ-w3fFkrg" base_Element="_sAK5Y4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAK5ZoZXEe-bUZ-w3fFkrg" base_Element="_sAK5ZYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAK5aIZXEe-bUZ-w3fFkrg" base_Element="_sAK5Z4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAK5aoZXEe-bUZ-w3fFkrg" base_Element="_sAK5aYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAK5bYZXEe-bUZ-w3fFkrg" base_Element="_sAK5a4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sALgcIZXEe-bUZ-w3fFkrg" base_Element="_sAK5boZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sALgcoZXEe-bUZ-w3fFkrg" base_Element="_sALgcYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sALgdIZXEe-bUZ-w3fFkrg" base_Element="_sALgc4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sALgdoZXEe-bUZ-w3fFkrg" base_Element="_sALgdYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sALgeIZXEe-bUZ-w3fFkrg" base_Element="_sALgd4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAMHgYZXEe-bUZ-w3fFkrg" base_Element="_sAMHgIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAMHg4ZXEe-bUZ-w3fFkrg" base_Element="_sAMHgoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAMHhYZXEe-bUZ-w3fFkrg" base_Element="_sAMHhIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAMHh4ZXEe-bUZ-w3fFkrg" base_Element="_sAMHhoZXEe-bUZ-w3fFkrg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sAMHiIZXEe-bUZ-w3fFkrg" name="getNumChannels" method="_sAkiFYZXEe-bUZ-w3fFkrg">
      <ownedParameter xmi:id="_sAMHiYZXEe-bUZ-w3fFkrg" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_sAMHioZXEe-bUZ-w3fFkrg" base_Element="_sAMHiIZXEe-bUZ-w3fFkrg">
    <annotations xmi:id="_sAMHi4ZXEe-bUZ-w3fFkrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAMukIZXEe-bUZ-w3fFkrg" base_Element="_sAMHjIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAMuk4ZXEe-bUZ-w3fFkrg" base_Element="_sAMukYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sANVqoZXEe-bUZ-w3fFkrg" base_Element="_sANVqIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sANVr4ZXEe-bUZ-w3fFkrg" base_Element="_sANVrYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAN8sYZXEe-bUZ-w3fFkrg" base_Element="_sAN8sIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_sAN8s4ZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_sAN8soZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_sAN8toZXEe-bUZ-w3fFkrg" genericsValue="String" base_Element="_sAN8tYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAPK0oZXEe-bUZ-w3fFkrg" base_Element="_sAPK0YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAPK1IZXEe-bUZ-w3fFkrg" base_Element="_sAPK04ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAPK1oZXEe-bUZ-w3fFkrg" base_Element="_sAPK1YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAPK2YZXEe-bUZ-w3fFkrg" base_Element="_sAPK2IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAPx4IZXEe-bUZ-w3fFkrg" base_Element="_sAPK2oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAQY8IZXEe-bUZ-w3fFkrg" base_Element="_sAPx64ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAQY9YZXEe-bUZ-w3fFkrg" base_Element="_sAQY9IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAQY94ZXEe-bUZ-w3fFkrg" base_Element="_sAQY9oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sAQY-YZXEe-bUZ-w3fFkrg" base_Element="_sAQY-IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_sARABIZXEe-bUZ-w3fFkrg" genericsValue="Integer" base_Element="_sARAA4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sARABYZXEe-bUZ-w3fFkrg" base_Element="_sARAA4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Generics xmi:id="_sARAB4ZXEe-bUZ-w3fFkrg" genericsValue="SchedulableObject" base_Element="_sARABoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sARnEYZXEe-bUZ-w3fFkrg" base_Element="_sARnEIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sASOIIZXEe-bUZ-w3fFkrg" base_Element="_sARnEoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sASOI4ZXEe-bUZ-w3fFkrg" base_Element="_sASOIYZXEe-bUZ-w3fFkrg"/>
  <uml:OpaqueBehavior xmi:id="_sAkiFYZXEe-bUZ-w3fFkrg" name="getNumChannels" specification="_sAMHiIZXEe-bUZ-w3fFkrg">
    <ownedParameter xmi:id="_sAkiFoZXEe-bUZ-w3fFkrg" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_sA8VcIZXEe-bUZ-w3fFkrg" base_Element="_sA7uYIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA8Vc4ZXEe-bUZ-w3fFkrg" base_Element="_sA8VcYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA8VdoZXEe-bUZ-w3fFkrg" base_Element="_sA8VdIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA8VeYZXEe-bUZ-w3fFkrg" base_Element="_sA8Vd4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA88gIZXEe-bUZ-w3fFkrg" base_Element="_sA8VeoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA88g4ZXEe-bUZ-w3fFkrg" base_Element="_sA88gYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA88hoZXEe-bUZ-w3fFkrg" base_Element="_sA88hIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA88iYZXEe-bUZ-w3fFkrg" base_Element="_sA88h4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA9jkIZXEe-bUZ-w3fFkrg" base_Element="_sA88ioZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA9jk4ZXEe-bUZ-w3fFkrg" base_Element="_sA9jkYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA9jloZXEe-bUZ-w3fFkrg" base_Element="_sA9jlIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA9jmYZXEe-bUZ-w3fFkrg" base_Element="_sA9jl4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA-KoIZXEe-bUZ-w3fFkrg" base_Element="_sA9jmoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA-Ko4ZXEe-bUZ-w3fFkrg" base_Element="_sA-KoYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA-KpoZXEe-bUZ-w3fFkrg" base_Element="_sA-KpIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA-KqYZXEe-bUZ-w3fFkrg" base_Element="_sA-Kp4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA-KrIZXEe-bUZ-w3fFkrg" base_Element="_sA-KqoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA-xsIZXEe-bUZ-w3fFkrg" base_Element="_sA-KrYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA-xs4ZXEe-bUZ-w3fFkrg" base_Element="_sA-xsYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA-xtoZXEe-bUZ-w3fFkrg" base_Element="_sA-xtIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA-xuYZXEe-bUZ-w3fFkrg" base_Element="_sA-xt4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA_YwIZXEe-bUZ-w3fFkrg" base_Element="_sA-xuoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA_Yw4ZXEe-bUZ-w3fFkrg" base_Element="_sA_YwYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA_YxoZXEe-bUZ-w3fFkrg" base_Element="_sA_YxIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA_YyYZXEe-bUZ-w3fFkrg" base_Element="_sA_Yx4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA__0IZXEe-bUZ-w3fFkrg" base_Element="_sA_YyoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA__04ZXEe-bUZ-w3fFkrg" base_Element="_sA__0YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA__1oZXEe-bUZ-w3fFkrg" base_Element="_sA__1IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA__2YZXEe-bUZ-w3fFkrg" base_Element="_sA__14ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sA__3IZXEe-bUZ-w3fFkrg" base_Element="_sA__2oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBAm4IZXEe-bUZ-w3fFkrg" base_Element="_sA__3YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBAm44ZXEe-bUZ-w3fFkrg" base_Element="_sBAm4YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBAm5oZXEe-bUZ-w3fFkrg" base_Element="_sBAm5IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBAm6YZXEe-bUZ-w3fFkrg" base_Element="_sBAm54ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBBN8IZXEe-bUZ-w3fFkrg" base_Element="_sBAm6oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBBN84ZXEe-bUZ-w3fFkrg" base_Element="_sBBN8YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBBN9oZXEe-bUZ-w3fFkrg" base_Element="_sBBN9IZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBBN-YZXEe-bUZ-w3fFkrg" base_Element="_sBBN94ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBBN_IZXEe-bUZ-w3fFkrg" base_Element="_sBBN-oZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBB1AIZXEe-bUZ-w3fFkrg" base_Element="_sBBN_YZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBB1A4ZXEe-bUZ-w3fFkrg" base_Element="_sBB1AYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBB1BoZXEe-bUZ-w3fFkrg" base_Element="_sBB1BIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBB1CYZXEe-bUZ-w3fFkrg" base_Element="_sBB1B4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBB1DIZXEe-bUZ-w3fFkrg" base_Element="_sBB1CoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBCcEoZXEe-bUZ-w3fFkrg" base_Element="_sBCcEIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBCcFYZXEe-bUZ-w3fFkrg" base_Element="_sBCcE4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBCcGIZXEe-bUZ-w3fFkrg" base_Element="_sBCcFoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBCcG4ZXEe-bUZ-w3fFkrg" base_Element="_sBCcGYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBDDIIZXEe-bUZ-w3fFkrg" base_Element="_sBCcHIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBDDI4ZXEe-bUZ-w3fFkrg" base_Element="_sBDDIYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBDDJoZXEe-bUZ-w3fFkrg" base_Element="_sBDDJIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBDDKYZXEe-bUZ-w3fFkrg" base_Element="_sBDDJ4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBDqMIZXEe-bUZ-w3fFkrg" base_Element="_sBDDKoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBDqM4ZXEe-bUZ-w3fFkrg" base_Element="_sBDqMYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBDqNoZXEe-bUZ-w3fFkrg" base_Element="_sBDqNIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBERQIZXEe-bUZ-w3fFkrg" base_Element="_sBDqN4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBERQ4ZXEe-bUZ-w3fFkrg" base_Element="_sBERQYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBERRoZXEe-bUZ-w3fFkrg" base_Element="_sBERRIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBERSYZXEe-bUZ-w3fFkrg" base_Element="_sBERR4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBE4UIZXEe-bUZ-w3fFkrg" base_Element="_sBERSoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBE4U4ZXEe-bUZ-w3fFkrg" base_Element="_sBE4UYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBE4VoZXEe-bUZ-w3fFkrg" base_Element="_sBE4VIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBE4WYZXEe-bUZ-w3fFkrg" base_Element="_sBE4V4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBE4XIZXEe-bUZ-w3fFkrg" base_Element="_sBE4WoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBFfYYZXEe-bUZ-w3fFkrg" base_Element="_sBE4XYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBFfZIZXEe-bUZ-w3fFkrg" base_Element="_sBFfYoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBFfZ4ZXEe-bUZ-w3fFkrg" base_Element="_sBFfZYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBFfaoZXEe-bUZ-w3fFkrg" base_Element="_sBFfaIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBGGcIZXEe-bUZ-w3fFkrg" base_Element="_sBFfa4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBGGc4ZXEe-bUZ-w3fFkrg" base_Element="_sBGGcYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBGGdoZXEe-bUZ-w3fFkrg" base_Element="_sBGGdIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBGGeYZXEe-bUZ-w3fFkrg" base_Element="_sBGGd4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBGtgIZXEe-bUZ-w3fFkrg" base_Element="_sBGGeoZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBGtg4ZXEe-bUZ-w3fFkrg" base_Element="_sBGtgYZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBGthoZXEe-bUZ-w3fFkrg" base_Element="_sBGthIZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Reference xmi:id="_sBGtiYZXEe-bUZ-w3fFkrg" base_Element="_sBGth4ZXEe-bUZ-w3fFkrg"/>
  <UMLLabProfile:Patch xmi:id="_snf_IIZXEe-bUZ-w3fFkrg" base_Element="_r5QZGoZXEe-bUZ-w3fFkrg" patchText="@@ -337,26 +337,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0A%09%09RELEASE&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_sngmMIZXEe-bUZ-w3fFkrg" base_Element="_r5dNbIZXEe-bUZ-w3fFkrg" patchText="@@ -242,22 +242,25 @@&#xA;  MISS%22;%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_sngmMYZXEe-bUZ-w3fFkrg" base_Element="_r54rNoZXEe-bUZ-w3fFkrg" patchText="@@ -109,18 +109,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0A%09    &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_snhNQIZXEe-bUZ-w3fFkrg" base_Element="_r57HcIZXEe-bUZ-w3fFkrg" patchText="@@ -134,26 +134,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0A    SOURC&#xA;@@ -269,18 +269,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0A    I&#xA;" conflicting="false"/>
  <UMLLabProfile:Generics xmi:id="_5GdVgJZCEe-S5LJtyBrH7w" genericsValue="Integer" base_Element="_5GcudZZCEe-S5LJtyBrH7w"/>
  <UMLLabProfile:Generics xmi:id="_5Gd8k5ZCEe-S5LJtyBrH7w" genericsValue="Integer" base_Element="_5Gd8kJZCEe-S5LJtyBrH7w"/>
  <UMLLabProfile:Generics xmi:id="_5Gejo5ZCEe-S5LJtyBrH7w" genericsValue="Double" base_Element="_5GejoJZCEe-S5LJtyBrH7w"/>
  <UMLLabProfile:Generics xmi:id="_5IXaAJZCEe-S5LJtyBrH7w" genericsValue="Integer" base_Element="_5IWL45ZCEe-S5LJtyBrH7w"/>
  <UMLLabProfile:Generics xmi:id="_5IYoIJZCEe-S5LJtyBrH7w" genericsValue="Integer" base_Element="_5IYBEJZCEe-S5LJtyBrH7w"/>
  <UMLLabProfile:Generics xmi:id="_5IZ2QJZCEe-S5LJtyBrH7w" genericsValue="Integer" base_Element="_5IZPMJZCEe-S5LJtyBrH7w"/>
  <UMLLabProfile:Generics xmi:id="_5IcSgJZCEe-S5LJtyBrH7w" genericsValue="Double" base_Element="_5IbEY5ZCEe-S5LJtyBrH7w"/>
  <UMLLabProfile:Generics xmi:id="_5Ic5kJZCEe-S5LJtyBrH7w" genericsValue="Double" base_Element="_5IbrcJZCEe-S5LJtyBrH7w"/>
  <UMLLabProfile:Generics xmi:id="_5Ic5kZZCEe-S5LJtyBrH7w" genericsValue="Integer" base_Element="_5IbrdJZCEe-S5LJtyBrH7w"/>
  <UMLLabProfile:Generics xmi:id="_5IeHsJZCEe-S5LJtyBrH7w" genericsValue="Double" base_Element="_5IdgopZCEe-S5LJtyBrH7w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5JFywZZCEe-S5LJtyBrH7w" base_Element="_5JFywJZCEe-S5LJtyBrH7w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5JGZ0ZZCEe-S5LJtyBrH7w" base_Element="_5JGZ0JZCEe-S5LJtyBrH7w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5JHA4JZCEe-S5LJtyBrH7w" base_Element="_5JGZ0pZCEe-S5LJtyBrH7w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5JHn8JZCEe-S5LJtyBrH7w" base_Element="_5JHA4ZZCEe-S5LJtyBrH7w"/>
  <UMLLabProfile:Patch xmi:id="_SOETIJZDEe-S5LJtyBrH7w" base_Element="_r6BOEIZXEe-bUZ-w3fFkrg" patchText="@@ -136,65 +136,8 @@&#xA;  */%0D&#xA;-%0Aimport edu.uiowa.cs.warp.WarpDSL.InstructionParameters;%0D&#xA; %0A%0D%0Ai&#xA;" conflicting="false"/>
</xmi:XMI>
